{"version":3,"file":"bundle.b0b6009adc14b943.js","mappings":"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","sources":["webpack:///./node_modules/three/build/three.module.js","webpack:///./node_modules/three/examples/jsm/controls/OrbitControls.js","webpack:///./node_modules/three/examples/jsm/geometries/TextGeometry.js","webpack:///./node_modules/three/examples/jsm/loaders/FontLoader.js","webpack:///./node_modules/troika-worker-utils/dist/troika-worker-utils.esm.js","webpack:///./node_modules/webgl-sdf-generator/dist/webgl-sdf-generator.mjs","webpack:///./node_modules/bidi-js/dist/bidi.mjs","webpack:///./node_modules/troika-three-utils/dist/troika-three-utils.esm.js","webpack:///./node_modules/troika-three-text/dist/troika-three-text.esm.js","webpack:///./src/script.js"],"sourcesContent":["/**\n * @license\n * Copyright 2010-2022 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '140';\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst FlatShading = 1;\nconst SmoothShading = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst LinearEncoding = 3000;\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [];\n\nfor ( let i = 0; i < 256; i ++ ) {\n\n\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n}\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize$1( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nvar MathUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize$1\n});\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nVector2.prototype.isVector2 = true;\n\nclass Matrix3 {\n\n\tconstructor() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tscale( sx, sy ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tconst te = this.elements;\n\n\t\tconst a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tconst a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nMatrix3.prototype.isMatrix3 = true;\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] > 65535 ) return true;\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\n// JavaScript RGB-to-RGB transforms, defined as\n// FN[InputColorSpace][OutputColorSpace] callback functions.\nconst FN = {\n\t[ SRGBColorSpace ]: { [ LinearSRGBColorSpace ]: SRGBToLinear },\n\t[ LinearSRGBColorSpace ]: { [ SRGBColorSpace ]: LinearToSRGB },\n};\n\nconst ColorManagement = {\n\n\tlegacyMode: true,\n\n\tget workingColorSpace() {\n\n\t\treturn LinearSRGBColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .workingColorSpace is readonly.' );\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.legacyMode || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tif ( FN[ sourceColorSpace ] && FN[ sourceColorSpace ][ targetColorSpace ] !== undefined ) {\n\n\t\t\tconst fn = FN[ sourceColorSpace ][ targetColorSpace ];\n\n\t\t\tcolor.r = fn( color.r );\n\t\t\tcolor.g = fn( color.g );\n\t\t\tcolor.b = fn( color.b );\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tthrow new Error( 'Unsupported color space conversion.' );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t},\n\n};\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _rgb = { r: 0, g: 0, b: 0 };\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction toComponents( source, target ) {\n\n\ttarget.r = source.r;\n\ttarget.g = source.g;\n\ttarget.b = source.b;\n\n\treturn target;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = LinearSRGBColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = LinearSRGBColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tconst l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l, colorSpace );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\treturn clamp( _rgb.r * 255, 0, 255 ) << 16 ^ clamp( _rgb.g * 255, 0, 255 ) << 8 ^ clamp( _rgb.b * 255, 0, 255 ) << 0;\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = LinearSRGBColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\tconst r = _rgb.r, g = _rgb.g, b = _rgb.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = LinearSRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\ttarget.r = _rgb.r;\n\t\ttarget.g = _rgb.g;\n\t\ttarget.b = _rgb.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ _rgb.r } ${ _rgb.g } ${ _rgb.b })`;\n\n\t\t}\n\n\t\treturn `rgb(${( _rgb.r * 255 ) | 0},${( _rgb.g * 255 ) | 0},${( _rgb.b * 255 ) | 0})`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\tif ( attribute.normalized === true ) {\n\n\t\t\t// assuming Uint8Array\n\n\t\t\tthis.r /= 255;\n\t\t\tthis.g /= 255;\n\t\t\tthis.b /= 255;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nColor.NAMES = _colorKeywords;\n\nColor.prototype.isColor = true;\nColor.prototype.r = 1;\nColor.prototype.g = 1;\nColor.prototype.b = 1;\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.prototype.slice.call( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nSource.prototype.isSource = true;\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding ) {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype.isTexture = true;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\nVector4.prototype.isVector4 = true;\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width, height, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t\tthis.samples = options.samples !== undefined ? options.samples : 0;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tthis.texture.image = Object.assign( {}, source.texture.image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nWebGLRenderTarget.prototype.isWebGLRenderTarget = true;\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nDataArrayTexture.prototype.isDataArrayTexture = true;\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, depth ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nWebGLArrayRenderTarget.prototype.isWebGLArrayRenderTarget = true;\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nData3DTexture.prototype.isData3DTexture = true;\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, depth ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nWebGL3DRenderTarget.prototype.isWebGL3DRenderTarget = true;\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width, height, count, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.set( 0, 0, this.width, this.height );\n\t\tthis.scissor.set( 0, 0, this.width, this.height );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nWebGLMultipleRenderTargets.prototype.isWebGLMultipleRenderTargets = true;\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerp( qa, qb, qm, t ) {\n\n\t\tconsole.warn( 'THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.' );\n\t\treturn qm.slerpQuaternions( qa, qb, t );\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nQuaternion.prototype.isQuaternion = true;\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nVector3.prototype.isVector3 = true;\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tconst x = array[ i ];\n\t\t\tconst y = array[ i + 1 ];\n\t\t\tconst z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tconst x = attribute.getX( i );\n\t\t\tconst y = attribute.getY( i );\n\t\t\tconst z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( precise && geometry.attributes != undefined && geometry.attributes.position !== undefined ) {\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\n\n\t\t\t\t\t_vector$b.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t}\n\n\t\t\t\t_box$3.copy( geometry.boundingBox );\n\t\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$3 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$3.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$3, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$3 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$b.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nBox3.prototype.isBox3 = true;\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _toFarthestPoint = /*@__PURE__*/ new Vector3();\nconst _toPoint = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n\n\t\t_toPoint.subVectors( point, this.center );\n\n\t\tconst lengthSq = _toPoint.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\t\t\tconst missingRadiusHalf = ( length - this.radius ) * 0.5;\n\n\t\t\t// Nudge this sphere towards the target point. Add half the missing distance to radius,\n\t\t\t// and the other half to position. This gives a tighter enclosure, instead of if\n\t\t\t// the whole missing distance were just added to radius.\n\n\t\t\tthis.center.add( _toPoint.multiplyScalar( missingRadiusHalf / length ) );\n\t\t\tthis.radius += missingRadiusHalf;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n\n\t\t// To enclose another sphere into this sphere, we only need to enclose two points:\n\t\t// 1) Enclose the farthest point on the other sphere into this sphere.\n\t\t// 2) Enclose the opposite point of the farthest point into this sphere.\n\n\t\t if ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t _toFarthestPoint.set( 0, 0, 1 ).multiplyScalar( sphere.radius );\n\n\n\t\t} else {\n\n\t\t\t_toFarthestPoint.subVectors( sphere.center, this.center ).normalize().multiplyScalar( sphere.radius );\n\n\t\t}\n\n\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _toFarthestPoint ) );\n\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _toFarthestPoint ) );\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nMatrix4.prototype.isMatrix4 = true;\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$1.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$1, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.prototype.isEuler = true;\n\nEuler.DefaultOrder = 'XYZ';\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype.isObject3D = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3$1.x );\n\t\ttarget.addScaledVector( uv2, _v3$1.y );\n\t\ttarget.addScaledVector( uv3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nlet materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatibility if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nMaterial.prototype.isMaterial = true;\n\nMaterial.fromType = function ( /*type*/ ) {\n\n\t// TODO: Behavior added in Materials.js\n\n\treturn null;\n\n};\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tcopyColorsArray( colors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tlet color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector2sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector3sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector4sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.prototype.slice.call( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n}\n\nBufferAttribute.prototype.isBufferAttribute = true;\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nFloat16BufferAttribute.prototype.isFloat16BufferAttribute = true;\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$1.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tmerge( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tconst attribute1 = attributes[ key ];\n\t\t\tconst attributeArray1 = attribute1.array;\n\n\t\t\tconst attribute2 = geometry.attributes[ key ];\n\t\t\tconst attributeArray2 = attribute2.array;\n\n\t\t\tconst attributeOffset = attribute2.itemSize * offset;\n\t\t\tconst length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\tfor ( let i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\t return new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\t// geometry generator parameters\n\n\t\tif ( source.parameters !== undefined ) this.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nBufferGeometry.prototype.isBufferGeometry = true;\n\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _tempB = /*@__PURE__*/ new Vector3();\nconst _tempC = /*@__PURE__*/ new Vector3();\n\nconst _morphA = /*@__PURE__*/ new Vector3();\nconst _morphB = /*@__PURE__*/ new Vector3();\nconst _morphC = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$3.copy( geometry.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// Check boundingBox before continuing\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\tlet intersection;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\tconst uv = geometry.attributes.uv;\n\t\t\tconst uv2 = geometry.attributes.uv2;\n\t\t\tconst groups = geometry.groups;\n\t\t\tconst drawRange = geometry.drawRange;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t// indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\tconst a = i;\n\t\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t}\n\n}\n\nMesh.prototype.isMesh = true;\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n\n\t_vA$1.fromBufferAttribute( position, a );\n\t_vB$1.fromBufferAttribute( position, b );\n\t_vC$1.fromBufferAttribute( position, c );\n\n\tconst morphInfluences = object.morphTargetInfluences;\n\n\tif ( morphPosition && morphInfluences ) {\n\n\t\t_morphA.set( 0, 0, 0 );\n\t\t_morphB.set( 0, 0, 0 );\n\t\t_morphC.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\tconst influence = morphInfluences[ i ];\n\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t} else {\n\n\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA$1 ), influence );\n\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB$1 ), influence );\n\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC$1 ), influence );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_vA$1.add( _morphA );\n\t\t_vB$1.add( _morphB );\n\t\t_vC$1.add( _morphC );\n\n\t}\n\n\tif ( object.isSkinnedMesh ) {\n\n\t\tobject.boneTransform( a, _vA$1 );\n\t\tobject.boneTransform( b, _vB$1 );\n\t\tobject.boneTransform( c, _vC$1 );\n\n\t}\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv2 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv2, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv2, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv2, c );\n\n\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nCamera.prototype.isCamera = true;\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nPerspectiveCamera.prototype.isPerspectiveCamera = true;\n\nconst fov = 90, aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget !== true ) {\n\n\t\t\tconsole.error( 'THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst currentToneMapping = renderer.toneMapping;\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.toneMapping = currentToneMapping;\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nCubeTexture.prototype.isCubeTexture = true;\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nWebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nPlane.prototype.isPlane = true;\n\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$2.center.set( 0, 0, 0 );\n\t\t_sphere$2.radius = 0.7071067811865476;\n\t\t_sphere$2.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = 5131;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = 5123;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"vec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#else\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\t#ifdef SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\\n\\t#endif\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\nvar output_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tuniform int boneTextureSize;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tfloat j = i * 4.0;\\n\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\ty = dy * ( y + 0.5 );\\n\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\treturn bone;\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tfloat transmissionAlpha = 1.0;\\n\\tfloat transmissionFactor = transmission;\\n\\tfloat thicknessFactor = thickness;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationColor, attenuationDistance );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\\n\\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\t#ifdef texture2DLodEXT\\n\\t\\t\\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( attenuationDistance == 0.0 ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$g = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$g = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tgl_FragColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\\n\\t#endif\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\toutput_fragment: output_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$g,\n\tbackground_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\t\tuv2Transform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 } // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.envmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatNormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionSamplerSize: { value: new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: new Color( 0x000000 ) },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularColor: { value: new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nfunction WebGLBackground( renderer, cubemaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tbackground = cubemaps.get( background );\n\n\t\t}\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tconst xr = renderer.xr;\n\t\tconst session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( 34921 );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( 34963, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\tif ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( 34930 );\n\tconst maxVertexTextures = gl.getParameter( 35660 );\n\tconst maxTextureSize = gl.getParameter( 3379 );\n\tconst maxCubemapSize = gl.getParameter( 34076 );\n\n\tconst maxAttributes = gl.getParameter( 34921 );\n\tconst maxVertexUniforms = gl.getParameter( 36347 );\n\tconst maxVaryings = gl.getParameter( 36348 );\n\tconst maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nOrthographicCamera.prototype.isOrthographicCamera = true;\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tencoding: LinearEncoding,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction denormalize( morph, attribute ) {\n\n\tlet denominator = 1;\n\tconst array = attribute.isInterleavedBufferAttribute ? attribute.data.array : attribute.array;\n\n\tif ( array instanceof Int8Array ) denominator = 127;\n\telse if ( array instanceof Int16Array ) denominator = 32767;\n\telse if ( array instanceof Int32Array ) denominator = 2147483647;\n\telse console.error( 'THREE.WebGLMorphtargets: Unsupported morph attribute data type: ', array );\n\n\tmorph.divideScalar( denominator );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tif ( morphTarget.normalized === true ) denormalize( morph, morphTarget );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tif ( morphNormal.normalized === true ) denormalize( morph, morphNormal );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tif ( morphColor.normalized === true ) denormalize( morph, morphColor );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tattributes.update( object.instanceMatrix, 34962 );\n\n\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\tattributes.update( object.instanceColor, 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nconst emptyTexture = new Texture();\nconst emptyArrayTexture = new DataArrayTexture();\nconst empty3dTexture = new Data3DTexture();\nconst emptyCubeTexture = new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\tconst seq = this.seq;\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program ) {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n\tconst n = gl.getProgramParameter( program, 35718 );\n\n\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\tconst u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tconst v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tconst r = [];\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tlines2.push( ( i + 1 ) + ': ' + lines[ i ] );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, 35713 );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 0 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === 35674 ) locationSize = 2;\n\t\tif ( info.type === 35675 ) locationSize = 3;\n\t\tif ( info.type === 35676 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string\n\t\t.replace( unrollLoopPattern, loopReplacer )\n\t\t.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\n\n}\n\nfunction deprecatedLoopReplacer( match, start, end, snippet ) {\n\n\tconsole.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\n\treturn loopReplacer( match, start, end, snippet );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error(\n\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, 35715 ) + '\\n\\n' +\n\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\tfragmentErrors\n\t\t\t);\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\n\t\tif ( cache.has( material ) === false ) {\n\n\t\t\tcache.set( material, new Set() );\n\n\t\t}\n\n\t\treturn cache.get( material );\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\n\t\tif ( cache.has( code ) === false ) {\n\n\t\t\tconst stage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn cache.get( code );\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst vertexTextures = capabilities.vertexTextures;\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst useAlphaTest = material.alphaTest > 0;\n\t\tconst useClearcoat = material.clearcoat > 0;\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget === null ) ? renderer.outputEncoding : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.encoding : LinearEncoding ),\n\t\t\tmap: !! material.map,\n\t\t\tmatcap: !! material.matcap,\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tdecodeVideoTexture: !! material.map && ( material.map.isVideoTexture === true ) && ( material.map.encoding === sRGBEncoding ),\n\n\t\t\tclearcoat: useClearcoat,\n\t\t\tclearcoatMap: useClearcoat && !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: useClearcoat && !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: useClearcoat && !! material.clearcoatNormalMap,\n\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\tspecularIntensityMap: !! material.specularIntensityMap,\n\t\t\tspecularColorMap: !! material.specularColorMap,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: !! material.alphaMap,\n\t\t\talphaTest: useAlphaTest,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: material.sheen > 0,\n\t\t\tsheenColorMap: !! material.sheenColorMap,\n\t\t\tsheenRoughnessMap: !! material.sheenRoughnessMap,\n\n\t\t\ttransmission: material.transmission > 0,\n\t\t\ttransmissionMap: !! material.transmissionMap,\n\t\t\tthicknessMap: !! material.thicknessMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( !! material.normalMap && !! geometry.attributes.tangent ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.displacementMap || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || !! material.sheenColorMap || !! material.sheenRoughnessMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || material.transmission > 0 || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || material.sheen > 0 || !! material.sheenColorMap || !! material.sheenRoughnessMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: !! material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: !! material.depthPacking,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputEncoding );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputEncoding );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.vertexUvs );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.map )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.lightMap )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.aoMap )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.emissiveMap )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.bumpMap )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.normalMap )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.objectSpaceNormalMap )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.tangentSpaceNormalMap )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.clearcoatMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.clearcoatRoughnessMap )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.clearcoatNormalMap )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.displacementMap )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.specularMap )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.roughnessMap )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.metalnessMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.gradientMap )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.alphaMap )\n\t\t\t_programLayers.enable( 23 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 24 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 25 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 26 );\n\t\tif ( parameters.vertexUvs )\n\t\t\t_programLayers.enable( 27 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 28 );\n\t\tif ( parameters.uvsVertexOnly )\n\t\t\t_programLayers.enable( 29 );\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 30 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.physicallyCorrectLights )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.specularIntensityMap )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.specularColorMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.transmissionMap )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.thicknessMap )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.sheenColorMap )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.sheenRoughnessMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 23 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tlet list;\n\n\t\tif ( lists.has( scene ) === false ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= lists.get( scene ).length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlists.get( scene ).push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = lists.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, physicallyCorrectLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\n\t\tlights.sort( shadowCastingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( physicallyCorrectLights !== true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( physicallyCorrectLights ) {\n\n\t\tlights.setup( lightsArray, physicallyCorrectLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tlet renderState;\n\n\t\tif ( renderStates.has( scene ) === false ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStates.get( scene ).length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStates.get( scene ).push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tconst pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t}\n\n\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0 ) ||\n\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t( material.alphaMap && material.alphaTest > 0 ) ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( 35661 );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( 3088 );\n\tconst viewportParam = gl.getParameter( 2978 );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// 36009 is equivalent to 36160\n\n\t\t\t\tif ( target === 36009 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36160 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === 36160 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36009 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = 36064 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = 36064;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== 1029 ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = 1029;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: 32774,\n\t\t[ SubtractEquation ]: 32778,\n\t\t[ ReverseSubtractEquation ]: 32779\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = 32775;\n\t\tequationToGL[ MaxEquation ] = 32776;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: 0,\n\t\t[ OneFactor ]: 1,\n\t\t[ SrcColorFactor ]: 768,\n\t\t[ SrcAlphaFactor ]: 770,\n\t\t[ SrcAlphaSaturateFactor ]: 776,\n\t\t[ DstColorFactor ]: 774,\n\t\t[ DstAlphaFactor ]: 772,\n\t\t[ OneMinusSrcColorFactor ]: 769,\n\t\t[ OneMinusSrcAlphaFactor ]: 771,\n\t\t[ OneMinusDstColorFactor ]: 775,\n\t\t[ OneMinusDstAlphaFactor ]: 773\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( 32926 )\n\t\t\t: disable( 32926 );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( 3042 );\n\t\tgl.disable( 2884 );\n\t\tgl.disable( 2929 );\n\t\tgl.disable( 32823 );\n\t\tgl.disable( 3089 );\n\t\tgl.disable( 2960 );\n\t\tgl.disable( 32926 );\n\n\t\tgl.blendEquation( 32774 );\n\t\tgl.blendFunc( 1, 0 );\n\t\tgl.blendFuncSeparate( 1, 0, 1, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( 513 );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( 519, 0, 0xffffffff );\n\t\tgl.stencilOp( 7680, 7680, 7680 );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( 1029 );\n\t\tgl.frontFace( 2305 );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( 33984 );\n\n\t\tgl.bindFramebuffer( 36160, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( 36009, null );\n\t\t\tgl.bindFramebuffer( 36008, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, encoding, isVideoTexture = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 33319 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33328;\n\t\t\tif ( glType === 5131 ) internalFormat = 33327;\n\t\t\tif ( glType === 5121 ) internalFormat = 33323;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = ( encoding === sRGBEncoding && isVideoTexture === false ) ? 35907 : 32856;\n\t\t\tif ( glType === 32819 ) internalFormat = 32854;\n\t\t\tif ( glType === 32820 ) internalFormat = 32855;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 33327 || internalFormat === 33328 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.encoding );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: 10497,\n\t\t[ ClampToEdgeWrapping ]: 33071,\n\t\t[ MirroredRepeatWrapping ]: 33648\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: 9728,\n\t\t[ NearestMipmapNearestFilter ]: 9984,\n\t\t[ NearestMipmapLinearFilter ]: 9986,\n\n\t\t[ LinearFilter ]: 9729,\n\t\t[ LinearMipmapNearestFilter ]: 9985,\n\t\t[ LinearMipmapLinearFilter ]: 9987\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = 3553;\n\n\t\tif ( texture.isDataArrayTexture ) textureType = 35866;\n\t\tif ( texture.isData3DTexture ) textureType = 32879;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\tif ( source.version !== source.__currentVersion || forceUpload === true ) {\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( textureProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = 6402;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = 35056;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 35866, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 35866, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 32879, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 32879, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsource.__currentVersion = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\tif ( source.version !== source.__currentVersion || forceUpload === true ) {\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( textureProperties.__version === undefined );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tsource.__currentVersion = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tif ( textureTarget === 32879 || textureTarget === 35866 ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else {\n\n\t\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = 33189;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\t// Use the first texture for MRT so far\n\t\t\tconst texture = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture[ 0 ] : renderTarget.texture;\n\n\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\tconst glType = utils.convert( texture.type );\n\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 36096, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 33306, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, 36064, 3553 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( 3553, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( 3553, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, 36064 + i, 3553 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( 3553 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = 3553;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? 32879 : 35866;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, 36064, glTextureType );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = 16384;\n\t\t\tconst invalidationArray = [ 36064 ];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? 33306 : 36096;\n\n\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t}\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t_gl.invalidateFramebuffer( 36008, [ depthStyle ] );\n\t\t\t\t_gl.invalidateFramebuffer( 36009, [ depthStyle ] );\n\n\t\t\t}\n\n\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t_gl.invalidateFramebuffer( 36008, invalidationArray );\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, null );\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst encoding = texture.encoding;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( encoding !== LinearEncoding ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture encoding:', encoding );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, encoding = null ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\t\tif ( p === RedFormat ) return 6403;\n\n\t\tif ( p === RGBFormat ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228' );\n\t\t\treturn 6408;\n\n\t\t}\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedIntegerFormat ) return 36244;\n\t\tif ( p === RGFormat ) return 33319;\n\t\tif ( p === RGIntegerFormat ) return 33320;\n\t\tif ( p === RGBAIntegerFormat ) return 36249;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nArrayCamera.prototype.isArrayCamera = true;\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nGroup.prototype.isGroup = true;\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\tconst joint = new Group();\n\t\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\t\t\t\t\t\t// ??\n\t\t\t\t\t\thand.add( joint );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst joint = hand.joints[ inputjoint.jointName ];\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps\t= false;\n\n\t}\n\n\n}\n\nDepthTexture.prototype.isDepthTexture = true;\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst inputSourcesMap = new Map();\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraVR = new ArrayCamera();\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controller = inputSourcesMap.get( event.inputSource );\n\n\t\t\tif ( controller ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tinputSourcesMap.forEach( function ( controller, inputSource ) {\n\n\t\t\t\tcontroller.disconnect( inputSource );\n\n\t\t\t} );\n\n\t\t\tinputSourcesMap.clear();\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? 35056 : 33190;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedShortType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: ( renderer.outputEncoding === sRGBEncoding ) ? 35907 : 32856,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\t// Set foveation to maximum.\n\t\t\t\tthis.setFoveation( 1.0 );\n\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\tconst inputSources = session.inputSources;\n\n\t\t\t// Assign controllers to available inputSources\n\n\t\t\tfor ( let i = 0; i < inputSources.length; i ++ ) {\n\n\t\t\t\tconst index = inputSources[ i ].handedness === 'right' ? 1 : 0;\n\t\t\t\tinputSourcesMap.set( inputSources[ i ], controllers[ index ] );\n\n\t\t\t}\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\t\t\t\t\tinputSourcesMap.delete( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\tcameraVR.matrixWorld.decompose( cameraVR.position, cameraVR.quaternion, cameraVR.scale );\n\n\t\t\t// update user camera and its children\n\n\t\t\tcamera.position.copy( cameraVR.position );\n\t\t\tcamera.quaternion.copy( cameraVR.quaternion );\n\t\t\tcamera.scale.copy( cameraVR.scale );\n\t\t\tcamera.matrix.copy( cameraVR.matrix );\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tconst children = camera.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\treturn glProjLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\treturn glBaseLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( foveation ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst camera = cameras[ i ];\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst inputSources = session.inputSources;\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = inputSources[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer.physicallyCorrectLights !== true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. displacementMap map\n\t\t// 4. normal map\n\t\t// 5. bump map\n\t\t// 6. roughnessMap map\n\t\t// 7. metalnessMap map\n\t\t// 8. alphaMap map\n\t\t// 9. emissiveMap map\n\t\t// 10. clearcoat map\n\t\t// 11. clearcoat normal map\n\t\t// 12. clearcoat roughnessMap map\n\t\t// 13. specular intensity map\n\t\t// 14. specular tint map\n\t\t// 15. transmission map\n\t\t// 16. thickness map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t} else if ( material.clearcoatMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatMap;\n\n\t\t} else if ( material.clearcoatNormalMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\n\t\t} else if ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\n\t\t} else if ( material.specularIntensityMap ) {\n\n\t\t\tuvScaleMap = material.specularIntensityMap;\n\n\t\t} else if ( material.specularColorMap ) {\n\n\t\t\tuvScaleMap = material.specularColorMap;\n\n\t\t} else if ( material.transmissionMap ) {\n\n\t\t\tuvScaleMap = material.transmissionMap;\n\n\t\t} else if ( material.thicknessMap ) {\n\n\t\t\tuvScaleMap = material.thicknessMap;\n\n\t\t} else if ( material.sheenColorMap ) {\n\n\t\t\tuvScaleMap = material.sheenColorMap;\n\n\t\t} else if ( material.sheenRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.sheenRoughnessMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tlet uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t}\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nfunction WebGLRenderer( parameters = {} ) {\n\n\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tlet _alpha;\n\n\tif ( _context !== null ) {\n\n\t\t_alpha = _context.getContextAttributes().alpha;\n\n\t} else {\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false;\n\n\t}\n\n\tlet currentRenderList = null;\n\tlet currentRenderState = null;\n\n\t// render() can be called from within a callback triggered by another render.\n\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\tconst renderListStack = [];\n\tconst renderStateStack = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = NoToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\n\t// internal properties\n\n\tconst _this = this;\n\n\tlet _isContextLost = false;\n\n\t// internal state cache\n\n\tlet _currentActiveCubeFace = 0;\n\tlet _currentActiveMipmapLevel = 0;\n\tlet _currentRenderTarget = null;\n\tlet _currentMaterialId = - 1;\n\n\tlet _currentCamera = null;\n\n\tconst _currentViewport = new Vector4();\n\tconst _currentScissor = new Vector4();\n\tlet _currentScissorTest = null;\n\n\t//\n\n\tlet _width = _canvas.width;\n\tlet _height = _canvas.height;\n\n\tlet _pixelRatio = 1;\n\tlet _opaqueSort = null;\n\tlet _transparentSort = null;\n\n\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\tlet _scissorTest = false;\n\n\t// frustum\n\n\tconst _frustum = new Frustum();\n\n\t// clipping\n\n\tlet _clippingEnabled = false;\n\tlet _localClippingEnabled = false;\n\n\t// transmission\n\n\tlet _transmissionRenderTarget = null;\n\n\t// camera matrices cache\n\n\tconst _projScreenMatrix = new Matrix4();\n\n\tconst _vector2 = new Vector2();\n\tconst _vector3 = new Vector3();\n\n\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tlet _gl = _context;\n\n\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\tconst contextName = contextNames[ i ];\n\t\t\tconst context = _canvas.getContext( contextName, contextAttributes );\n\t\t\tif ( context !== null ) return context;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\ttry {\n\n\t\tconst contextAttributes = {\n\t\t\talpha: true,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t};\n\n\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\tif ( 'setAttribute' in _canvas ) _canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\tcontextNames.shift();\n\n\t\t\t}\n\n\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tlet extensions, capabilities, state, info;\n\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tlet utils, bindingStates;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\textensions.init( capabilities );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\tclipping = new WebGLClipping( properties );\n\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\tbackground = new WebGLBackground( _this, cubemaps, state, objects, _alpha, _premultipliedAlpha );\n\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.shadowMap = shadowMap;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tconst xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function ( target ) {\n\n\t\treturn target.copy( background.getClearColor() );\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\tlet bits = 0;\n\n\t\tif ( color ) bits |= 16384;\n\t\tif ( depth ) bits |= 256;\n\t\tif ( stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tcubemaps.dispose();\n\t\tcubeuvmaps.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\t\tprogramCache.dispose();\n\n\t\txr.dispose();\n\n\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t_transmissionRenderTarget = null;\n\n\t\t}\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tconst infoAutoReset = info.autoReset;\n\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\tconst shadowMapType = shadowMap.type;\n\n\t\tinitGLContext();\n\n\t\tinfo.autoReset = infoAutoReset;\n\t\tshadowMap.enabled = shadowMapEnabled;\n\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\tshadowMap.type = shadowMapType;\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReferences( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\tconst programs = properties.get( material ).programs;\n\n\t\tif ( programs !== undefined ) {\n\n\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t} );\n\n\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t//\n\n\t\tlet index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\n\t\t//\n\n\t\tif ( index === null ) {\n\n\t\t\tif ( position === undefined || position.count === 0 ) return;\n\n\t\t} else if ( index.count === 0 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t//\n\n\t\tlet rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\tlet attribute;\n\t\tlet renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tconst dataCount = ( index !== null ) ? index.count : position.count;\n\n\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tconst drawStart = Math.max( rangeStart, groupStart );\n\t\tconst drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tconst drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\tconst instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tconst material = object.material;\n\n\t\t\tif ( material ) {\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\tgetProgram( material2, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\trenderStateStack.pop();\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tfunction onXRSessionStart() {\n\n\t\tanimation.stop();\n\n\t}\n\n\tfunction onXRSessionEnd() {\n\n\t\tanimation.start();\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t};\n\n\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost === true ) return;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t}\n\n\t\t//\n\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\tcurrentRenderList.init();\n\n\t\trenderListStack.push( currentRenderList );\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene );\n\n\t\t// render scene\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tif ( camera.isArrayCamera ) {\n\n\t\t\tconst cameras = camera.cameras;\n\n\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t// _gl.finish();\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\trenderStateStack.pop();\n\n\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderState = null;\n\n\t\t}\n\n\t\trenderListStack.pop();\n\n\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderList = null;\n\n\t\t}\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, scene, camera );\n\n\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t}\n\n\tfunction renderTransmissionPass( opaqueObjects, scene, camera ) {\n\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\tgenerateMipmaps: true,\n\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\tsamples: ( isWebGL2 && _antialias === true ) ? 4 : 0\n\t\t\t} );\n\n\t\t}\n\n\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t} else {\n\n\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t}\n\n\t\t//\n\n\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\t\t_this.clear();\n\n\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\tconst currentToneMapping = _this.toneMapping;\n\t\t_this.toneMapping = NoToneMapping;\n\n\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t_this.toneMapping = currentToneMapping;\n\n\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\tconst object = renderItem.object;\n\t\t\tconst geometry = renderItem.geometry;\n\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\tconst group = renderItem.group;\n\n\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\tif ( material.transparent === true && material.side === DoubleSide ) {\n\n\t\t\tmaterial.side = BackSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = FrontSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = DoubleSide;\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t}\n\n\tfunction getProgram( material, scene, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst lights = currentRenderState.state.lights;\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tconst lightsStateVersion = lights.state.version;\n\n\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tlet programs = materialProperties.programs;\n\n\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tmaterialProperties.fog = scene.fog;\n\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\tif ( programs === undefined ) {\n\n\t\t\t// new material\n\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tprograms = new Map();\n\t\t\tmaterialProperties.programs = programs;\n\n\t\t}\n\n\t\tlet program = programs.get( programCacheKey );\n\n\t\tif ( program !== undefined ) {\n\n\t\t\t// early out if program and light state is identical\n\n\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\treturn program;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t}\n\n\t\tconst uniforms = materialProperties.uniforms;\n\n\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t}\n\n\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tconst progUniforms = program.getUniforms();\n\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.currentProgram = program;\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\treturn program;\n\n\t}\n\n\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\tmaterialProperties.instancing = parameters.instancing;\n\t\tmaterialProperties.skinning = parameters.skinning;\n\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t}\n\n\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\ttextures.resetTextureUnits();\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.encoding : LinearEncoding );\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\tconst vertexTangents = !! material.normalMap && !! geometry.attributes.tangent;\n\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\tconst morphColors = !! geometry.morphAttributes.color;\n\t\tconst toneMapping = material.toneMapped ? _this.toneMapping : NoToneMapping;\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tconst materialProperties = properties.get( material );\n\t\tconst lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled === true ) {\n\n\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\tconst useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tlet needsProgramChange = false;\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tneedsProgramChange = true;\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\t//\n\n\t\tlet program = materialProperties.currentProgram;\n\n\t\tif ( needsProgramChange === true ) {\n\n\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t}\n\n\t\tlet refreshProgram = false;\n\t\tlet refreshMaterial = false;\n\t\tlet refreshLights = false;\n\n\t\tconst p_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\tobject.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t}\n\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tlet useDefaultFramebuffer = true;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet framebuffer = null;\n\t\tlet isCube = false;\n\t\tlet isRenderTarget3D = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst texture = renderTarget.texture;\n\n\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture ) {\n\n\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t}\n\n\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tconst framebufferBound = state.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t_gl.framebufferTextureLayer( 36160, 36064, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t}\n\n\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\ttry {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\tif ( texture.isFramebufferTexture !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst levelScale = Math.pow( 2, - level );\n\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexSubImage2D( 3553, level, 0, 0, position.x, position.y, width, height );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tconst width = srcTexture.image.width;\n\t\tconst height = srcTexture.image.height;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t// As another texture upload may have changed pixelStorei\n\t\t// parameters, make sure they are correct for the dstTexture\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t_gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( 3553 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\t\tlet glTarget;\n\n\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\tglTarget = 32879;\n\n\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\tglTarget = 35866;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tconst unpackRowLen = _gl.getParameter( 3314 );\n\t\tconst unpackImageHeight = _gl.getParameter( 32878 );\n\t\tconst unpackSkipPixels = _gl.getParameter( 3316 );\n\t\tconst unpackSkipRows = _gl.getParameter( 3315 );\n\t\tconst unpackSkipImages = _gl.getParameter( 32877 );\n\n\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t_gl.pixelStorei( 3314, image.width );\n\t\t_gl.pixelStorei( 32878, image.height );\n\t\t_gl.pixelStorei( 3316, sourceBox.min.x );\n\t\t_gl.pixelStorei( 3315, sourceBox.min.y );\n\t\t_gl.pixelStorei( 32877, sourceBox.min.z );\n\n\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.pixelStorei( 3314, unpackRowLen );\n\t\t_gl.pixelStorei( 32878, unpackImageHeight );\n\t\t_gl.pixelStorei( 3316, unpackSkipPixels );\n\t\t_gl.pixelStorei( 3315, unpackSkipRows );\n\t\t_gl.pixelStorei( 32877, unpackSkipImages );\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.resetState = function () {\n\n\t\t_currentActiveCubeFace = 0;\n\t\t_currentActiveMipmapLevel = 0;\n\t\t_currentRenderTarget = null;\n\n\t\tstate.reset();\n\t\tbindingStates.reset();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t}\n\n}\n\nWebGLRenderer.prototype.isWebGLRenderer = true;\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nFogExp2.prototype.isFogExp2 = true;\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nFog.prototype.isFog = true;\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nScene.prototype.isScene = true;\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.prototype.slice.call( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nInterleavedBuffer.prototype.isInterleavedBuffer = true;\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t}\n\n\tgetY( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t}\n\n\tgetZ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t}\n\n\tgetW( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// deinterleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interlaved attribtue\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nInterleavedBufferAttribute.prototype.isInterleavedBufferAttribute = true;\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getUV( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nSprite.prototype.isSprite = true;\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\treturn this;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tboneTransform( index, target ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( target ).applyMatrix4( this.bindMatrix );\n\n\t\ttarget.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\ttarget.addScaledVector( _vector$5.copy( _basePosition ).applyMatrix4( _matrix ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn target.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nSkinnedMesh.prototype.isSkinnedMesh = true;\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nBone.prototype.isBone = true;\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nDataTexture.prototype.isDataTexture = true;\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.frame = - 1;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = ceilPowerOfTwo( size );\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\t\tthis.boneTextureSize = size;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tif ( typeof normalized === 'number' ) {\n\n\t\t\tmeshPerAttribute = normalized;\n\n\t\t\tnormalized = false;\n\n\t\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t\t}\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nInstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _mesh = /*@__PURE__*/ new Mesh();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.frustumCulled = false;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nInstancedMesh.prototype.isInstancedMesh = true;\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nLine.prototype.isLine = true;\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\tconst lineDistances = [];\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineSegments.prototype.isLineSegments = true;\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nLineLoop.prototype.isLineLoop = true;\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nPoints.prototype.isPoints = true;\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nVideoTexture.prototype.isVideoTexture = true;\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height, format ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.format = format;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nFramebufferTexture.prototype.isFramebufferTexture = true;\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nCanvasTexture.prototype.isCanvasTexture = true;\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = new Vector3();\nconst px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst tangent = optionalTarget || new Vector2();\n\n\t\ttangent.copy( this.v2 ).sub( this.v1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineCurve.prototype.isLineCurve = true;\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineCurve3';\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nSplineCurve.prototype.isSplineCurve = true;\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, - 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = new Vector3();\nconst _v1$1 = new Vector3();\nconst _normal = new Vector3();\nconst _triangle = new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.2)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tlet p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\tif ( outerNode ) {\n\n\t\tconst b = splitPolygon( outerNode, hole );\n\n\t\t// filter collinear points around the cuts\n\t\tfilterPoints( outerNode, outerNode.next );\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode;\n\tconst hx = hole.x;\n\tconst hy = hole.y;\n\tlet qx = - Infinity, m;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t\t( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t\t( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // doesn't intersect other edges\n\t\t( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n\t\t( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n\t\tequals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tlet depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t// deprecated options\n\n\t\t\tif ( options.amount !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\t\tdepth = options.amount;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// incides\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCapsuleBufferGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = 0.0;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._sheen = 0.0;\n\t\tthis._clearcoat = 0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nconst materialLib = {\n\tShadowMaterial,\n\tSpriteMaterial,\n\tRawShaderMaterial,\n\tShaderMaterial,\n\tPointsMaterial,\n\tMeshPhysicalMaterial,\n\tMeshStandardMaterial,\n\tMeshPhongMaterial,\n\tMeshToonMaterial,\n\tMeshNormalMaterial,\n\tMeshLambertMaterial,\n\tMeshDepthMaterial,\n\tMeshDistanceMaterial,\n\tMeshBasicMaterial,\n\tMeshMatcapMaterial,\n\tLineDashedMaterial,\n\tLineBasicMaterial,\n\tMaterial\n};\n\nMaterial.fromType = function ( type ) {\n\n\treturn new materialLib[ type ]();\n\n};\n\nconst AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tconst n = times.length;\n\t\tconst result = new Array( n );\n\t\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tconst nValues = values.length;\n\t\tconst result = new values.constructor( nValues );\n\n\t\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tconst srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tlet i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tlet value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t},\n\n\tsubclip: function ( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\t\tconst clip = sourceClip.clone();\n\n\t\tclip.name = name;\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tconst track = clip.tracks[ i ];\n\t\t\tconst valueSize = track.getValueSize();\n\n\t\t\tconst times = [];\n\t\t\tconst values = [];\n\n\t\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( times.length === 0 ) continue;\n\n\t\t\ttrack.times = AnimationUtils.convertArray( times, track.times.constructor );\n\t\t\ttrack.values = AnimationUtils.convertArray( values, track.values.constructor );\n\n\t\t\ttracks.push( track );\n\n\t\t}\n\n\t\tclip.tracks = tracks;\n\n\t\t// find minimum .times value across all tracks in the trimmed clip\n\n\t\tlet minStartTime = Infinity;\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// shift all tracks such that clip begins at t=0\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t\t}\n\n\t\tclip.resetDuration();\n\n\t\treturn clip;\n\n\t},\n\n\tmakeClipAdditive: function ( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\t\tif ( fps <= 0 ) fps = 30;\n\n\t\tconst numTracks = referenceClip.tracks.length;\n\t\tconst referenceTime = referenceFrame / fps;\n\n\t\t// Make each track's values relative to the values at the reference frame\n\t\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t\t// Skip this track if it's non-numeric\n\t\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t\t} );\n\n\t\t\tif ( targetTrack === undefined ) continue;\n\n\t\t\tlet referenceOffset = 0;\n\t\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t\t}\n\n\t\t\tlet targetOffset = 0;\n\t\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t\t}\n\n\t\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\t\tlet referenceValue;\n\n\t\t\t// Find the value to subtract out of the track\n\t\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t\t} else {\n\n\t\t\t\t// Interpolate to the reference value\n\t\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t\t}\n\n\t\t\t// Conjugate the quaternion\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t\t}\n\n\t\t\t// Subtract the reference value from all of the track values\n\n\t\t\tconst numTimes = targetTrack.times.length;\n\t\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\tvalueStart,\n\t\t\t\t\t\treferenceValue,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\tvalueStart\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\t\treturn targetClip;\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n// ALIAS DEFINITIONS\n\nInterpolant.prototype.beforeStart_ = Interpolant.prototype.copySampleValue_;\nInterpolant.prototype.afterEnd_ = Interpolant.prototype.copySampleValue_;\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = AnimationUtils.arraySlice( this.times ),\n\t\t\tvalues = AnimationUtils.arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = AnimationUtils.arraySlice( this.times, 0 );\n\t\tconst values = AnimationUtils.arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nconst loading = {};\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow Error( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}` );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tconst texData = scope.parse( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.encoding !== undefined ) {\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nLight.prototype.isLight = true;\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nHemisphereLight.prototype.isHemisphereLight = true;\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nSpotLightShadow.prototype.isSpotLightShadow = true;\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nSpotLight.prototype.isSpotLight = true;\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nPointLightShadow.prototype.isPointLightShadow = true;\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nPointLight.prototype.isPointLight = true;\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t}\n\n}\n\nDirectionalLightShadow.prototype.isDirectionalLightShadow = true;\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nDirectionalLight.prototype.isDirectionalLight = true;\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nAmbientLight.prototype.isAmbientLight = true;\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\nRectAreaLight.prototype.isRectAreaLight = true;\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nSphericalHarmonics3.prototype.isSphericalHarmonics3 = true;\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nLightProbe.prototype.isLightProbe = true;\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = Material.fromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON( this );\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nInstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ] instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: The legacy Geometry type is no longer supported.' );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor ( let j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tconst material = data.materials[ j ];\n\n\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/* DEPRECATED */\n\n\tsetTexturePath( value ) {\n\n\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( value );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nImageBitmapLoader.prototype.isImageBitmapLoader = true;\n\nlet _context;\n\nconst AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\t_context = value;\n\n\t}\n\n};\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n}\n\nclass HemisphereLightProbe extends LightProbe {\n\n\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tconst color1 = new Color().set( skyColor );\n\t\tconst color2 = new Color().set( groundColor );\n\n\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tconst c0 = Math.sqrt( Math.PI );\n\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n}\n\nHemisphereLightProbe.prototype.isHemisphereLightProbe = true;\n\nclass AmbientLightProbe extends LightProbe {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tconst color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n}\n\nAmbientLightProbe.prototype.isAmbientLightProbe = true;\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nAnimationObjectGroup.prototype.isAnimationObjectGroup = true;\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nAnimationMixer.prototype._controlInterpolantsResultBuffer = new Float32Array( 1 );\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nInstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nGLBufferAttribute.prototype.isGLBufferAttribute = true;\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$4.copy( point ).clamp( this.min, this.max );\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nBox2.prototype.isBox2 = true;\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'SkeletonHelper';\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, radials = 16, circles = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the radials\n\n\t\tfor ( let i = 0; i <= radials; i ++ ) {\n\n\t\t\tconst v = ( i / radials ) * ( Math.PI * 2 );\n\n\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( x, 0, z );\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t\t// create the circles\n\n\t\tfor ( let i = 0; i <= circles; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / circles * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2', colorFrustum );\n\t\taddLine( 'n2', 'n4', colorFrustum );\n\t\taddLine( 'n4', 'n3', colorFrustum );\n\t\taddLine( 'n3', 'n1', colorFrustum );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2', colorFrustum );\n\t\taddLine( 'f2', 'f4', colorFrustum );\n\t\taddLine( 'f4', 'f3', colorFrustum );\n\t\taddLine( 'f3', 'f1', colorFrustum );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1', colorFrustum );\n\t\taddLine( 'n2', 'f2', colorFrustum );\n\t\taddLine( 'n3', 'f3', colorFrustum );\n\t\taddLine( 'n4', 'f4', colorFrustum );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1', colorCone );\n\t\taddLine( 'p', 'n2', colorCone );\n\t\taddLine( 'p', 'n3', colorCone );\n\t\taddLine( 'p', 'n4', colorCone );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2', colorUp );\n\t\taddLine( 'u2', 'u3', colorUp );\n\t\taddLine( 'u3', 'u1', colorUp );\n\n\t\t// target\n\n\t\taddLine( 'c', 't', colorTarget );\n\t\taddLine( 'p', 'c', colorCross );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2', colorCross );\n\t\taddLine( 'cn3', 'cn4', colorCross );\n\n\t\taddLine( 'cf1', 'cf2', colorCross );\n\t\taddLine( 'cf3', 'cf4', colorCross );\n\n\t\tfunction addLine( a, b, color ) {\n\n\t\t\taddPoint( a, color );\n\t\t\taddPoint( b, color );\n\n\t\t}\n\n\t\tfunction addPoint( id, color ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tLineSegments.prototype.copy.call( this, source );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tlet scale = - this.plane.constant;\n\n\t\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\t\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nclass DataUtils {\n\n\t// float32 to float16\n\n\tstatic toHalfFloat( val ) {\n\n\t\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\t\tval = clamp( val, - 65504, 65504 );\n\n\t\t_floatView[ 0 ] = val;\n\t\tconst f = _uint32View[ 0 ];\n\t\tconst e = ( f >> 23 ) & 0x1ff;\n\t\treturn _baseTable[ e ] + ( ( f & 0x007fffff ) >> _shiftTable[ e ] );\n\n\t}\n\n\t// float16 to float32\n\n\tstatic fromHalfFloat( val ) {\n\n\t\tconst m = val >> 10;\n\t\t_uint32View[ 0 ] = _mantissaTable[ _offsetTable[ m ] + ( val & 0x3ff ) ] + _exponentTable[ m ];\n\t\treturn _floatView[ 0 ];\n\n\t}\n\n}\n\n// float32 to float16 helpers\n\nconst _buffer = new ArrayBuffer( 4 );\nconst _floatView = new Float32Array( _buffer );\nconst _uint32View = new Uint32Array( _buffer );\n\nconst _baseTable = new Uint32Array( 512 );\nconst _shiftTable = new Uint32Array( 512 );\n\nfor ( let i = 0; i < 256; ++ i ) {\n\n\tconst e = i - 127;\n\n\t// very small number (0, -0)\n\n\tif ( e < - 27 ) {\n\n\t\t_baseTable[ i ] = 0x0000;\n\t\t_baseTable[ i | 0x100 ] = 0x8000;\n\t\t_shiftTable[ i ] = 24;\n\t\t_shiftTable[ i | 0x100 ] = 24;\n\n\t\t// small number (denorm)\n\n\t} else if ( e < - 14 ) {\n\n\t\t_baseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t_baseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t_shiftTable[ i ] = - e - 1;\n\t\t_shiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t// normal number\n\n\t} else if ( e <= 15 ) {\n\n\t\t_baseTable[ i ] = ( e + 15 ) << 10;\n\t\t_baseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t_shiftTable[ i ] = 13;\n\t\t_shiftTable[ i | 0x100 ] = 13;\n\n\t\t// large number (Infinity, -Infinity)\n\n\t} else if ( e < 128 ) {\n\n\t\t_baseTable[ i ] = 0x7c00;\n\t\t_baseTable[ i | 0x100 ] = 0xfc00;\n\t\t_shiftTable[ i ] = 24;\n\t\t_shiftTable[ i | 0x100 ] = 24;\n\n\t\t// stay (NaN, Infinity, -Infinity)\n\n\t} else {\n\n\t\t_baseTable[ i ] = 0x7c00;\n\t\t_baseTable[ i | 0x100 ] = 0xfc00;\n\t\t_shiftTable[ i ] = 13;\n\t\t_shiftTable[ i | 0x100 ] = 13;\n\n\t}\n\n}\n\n// float16 to float32 helpers\n\nconst _mantissaTable = new Uint32Array( 2048 );\nconst _exponentTable = new Uint32Array( 64 );\nconst _offsetTable = new Uint32Array( 64 );\n\nfor ( let i = 1; i < 1024; ++ i ) {\n\n\tlet m = i << 13; // zero pad mantissa bits\n\tlet e = 0; // zero exponent\n\n\t// normalized\n\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\tm <<= 1;\n\t\te -= 0x00800000; // decrement exponent\n\n\t}\n\n\tm &= ~ 0x00800000; // clear leading 1 bit\n\te += 0x38800000; // adjust bias\n\n\t_mantissaTable[ i ] = m | e;\n\n}\n\nfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t_mantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n}\n\nfor ( let i = 1; i < 31; ++ i ) {\n\n\t_exponentTable[ i ] = i << 23;\n\n}\n\n_exponentTable[ 31 ] = 0x47800000;\n_exponentTable[ 32 ] = 0x80000000;\nfor ( let i = 33; i < 63; ++ i ) {\n\n\t_exponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n}\n\n_exponentTable[ 63 ] = 0xc7800000;\n\nfor ( let i = 1; i < 64; ++ i ) {\n\n\tif ( i !== 32 ) {\n\n\t\t_offsetTable[ i ] = 1024;\n\n\t}\n\n}\n\nconst LineStrip = 0;\nconst LinePieces = 1;\nconst NoColors = 0;\nconst FaceColors = 1;\nconst VertexColors = 2;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials = [] ) {\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\n\treturn materials;\n\n}\n\nclass PointCloud extends Points {\n\n\tconstructor( geometry, material ) {\n\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\t\tsuper( geometry, material );\n\n\t}\n\n}\n\nclass Particle extends Sprite {\n\n\tconstructor( material ) {\n\n\t\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\t\tsuper( material );\n\n\t}\n\n}\n\nclass ParticleSystem extends Points {\n\n\tconstructor( geometry, material ) {\n\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\t\tsuper( geometry, material );\n\n\t}\n\n}\n\nclass PointCloudMaterial extends PointsMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\t\tsuper( parameters );\n\n\t}\n\n}\n\nclass ParticleBasicMaterial extends PointsMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\t\tsuper( parameters );\n\n\t}\n\n}\n\nclass ParticleSystemMaterial extends PointsMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\t\tsuper( parameters );\n\n\t}\n\n}\n\nclass Vertex extends Vector3 {\n\n\tconstructor( x, y, z ) {\n\n\t\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\t\tsuper( x, y, z );\n\n\t}\n\n}\n\n//\n\nclass DynamicBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.' );\n\t\tsuper( array, itemSize );\n\t\tthis.setUsage( DynamicDrawUsage );\n\n\t}\n\n}\n\nclass Int8Attribute extends Int8BufferAttribute {\n\n\tconstructor( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\t\tsuper( array, itemSize );\n\n\t}\n\n}\n\nclass Uint8Attribute extends Uint8BufferAttribute {\n\n\tconstructor( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\t\tsuper( array, itemSize );\n\n\t}\n\n}\n\nclass Uint8ClampedAttribute extends Uint8ClampedBufferAttribute {\n\n\tconstructor( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\t\tsuper( array, itemSize );\n\n\t}\n\n}\n\nclass Int16Attribute extends Int16BufferAttribute {\n\n\tconstructor( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\t\tsuper( array, itemSize );\n\n\t}\n\n}\n\nclass Uint16Attribute extends Uint16BufferAttribute {\n\n\tconstructor( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\t\tsuper( array, itemSize );\n\n\t}\n\n}\n\nclass Int32Attribute extends Int32BufferAttribute {\n\n\tconstructor( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\t\tsuper( array, itemSize );\n\n\t}\n\n}\n\nclass Uint32Attribute extends Uint32BufferAttribute {\n\n\tconstructor( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\t\tsuper( array, itemSize );\n\n\t}\n\n}\n\nclass Float32Attribute extends Float32BufferAttribute {\n\n\tconstructor( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\t\tsuper( array, itemSize );\n\n\t}\n\n}\n\nclass Float64Attribute extends Float64BufferAttribute {\n\n\tconstructor( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\t\tsuper( array, itemSize );\n\n\t}\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nPath.prototype.fromPoints = function ( points ) {\n\n\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\treturn this.setFromPoints( points );\n\n};\n\n//\n\nclass AxisHelper extends AxesHelper {\n\n\tconstructor( size ) {\n\n\t\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\t\tsuper( size );\n\n\t}\n\n}\n\nclass BoundingBoxHelper extends BoxHelper {\n\n\tconstructor( object, color ) {\n\n\t\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\t\tsuper( object, color );\n\n\t}\n\n}\n\nclass EdgesHelper extends LineSegments {\n\n\tconstructor( object, hex ) {\n\n\t\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\t\tsuper( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n\t}\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nclass WireframeHelper extends LineSegments {\n\n\tconstructor( object, hex ) {\n\n\t\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\t\tsuper( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n\t}\n\n}\n\n//\n\nLoader.prototype.extractUrlBase = function ( url ) {\n\n\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\treturn LoaderUtils.extractUrlBase( url );\n\n};\n\nLoader.Handlers = {\n\n\tadd: function ( /* regex, loader */ ) {\n\n\t\tconsole.error( 'THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.' );\n\n\t},\n\n\tget: function ( /* file */ ) {\n\n\t\tconsole.error( 'THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.' );\n\n\t}\n\n};\n\nclass XHRLoader extends FileLoader {\n\n\tconstructor( manager ) {\n\n\t\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\t\tsuper( manager );\n\n\t}\n\n}\n\nclass BinaryTextureLoader extends DataTextureLoader {\n\n\tconstructor( manager ) {\n\n\t\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\t\tsuper( manager );\n\n\t}\n\n}\n\n//\n\nBox2.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nBox2.prototype.empty = function () {\n\n\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\treturn this.isEmpty();\n\n};\n\nBox2.prototype.isIntersectionBox = function ( box ) {\n\n\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\treturn this.intersectsBox( box );\n\n};\n\nBox2.prototype.size = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\treturn this.getSize( optionalTarget );\n\n};\n\n//\n\nBox3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nBox3.prototype.empty = function () {\n\n\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\treturn this.isEmpty();\n\n};\n\nBox3.prototype.isIntersectionBox = function ( box ) {\n\n\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\treturn this.intersectsBox( box );\n\n};\n\nBox3.prototype.isIntersectionSphere = function ( sphere ) {\n\n\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\treturn this.intersectsSphere( sphere );\n\n};\n\nBox3.prototype.size = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\treturn this.getSize( optionalTarget );\n\n};\n\n//\n\nEuler.prototype.toVector3 = function () {\n\n\tconsole.error( 'THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead' );\n\n};\n\n\n//\n\nSphere.prototype.empty = function () {\n\n\tconsole.warn( 'THREE.Sphere: .empty() has been renamed to .isEmpty().' );\n\treturn this.isEmpty();\n\n};\n\n//\n\nFrustum.prototype.setFromMatrix = function ( m ) {\n\n\tconsole.warn( 'THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().' );\n\treturn this.setFromProjectionMatrix( m );\n\n};\n\n//\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\n//\n\nMatrix3.prototype.flattenToArrayOffset = function ( array, offset ) {\n\n\tconsole.warn( 'THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.' );\n\treturn this.toArray( array, offset );\n\n};\n\nMatrix3.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\treturn vector.applyMatrix3( this );\n\n};\n\nMatrix3.prototype.multiplyVector3Array = function ( /* a */ ) {\n\n\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n};\n\nMatrix3.prototype.applyToBufferAttribute = function ( attribute ) {\n\n\tconsole.warn( 'THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.' );\n\treturn attribute.applyMatrix3( this );\n\n};\n\nMatrix3.prototype.applyToVector3Array = function ( /* array, offset, length */ ) {\n\n\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n};\n\nMatrix3.prototype.getInverse = function ( matrix ) {\n\n\tconsole.warn( 'THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.' );\n\treturn this.copy( matrix ).invert();\n\n};\n\n//\n\nMatrix4.prototype.extractPosition = function ( m ) {\n\n\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\treturn this.copyPosition( m );\n\n};\n\nMatrix4.prototype.flattenToArrayOffset = function ( array, offset ) {\n\n\tconsole.warn( 'THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.' );\n\treturn this.toArray( array, offset );\n\n};\n\nMatrix4.prototype.getPosition = function () {\n\n\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\treturn new Vector3().setFromMatrixColumn( this, 3 );\n\n};\n\nMatrix4.prototype.setRotationFromQuaternion = function ( q ) {\n\n\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\treturn this.makeRotationFromQuaternion( q );\n\n};\n\nMatrix4.prototype.multiplyToArray = function () {\n\n\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n};\n\nMatrix4.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\treturn vector.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.multiplyVector4 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\treturn vector.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.multiplyVector3Array = function ( /* a */ ) {\n\n\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateAxis = function ( v ) {\n\n\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\tv.transformDirection( this );\n\n};\n\nMatrix4.prototype.crossVector = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\treturn vector.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.translate = function () {\n\n\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateX = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateY = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateZ = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateByAxis = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n};\n\nMatrix4.prototype.applyToBufferAttribute = function ( attribute ) {\n\n\tconsole.warn( 'THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.' );\n\treturn attribute.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.applyToVector3Array = function ( /* array, offset, length */ ) {\n\n\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n};\n\nMatrix4.prototype.makeFrustum = function ( left, right, bottom, top, near, far ) {\n\n\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n};\n\nMatrix4.prototype.getInverse = function ( matrix ) {\n\n\tconsole.warn( 'THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.' );\n\treturn this.copy( matrix ).invert();\n\n};\n\n//\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\n//\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nQuaternion.prototype.inverse = function ( ) {\n\n\tconsole.warn( 'THREE.Quaternion: .inverse() has been renamed to invert().' );\n\treturn this.invert();\n\n};\n\n//\n\nRay.prototype.isIntersectionBox = function ( box ) {\n\n\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\treturn this.intersectsBox( box );\n\n};\n\nRay.prototype.isIntersectionPlane = function ( plane ) {\n\n\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\treturn this.intersectsPlane( plane );\n\n};\n\nRay.prototype.isIntersectionSphere = function ( sphere ) {\n\n\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\treturn this.intersectsSphere( sphere );\n\n};\n\n//\n\nTriangle.prototype.area = function () {\n\n\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\treturn this.getArea();\n\n};\n\nTriangle.prototype.barycoordFromPoint = function ( point, target ) {\n\n\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\treturn this.getBarycoord( point, target );\n\n};\n\nTriangle.prototype.midpoint = function ( target ) {\n\n\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\treturn this.getMidpoint( target );\n\n};\n\nTriangle.prototypenormal = function ( target ) {\n\n\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\treturn this.getNormal( target );\n\n};\n\nTriangle.prototype.plane = function ( target ) {\n\n\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\treturn this.getPlane( target );\n\n};\n\nTriangle.barycoordFromPoint = function ( point, a, b, c, target ) {\n\n\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n};\n\nTriangle.normal = function ( a, b, c, target ) {\n\n\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\treturn Triangle.getNormal( a, b, c, target );\n\n};\n\n//\n\nShape.prototype.extractAllPoints = function ( divisions ) {\n\n\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\treturn this.extractPoints( divisions );\n\n};\n\nShape.prototype.extrude = function ( options ) {\n\n\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\treturn new ExtrudeGeometry( this, options );\n\n};\n\nShape.prototype.makeGeometry = function ( options ) {\n\n\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\treturn new ShapeGeometry( this, options );\n\n};\n\n//\n\nVector2.prototype.fromAttribute = function ( attribute, index, offset ) {\n\n\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\treturn this.fromBufferAttribute( attribute, index, offset );\n\n};\n\nVector2.prototype.distanceToManhattan = function ( v ) {\n\n\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\treturn this.manhattanDistanceTo( v );\n\n};\n\nVector2.prototype.lengthManhattan = function () {\n\n\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\treturn this.manhattanLength();\n\n};\n\n//\n\nVector3.prototype.setEulerFromRotationMatrix = function () {\n\n\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n};\n\nVector3.prototype.setEulerFromQuaternion = function () {\n\n\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n};\n\nVector3.prototype.getPositionFromMatrix = function ( m ) {\n\n\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\treturn this.setFromMatrixPosition( m );\n\n};\n\nVector3.prototype.getScaleFromMatrix = function ( m ) {\n\n\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\treturn this.setFromMatrixScale( m );\n\n};\n\nVector3.prototype.getColumnFromMatrix = function ( index, matrix ) {\n\n\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\treturn this.setFromMatrixColumn( matrix, index );\n\n};\n\nVector3.prototype.applyProjection = function ( m ) {\n\n\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\treturn this.applyMatrix4( m );\n\n};\n\nVector3.prototype.fromAttribute = function ( attribute, index, offset ) {\n\n\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\treturn this.fromBufferAttribute( attribute, index, offset );\n\n};\n\nVector3.prototype.distanceToManhattan = function ( v ) {\n\n\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\treturn this.manhattanDistanceTo( v );\n\n};\n\nVector3.prototype.lengthManhattan = function () {\n\n\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\treturn this.manhattanLength();\n\n};\n\n//\n\nVector4.prototype.fromAttribute = function ( attribute, index, offset ) {\n\n\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\treturn this.fromBufferAttribute( attribute, index, offset );\n\n};\n\nVector4.prototype.lengthManhattan = function () {\n\n\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\treturn this.manhattanLength();\n\n};\n\n//\n\nObject3D.prototype.getChildByName = function ( name ) {\n\n\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\treturn this.getObjectByName( name );\n\n};\n\nObject3D.prototype.renderDepth = function () {\n\n\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n};\n\nObject3D.prototype.translate = function ( distance, axis ) {\n\n\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\treturn this.translateOnAxis( axis, distance );\n\n};\n\nObject3D.prototype.getWorldRotation = function () {\n\n\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n};\n\nObject3D.prototype.applyMatrix = function ( matrix ) {\n\n\tconsole.warn( 'THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().' );\n\treturn this.applyMatrix4( matrix );\n\n};\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nMesh.prototype.setDrawMode = function () {\n\n\tconsole.error( 'THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n\n};\n\nObject.defineProperties( Mesh.prototype, {\n\n\tdrawMode: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.' );\n\t\t\treturn TrianglesDrawMode;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n\n\t\t}\n\t}\n\n} );\n\nSkinnedMesh.prototype.initBones = function () {\n\n\tconsole.error( 'THREE.SkinnedMesh: initBones() has been removed.' );\n\n};\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( 'THREE.PerspectiveCamera.setLens is deprecated. ' +\n\t\t\t'Use .setFocalLength and .filmGauge for a photographic setup.' );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tdynamic: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\treturn this.usage === DynamicDrawUsage;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\tthis.setUsage( DynamicDrawUsage );\n\n\t\t}\n\t}\n\n} );\n\nBufferAttribute.prototype.setDynamic = function ( value ) {\n\n\tconsole.warn( 'THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\treturn this;\n\n};\n\nBufferAttribute.prototype.copyIndicesArray = function ( /* indices */ ) {\n\n\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n},\n\nBufferAttribute.prototype.setArray = function ( /* array */ ) {\n\n\tconsole.error( 'THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n};\n\n//\n\nBufferGeometry.prototype.addIndex = function ( index ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\tthis.setIndex( index );\n\n};\n\nBufferGeometry.prototype.addAttribute = function ( name, attribute ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().' );\n\n\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\treturn this.setAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t}\n\n\tif ( name === 'index' ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\tthis.setIndex( attribute );\n\n\t\treturn this;\n\n\t}\n\n\treturn this.setAttribute( name, attribute );\n\n};\n\nBufferGeometry.prototype.addDrawCall = function ( start, count, indexOffset ) {\n\n\tif ( indexOffset !== undefined ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t}\n\n\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\tthis.addGroup( start, count );\n\n};\n\nBufferGeometry.prototype.clearDrawCalls = function () {\n\n\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\tthis.clearGroups();\n\n};\n\nBufferGeometry.prototype.computeOffsets = function () {\n\n\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n};\n\nBufferGeometry.prototype.removeAttribute = function ( name ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().' );\n\n\treturn this.deleteAttribute( name );\n\n};\n\nBufferGeometry.prototype.applyMatrix = function ( matrix ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().' );\n\treturn this.applyMatrix4( matrix );\n\n};\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\nInterleavedBuffer.prototype.setDynamic = function ( value ) {\n\n\tconsole.warn( 'THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\treturn this;\n\n};\n\nInterleavedBuffer.prototype.setArray = function ( /* array */ ) {\n\n\tconsole.error( 'THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n};\n\n//\n\nExtrudeGeometry.prototype.getArrays = function () {\n\n\tconsole.error( 'THREE.ExtrudeGeometry: .getArrays() has been removed.' );\n\n};\n\nExtrudeGeometry.prototype.addShapeList = function () {\n\n\tconsole.error( 'THREE.ExtrudeGeometry: .addShapeList() has been removed.' );\n\n};\n\nExtrudeGeometry.prototype.addShape = function () {\n\n\tconsole.error( 'THREE.ExtrudeGeometry: .addShape() has been removed.' );\n\n};\n\n//\n\nScene.prototype.dispose = function () {\n\n\tconsole.error( 'THREE.Scene: .dispose() has been removed.' );\n\n};\n\n//\n\nUniform.prototype.onUpdate = function () {\n\n\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\treturn this;\n\n};\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\n\toverdraw: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t}\n\t},\n\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t},\n\n\tstencilMask: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\treturn this.stencilFuncMask;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\tthis.stencilFuncMask = value;\n\n\t\t}\n\t},\n\n\tvertexTangents: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .vertexTangents has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .vertexTangents has been removed.' );\n\n\t\t}\n\t},\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nWebGLRenderer.prototype.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n\tthis.setRenderTarget( renderTarget );\n\tthis.clear( color, depth, stencil );\n\n};\n\nWebGLRenderer.prototype.animate = function ( callback ) {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\tthis.setAnimationLoop( callback );\n\n};\n\nWebGLRenderer.prototype.getCurrentRenderTarget = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\treturn this.getRenderTarget();\n\n};\n\nWebGLRenderer.prototype.getMaxAnisotropy = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\treturn this.capabilities.getMaxAnisotropy();\n\n};\n\nWebGLRenderer.prototype.getPrecision = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\treturn this.capabilities.precision;\n\n};\n\nWebGLRenderer.prototype.resetGLState = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\treturn this.state.reset();\n\n};\n\nWebGLRenderer.prototype.supportsFloatTextures = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\treturn this.extensions.get( 'OES_texture_float' );\n\n};\n\nWebGLRenderer.prototype.supportsHalfFloatTextures = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\treturn this.extensions.get( 'OES_texture_half_float' );\n\n};\n\nWebGLRenderer.prototype.supportsStandardDerivatives = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n};\n\nWebGLRenderer.prototype.supportsCompressedTextureS3TC = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n};\n\nWebGLRenderer.prototype.supportsCompressedTexturePVRTC = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n};\n\nWebGLRenderer.prototype.supportsBlendMinMax = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n};\n\nWebGLRenderer.prototype.supportsVertexTextures = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\treturn this.capabilities.vertexTextures;\n\n};\n\nWebGLRenderer.prototype.supportsInstancedArrays = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n};\n\nWebGLRenderer.prototype.enableScissorTest = function ( boolean ) {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\tthis.setScissorTest( boolean );\n\n};\n\nWebGLRenderer.prototype.initMaterial = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.addPrePlugin = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.addPostPlugin = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.updateShadowMap = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setFaceCulling = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.allocTextureUnit = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setTexture = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setTexture2D = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setTextureCube = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.getActiveMipMapLevel = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().' );\n\treturn this.getActiveMipmapLevel();\n\n};\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\tcontext: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.' );\n\t\t\treturn this.getContext();\n\n\t\t}\n\t},\n\tvr: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .vr has been renamed to .xr' );\n\t\t\treturn this.xr;\n\n\t\t}\n\t},\n\tgammaInput: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n\n\t\t}\n\t},\n\tgammaOutput: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n\t\t\tthis.outputEncoding = ( value === true ) ? sRGBEncoding : LinearEncoding;\n\n\t\t}\n\t},\n\ttoneMappingWhitePoint: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\n\t\t\treturn 1.0;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\n\n\t\t}\n\t},\n\tgammaFactor: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaFactor has been removed.' );\n\t\t\treturn 2;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaFactor has been removed.' );\n\n\t\t}\n\t}\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\nclass WebGLRenderTargetCube extends WebGLCubeRenderTarget {\n\n\tconstructor( width, height, options ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).' );\n\t\tsuper( width, options );\n\n\t}\n\n}\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tconst scope = this;\n\tconst audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\nCubeCamera.prototype.clear = function ( renderer, color, depth, stencil ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .clear() is now .renderTarget.clear().' );\n\treturn this.renderTarget.clear( renderer, color, depth, stencil );\n\n};\n\nImageUtils.crossOrigin = undefined;\n\nImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\tconst loader = new TextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tconst texture = loader.load( url, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\tconst loader = new CubeTextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tconst texture = loader.load( urls, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadCompressedTexture = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\nImageUtils.loadCompressedTextureCube = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been removed' );\n\n}\n\n//\n\nfunction JSONLoader() {\n\n\tconsole.error( 'THREE.JSONLoader has been removed.' );\n\n}\n\n//\n\nconst SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js' );\n\n}\n\n//\n\nclass ParametricGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tconsole.error( 'THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js' );\n\t\tsuper();\n\n\t}\n\n}\n\nclass TextGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tconsole.error( 'THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js' );\n\t\tsuper();\n\n\t}\n\n}\n\nfunction FontLoader() {\n\n\tconsole.error( 'THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js' );\n\n}\n\nfunction Font() {\n\n\tconsole.error( 'THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js' );\n\n}\n\nfunction ImmediateRenderObject() {\n\n\tconsole.error( 'THREE.ImmediateRenderObject has been removed.' );\n\n}\n\nclass WebGLMultisampleRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, options ) {\n\n\t\tconsole.error( 'THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the \"samples\" property to greater 0 to enable multisampling.' );\n\t\tsuper( width, height, options );\n\t\tthis.samples = 4;\n\n\t}\n\n}\n\nclass DataTexture2DArray extends DataArrayTexture {\n\n\tconstructor( data, width, height, depth ) {\n\n\t\tconsole.warn( 'THREE.DataTexture2DArray has been renamed to DataArrayTexture.' );\n\t\tsuper( data, width, height, depth );\n\n\t}\n\n}\n\nclass DataTexture3D extends Data3DTexture {\n\n\tconstructor( data, width, height, depth ) {\n\n\t\tconsole.warn( 'THREE.DataTexture3D has been renamed to Data3DTexture.' );\n\t\tsuper( data, width, height, depth );\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, AxisHelper, BackSide, BasicDepthPacking, BasicShadowMap, BinaryTextureLoader, Bone, BooleanKeyframeTrack, BoundingBoxHelper, Box2, Box3, Box3Helper, BoxGeometry as BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasRenderer, CanvasTexture, CapsuleGeometry as CapsuleBufferGeometry, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry as CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedTexture, CompressedTextureLoader, ConeGeometry as ConeBufferGeometry, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry as CylinderBufferGeometry, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTexture2DArray, DataTexture3D, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry as DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicBufferAttribute, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EdgesHelper, EllipseCurve, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry as ExtrudeBufferGeometry, ExtrudeGeometry, FaceColors, FileLoader, FlatShading, Float16BufferAttribute, Float32Attribute, Float32BufferAttribute, Float64Attribute, Float64BufferAttribute, FloatType, Fog, FogExp2, Font, FontLoader, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronGeometry as IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, ImmediateRenderObject, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16Attribute, Int16BufferAttribute, Int32Attribute, Int32BufferAttribute, Int8Attribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, JSONLoader, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry as LatheBufferGeometry, LatheGeometry, Layers, LensFlare, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LinePieces, LineSegments, LineStrip, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils as Math, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshFaceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiMaterial, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoColors, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry as OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, ParametricGeometry, Particle, ParticleBasicMaterial, ParticleSystem, ParticleSystemMaterial, Path, PerspectiveCamera, Plane, PlaneGeometry as PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointCloud, PointCloudMaterial, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry as PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBFormat, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry as RingBufferGeometry, RingGeometry, SRGBColorSpace, Scene, SceneUtils, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry as ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, SmoothShading, Source, Sphere, SphereGeometry as SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry as TetrahedronBufferGeometry, TetrahedronGeometry, TextGeometry, Texture, TextureLoader, TorusGeometry as TorusBufferGeometry, TorusGeometry, TorusKnotGeometry as TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry as TubeBufferGeometry, TubeGeometry, UVMapping, Uint16Attribute, Uint16BufferAttribute, Uint32Attribute, Uint32BufferAttribute, Uint8Attribute, Uint8BufferAttribute, Uint8ClampedAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, Vertex, VertexColors, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLMultisampleRenderTarget, WebGLRenderTarget, WebGLRenderTargetCube, WebGLRenderer, WebGLUtils, WireframeGeometry, WireframeHelper, WrapAroundEnding, XHRLoader, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, sRGBEncoding };\n","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\t\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerCancel );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t    removePointer( event );\n\n\t\t    if ( pointers.length === 0 ) {\n\n\t\t        scope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t        scope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t        scope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t    }\n\n\t\t    scope.dispatchEvent( _endEvent );\n\n\t\t    state = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onPointerCancel( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerCancel );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = TOUCH.PAN;\n\t\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\nexport { OrbitControls, MapControls };\n","/**\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n *  bevelOffset: <float> // how far from text outline does bevel start\n * }\n */\n\nimport {\n\tExtrudeGeometry\n} from 'three';\n\nclass TextGeometry extends ExtrudeGeometry {\n\n\tconstructor( text, parameters = {} ) {\n\n\t\tconst font = parameters.font;\n\n\t\tif ( font === undefined ) {\n\n\t\t\tsuper(); // generate default extrude geometry\n\n\t\t} else {\n\n\t\t\tconst shapes = font.generateShapes( text, parameters.size );\n\n\t\t\t// translate parameters to ExtrudeGeometry API\n\n\t\t\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t\t\t// defaults\n\n\t\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\t\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\t\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\t\t\tsuper( shapes, parameters );\n\n\t\t}\n\n\t\tthis.type = 'TextGeometry';\n\n\t}\n\n}\n\n\nexport { TextGeometry };\n","import {\n\tFileLoader,\n\tLoader,\n\tShapePath\n} from 'three';\n\nclass FontLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tconst font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\treturn new Font( json );\n\n\t}\n\n}\n\n//\n\nclass Font {\n\n\tconstructor( data ) {\n\n\t\tthis.type = 'Font';\n\n\t\tthis.data = data;\n\n\t}\n\n\tgenerateShapes( text, size = 100 ) {\n\n\t\tconst shapes = [];\n\t\tconst paths = createPaths( text, size, this.data );\n\n\t\tfor ( let p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nfunction createPaths( text, size, data ) {\n\n\tconst chars = Array.from( text );\n\tconst scale = size / data.resolution;\n\tconst line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tconst paths = [];\n\n\tlet offsetX = 0, offsetY = 0;\n\n\tfor ( let i = 0; i < chars.length; i ++ ) {\n\n\t\tconst char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tconst ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tconst glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) {\n\n\t\tconsole.error( 'THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.' );\n\n\t\treturn;\n\n\t}\n\n\tconst path = new ShapePath();\n\n\tlet x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tconst outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( let i = 0, l = outline.length; i < l; ) {\n\n\t\t\tconst action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\nFont.prototype.isFont = true;\n\nexport { FontLoader, Font };\n","/**\n * Lightweight thenable implementation that is entirely self-contained within a single\n * function with no external dependencies so it can be easily shipped across to a WorkerModule.\n *\n * This implementation conforms fully to the Promises/A+ spec so it can safely interoperate\n * with other thenable implementations. https://github.com/promises-aplus/promises-spec\n *\n * *However*, it is _not_ a full implementation of ES2015 Promises, e.g. it does not\n * have the same constructor signature and does not expose a `catch` method or the static\n * `resolve`/`reject`/`all`/`race` initializer methods. If you need to hand a Thenable\n * instance off to consuming code that may expect a true Promise, you'll want to wrap it\n * in a native-or-polyfilled Promise first.\n *\n * (Why yet another Promises/A+ implementation? Great question. We needed a polyfill-like\n * thing that was (a) wrapped in a single function for easy serialization across to a Worker,\n * and (b) was as small as possible -- at ~900B minified (~500B gzipped) this is the smallest\n * implementation I've found. And also, exercises like this are challenging and fun.)\n */\nfunction BespokeThenable() {\n  var state = 0; // 0=pending, 1=fulfilled, -1=rejected\n  var queue = [];\n  var value;\n  var scheduled = 0;\n  var completeCalled = 0;\n\n  function then(onResolve, onReject) {\n    var nextThenable = BespokeThenable();\n\n    function handleNext() {\n      var cb = state > 0 ? onResolve : onReject;\n      if (isFn(cb)) {\n        try {\n          var result = cb(value);\n          if (result === nextThenable) {\n            recursiveError();\n          }\n          var resultThen = getThenableThen(result);\n          if (resultThen) {\n            resultThen.call(result, nextThenable.resolve, nextThenable.reject);\n          } else {\n            nextThenable.resolve(result);\n          }\n        } catch (err) {\n          nextThenable.reject(err);\n        }\n      } else {\n        nextThenable[state > 0 ? 'resolve' : 'reject'](value);\n      }\n    }\n\n    queue.push(handleNext);\n    if (state) {\n      scheduleQueueFlush();\n    }\n    return nextThenable\n  }\n\n  var resolve = oneTime(function (val) {\n    if (!completeCalled) {\n      complete(1, val);\n    }\n  });\n\n  var reject = oneTime(function (reason) {\n    if (!completeCalled) {\n      complete(-1, reason);\n    }\n  });\n\n  function complete(st, val) {\n    completeCalled++;\n    var ignoreThrow = 0;\n    try {\n      if (val === thenableObj) {\n        recursiveError();\n      }\n      var valThen = st > 0 && getThenableThen(val);\n      if (valThen) {\n        valThen.call(val, oneTime(function (v) {\n          ignoreThrow++;\n          complete(1, v);\n        }), oneTime(function (v) {\n          ignoreThrow++;\n          complete(-1, v);\n        }));\n      } else {\n        state = st;\n        value = val;\n        scheduleQueueFlush();\n      }\n    } catch(e) {\n      if (!state && !ignoreThrow) {\n        complete(-1, e);\n      }\n    }\n  }\n\n  function scheduleQueueFlush() {\n    if (!scheduled) {\n      setTimeout(flushQueue, 0); //TODO setImmediate or postMessage approach if available?\n      scheduled = 1;\n    }\n  }\n\n  function flushQueue() {\n    var q = queue;\n    scheduled = 0;\n    queue = [];\n    q.forEach(callIt);\n  }\n\n  function callIt(fn) {\n    fn();\n  }\n\n  function getThenableThen(val) {\n    var valThen = val && (isFn(val) || typeof val === 'object') && val.then;\n    return isFn(valThen) && valThen\n  }\n\n  function oneTime(fn) {\n    var called = 0;\n    return function() {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      if (!called++) {\n        fn.apply(this, args);\n      }\n    }\n  }\n\n  function recursiveError() {\n    throw new TypeError('Chaining cycle detected')\n  }\n\n  var isFn = function (v) { return typeof v === 'function'; };\n\n  var thenableObj = {\n    then: then,\n    resolve: resolve,\n    reject: reject\n  };\n  return thenableObj\n}\n\n\n/**\n * Thenable implementation that uses a native Promise under the covers. This implementation\n * is preferred if Promise is available, for better performance and dev tools integration.\n * @constructor\n */\nfunction NativePromiseThenable() {\n  var resolve, reject;\n  var promise = new Promise(function (res, rej) {\n    resolve = res;\n    reject = rej;\n  });\n  return {\n    then: promise.then.bind(promise),\n    resolve: resolve,\n    reject: reject\n  }\n}\n\n/**\n * Promise.all() impl:\n */\nBespokeThenable.all = NativePromiseThenable.all = function(items) {\n  var resultCount = 0;\n  var results = [];\n  var out = DefaultThenable();\n  if (items.length === 0) {\n    out.resolve([]);\n  } else {\n    items.forEach(function (item, i) {\n      var itemThenable = DefaultThenable();\n      itemThenable.resolve(item);\n      itemThenable.then(function (res) {\n        resultCount++;\n        results[i] = res;\n        if (resultCount === items.length) {\n          out.resolve(results);\n        }\n      }, out.reject);\n    });\n  }\n  return out\n};\n\n\n/**\n * Choose the best Thenable implementation and export it as the default.\n */\nvar DefaultThenable = typeof Promise === 'function' ? NativePromiseThenable : BespokeThenable;\n\n/**\n * Main content for the worker that handles the loading and execution of\n * modules within it.\n */\nfunction workerBootstrap() {\n  var modules = Object.create(null);\n\n  // Handle messages for registering a module\n  function registerModule(ref, callback) {\n    var id = ref.id;\n    var name = ref.name;\n    var dependencies = ref.dependencies; if ( dependencies === void 0 ) dependencies = [];\n    var init = ref.init; if ( init === void 0 ) init = function(){};\n    var getTransferables = ref.getTransferables; if ( getTransferables === void 0 ) getTransferables = null;\n\n    // Only register once\n    if (modules[id]) { return }\n\n    try {\n      // If any dependencies are modules, ensure they're registered and grab their value\n      dependencies = dependencies.map(function (dep) {\n        if (dep && dep.isWorkerModule) {\n          registerModule(dep, function (depResult) {\n            if (depResult instanceof Error) { throw depResult }\n          });\n          dep = modules[dep.id].value;\n        }\n        return dep\n      });\n\n      // Rehydrate functions\n      init = rehydrate((\"<\" + name + \">.init\"), init);\n      if (getTransferables) {\n        getTransferables = rehydrate((\"<\" + name + \">.getTransferables\"), getTransferables);\n      }\n\n      // Initialize the module and store its value\n      var value = null;\n      if (typeof init === 'function') {\n        value = init.apply(void 0, dependencies);\n      } else {\n        console.error('worker module init function failed to rehydrate');\n      }\n      modules[id] = {\n        id: id,\n        value: value,\n        getTransferables: getTransferables\n      };\n      callback(value);\n    } catch(err) {\n      if (!(err && err.noLog)) {\n        console.error(err);\n      }\n      callback(err);\n    }\n  }\n\n  // Handle messages for calling a registered module's result function\n  function callModule(ref, callback) {\n    var ref$1;\n\n    var id = ref.id;\n    var args = ref.args;\n    if (!modules[id] || typeof modules[id].value !== 'function') {\n      callback(new Error((\"Worker module \" + id + \": not found or its 'init' did not return a function\")));\n    }\n    try {\n      var result = (ref$1 = modules[id]).value.apply(ref$1, args);\n      if (result && typeof result.then === 'function') {\n        result.then(handleResult, function (rej) { return callback(rej instanceof Error ? rej : new Error('' + rej)); });\n      } else {\n        handleResult(result);\n      }\n    } catch(err) {\n      callback(err);\n    }\n    function handleResult(result) {\n      try {\n        var tx = modules[id].getTransferables && modules[id].getTransferables(result);\n        if (!tx || !Array.isArray(tx) || !tx.length) {\n          tx = undefined; //postMessage is very picky about not passing null or empty transferables\n        }\n        callback(result, tx);\n      } catch(err) {\n        console.error(err);\n        callback(err);\n      }\n    }\n  }\n\n  function rehydrate(name, str) {\n    var result = void 0;\n    self.troikaDefine = function (r) { return result = r; };\n    var url = URL.createObjectURL(\n      new Blob(\n        [(\"/** \" + (name.replace(/\\*/g, '')) + \" **/\\n\\ntroikaDefine(\\n\" + str + \"\\n)\")],\n        {type: 'application/javascript'}\n      )\n    );\n    try {\n      importScripts(url);\n    } catch(err) {\n      console.error(err);\n    }\n    URL.revokeObjectURL(url);\n    delete self.troikaDefine;\n    return result\n  }\n\n  // Handler for all messages within the worker\n  self.addEventListener('message', function (e) {\n    var ref = e.data;\n    var messageId = ref.messageId;\n    var action = ref.action;\n    var data = ref.data;\n    try {\n      // Module registration\n      if (action === 'registerModule') {\n        registerModule(data, function (result) {\n          if (result instanceof Error) {\n            postMessage({\n              messageId: messageId,\n              success: false,\n              error: result.message\n            });\n          } else {\n            postMessage({\n              messageId: messageId,\n              success: true,\n              result: {isCallable: typeof result === 'function'}\n            });\n          }\n        });\n      }\n      // Invocation\n      if (action === 'callModule') {\n        callModule(data, function (result, transferables) {\n          if (result instanceof Error) {\n            postMessage({\n              messageId: messageId,\n              success: false,\n              error: result.message\n            });\n          } else {\n            postMessage({\n              messageId: messageId,\n              success: true,\n              result: result\n            }, transferables || undefined);\n          }\n        });\n      }\n    } catch(err) {\n      postMessage({\n        messageId: messageId,\n        success: false,\n        error: err.stack\n      });\n    }\n  });\n}\n\n/**\n * Fallback for `defineWorkerModule` that behaves identically but runs in the main\n * thread, for when the execution environment doesn't support web workers or they\n * are disallowed due to e.g. CSP security restrictions.\n */\nfunction defineMainThreadModule(options) {\n  var moduleFunc = function() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    return moduleFunc._getInitResult().then(function (initResult) {\n      if (typeof initResult === 'function') {\n        return initResult.apply(void 0, args)\n      } else {\n        throw new Error('Worker module function was called but `init` did not return a callable function')\n      }\n    })\n  };\n  moduleFunc._getInitResult = function() {\n    // We can ignore getTransferables in main thread. TODO workerId?\n    var dependencies = options.dependencies;\n    var init = options.init;\n\n    // Resolve dependencies\n    dependencies = Array.isArray(dependencies) ? dependencies.map(function (dep) { return dep && dep._getInitResult ? dep._getInitResult() : dep; }\n    ) : [];\n\n    // Invoke init with the resolved dependencies\n    var initThenable = DefaultThenable.all(dependencies).then(function (deps) {\n      return init.apply(null, deps)\n    });\n\n    // Cache the resolved promise for subsequent calls\n    moduleFunc._getInitResult = function () { return initThenable; };\n\n    return initThenable\n  };\n  return moduleFunc\n}\n\nvar supportsWorkers = function () {\n  var supported = false;\n\n  // Only attempt worker initialization in browsers; elsewhere it would just be\n  // noise e.g. loading into a Node environment for SSR.\n  if (typeof window !== 'undefined' && typeof window.document !== 'undefined') {\n    try {\n      // TODO additional checks for things like importScripts within the worker?\n      //  Would need to be an async check.\n      var worker = new Worker(\n        URL.createObjectURL(new Blob([''], { type: 'application/javascript' }))\n      );\n      worker.terminate();\n      supported = true;\n    } catch (err) {\n      if (typeof process !== 'undefined' && process.env.NODE_ENV === 'test') ; else {\n        console.log(\n          (\"Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: [\" + (err.message) + \"]\")\n        );\n      }\n    }\n  }\n\n  // Cached result\n  supportsWorkers = function () { return supported; };\n  return supported\n};\n\nvar _workerModuleId = 0;\nvar _messageId = 0;\nvar _allowInitAsString = false;\nvar workers = Object.create(null);\nvar registeredModules = Object.create(null); //workerId -> Set<unregisterFn>\nvar openRequests = Object.create(null);\n\n\n/**\n * Define a module of code that will be executed with a web worker. This provides a simple\n * interface for moving chunks of logic off the main thread, and managing their dependencies\n * among one another.\n *\n * @param {object} options\n * @param {function} options.init\n * @param {array} [options.dependencies]\n * @param {function} [options.getTransferables]\n * @param {string} [options.name]\n * @param {string} [options.workerId]\n * @return {function(...[*]): {then}}\n */\nfunction defineWorkerModule(options) {\n  if ((!options || typeof options.init !== 'function') && !_allowInitAsString) {\n    throw new Error('requires `options.init` function')\n  }\n  var dependencies = options.dependencies;\n  var init = options.init;\n  var getTransferables = options.getTransferables;\n  var workerId = options.workerId;\n\n  if (!supportsWorkers()) {\n    return defineMainThreadModule(options)\n  }\n\n  if (workerId == null) {\n    workerId = '#default';\n  }\n  var id = \"workerModule\" + (++_workerModuleId);\n  var name = options.name || id;\n  var registrationThenable = null;\n\n  dependencies = dependencies && dependencies.map(function (dep) {\n    // Wrap raw functions as worker modules with no dependencies\n    if (typeof dep === 'function' && !dep.workerModuleData) {\n      _allowInitAsString = true;\n      dep = defineWorkerModule({\n        workerId: workerId,\n        name: (\"<\" + name + \"> function dependency: \" + (dep.name)),\n        init: (\"function(){return (\\n\" + (stringifyFunction(dep)) + \"\\n)}\")\n      });\n      _allowInitAsString = false;\n    }\n    // Grab postable data for worker modules\n    if (dep && dep.workerModuleData) {\n      dep = dep.workerModuleData;\n    }\n    return dep\n  });\n\n  function moduleFunc() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    // Register this module if needed\n    if (!registrationThenable) {\n      registrationThenable = callWorker(workerId,'registerModule', moduleFunc.workerModuleData);\n      var unregister = function () {\n        registrationThenable = null;\n        registeredModules[workerId].delete(unregister);\n      }\n      ;(registeredModules[workerId] || (registeredModules[workerId] = new Set())).add(unregister);\n    }\n\n    // Invoke the module, returning a thenable\n    return registrationThenable.then(function (ref) {\n      var isCallable = ref.isCallable;\n\n      if (isCallable) {\n        return callWorker(workerId,'callModule', {id: id, args: args})\n      } else {\n        throw new Error('Worker module function was called but `init` did not return a callable function')\n      }\n    })\n  }\n  moduleFunc.workerModuleData = {\n    isWorkerModule: true,\n    id: id,\n    name: name,\n    dependencies: dependencies,\n    init: stringifyFunction(init),\n    getTransferables: getTransferables && stringifyFunction(getTransferables)\n  };\n  return moduleFunc\n}\n\n/**\n * Terminate an active Worker by a workerId that was passed to defineWorkerModule.\n * This only terminates the Worker itself; the worker module will remain available\n * and if you call it again its Worker will be respawned.\n * @param {string} workerId\n */\nfunction terminateWorker(workerId) {\n  // Unregister all modules that were registered in that worker\n  if (registeredModules[workerId]) {\n    registeredModules[workerId].forEach(function (unregister) {\n      unregister();\n    });\n  }\n  // Terminate the Worker object\n  if (workers[workerId]) {\n    workers[workerId].terminate();\n    delete workers[workerId];\n  }\n}\n\n/**\n * Stringifies a function into a form that can be deserialized in the worker\n * @param fn\n */\nfunction stringifyFunction(fn) {\n  var str = fn.toString();\n  // If it was defined in object method/property format, it needs to be modified\n  if (!/^function/.test(str) && /^\\w+\\s*\\(/.test(str)) {\n    str = 'function ' + str;\n  }\n  return str\n}\n\n\nfunction getWorker(workerId) {\n  var worker = workers[workerId];\n  if (!worker) {\n    // Bootstrap the worker's content\n    var bootstrap = stringifyFunction(workerBootstrap);\n\n    // Create the worker from the bootstrap function content\n    worker = workers[workerId] = new Worker(\n      URL.createObjectURL(\n        new Blob(\n          [(\"/** Worker Module Bootstrap: \" + (workerId.replace(/\\*/g, '')) + \" **/\\n\\n;(\" + bootstrap + \")()\")],\n          {type: 'application/javascript'}\n        )\n      )\n    );\n\n    // Single handler for response messages from the worker\n    worker.onmessage = function (e) {\n      var response = e.data;\n      var msgId = response.messageId;\n      var callback = openRequests[msgId];\n      if (!callback) {\n        throw new Error('WorkerModule response with empty or unknown messageId')\n      }\n      delete openRequests[msgId];\n      callback(response);\n    };\n  }\n  return worker\n}\n\n// Issue a call to the worker with a callback to handle the response\nfunction callWorker(workerId, action, data) {\n  var thenable = DefaultThenable();\n  var messageId = ++_messageId;\n  openRequests[messageId] = function (response) {\n    if (response.success) {\n      thenable.resolve(response.result);\n    } else {\n      thenable.reject(new Error((\"Error in worker \" + action + \" call: \" + (response.error))));\n    }\n  };\n  getWorker(workerId).postMessage({\n    messageId: messageId,\n    action: action,\n    data: data\n  });\n  return thenable\n}\n\n/**\n * Just the {@link Thenable} function wrapped as a worker module. If another worker\n * module needs Thenable as a dependency, it's better to pass this module rather than\n * the raw function in its `dependencies` array so it only gets registered once.\n */\nvar ThenableWorkerModule = /*#__PURE__*/defineWorkerModule({\n  name: 'Thenable',\n  dependencies: [DefaultThenable],\n  init: function(Thenable) {\n    return Thenable\n  }\n});\n\nexport { DefaultThenable as Thenable, ThenableWorkerModule, defineWorkerModule, stringifyFunction, terminateWorker };\n","function SDFGenerator() {\nvar exports = (function (exports) {\n\n  /**\n   * Find the point on a quadratic bezier curve at t where t is in the range [0, 1]\n   */\n  function pointOnQuadraticBezier (x0, y0, x1, y1, x2, y2, t, pointOut) {\n    var t2 = 1 - t;\n    pointOut.x = t2 * t2 * x0 + 2 * t2 * t * x1 + t * t * x2;\n    pointOut.y = t2 * t2 * y0 + 2 * t2 * t * y1 + t * t * y2;\n  }\n\n  /**\n   * Find the point on a cubic bezier curve at t where t is in the range [0, 1]\n   */\n  function pointOnCubicBezier (x0, y0, x1, y1, x2, y2, x3, y3, t, pointOut) {\n    var t2 = 1 - t;\n    pointOut.x = t2 * t2 * t2 * x0 + 3 * t2 * t2 * t * x1 + 3 * t2 * t * t * x2 + t * t * t * x3;\n    pointOut.y = t2 * t2 * t2 * y0 + 3 * t2 * t2 * t * y1 + 3 * t2 * t * t * y2 + t * t * t * y3;\n  }\n\n  /**\n   * Parse a path string into its constituent line/curve commands, invoking a callback for each.\n   * @param {string} pathString - An SVG-like path string to parse; should only contain commands: M/L/Q/C/Z\n   * @param {function(\n   *   command: 'L'|'Q'|'C',\n   *   startX: number,\n   *   startY: number,\n   *   endX: number,\n   *   endY: number,\n   *   ctrl1X?: number,\n   *   ctrl1Y?: number,\n   *   ctrl2X?: number,\n   *   ctrl2Y?: number\n   * )} commandCallback - A callback function that will be called once for each parsed path command, passing the\n   *                      command identifier (only L/Q/C commands) and its numeric arguments.\n   */\n  function forEachPathCommand(pathString, commandCallback) {\n    var segmentRE = /([MLQCZ])([^MLQCZ]*)/g;\n    var match, firstX, firstY, prevX, prevY;\n    while ((match = segmentRE.exec(pathString))) {\n      var args = match[2]\n        .replace(/^\\s*|\\s*$/g, '')\n        .split(/[,\\s]+/)\n        .map(function (v) { return parseFloat(v); });\n      switch (match[1]) {\n        case 'M':\n          prevX = firstX = args[0];\n          prevY = firstY = args[1];\n          break\n        case 'L':\n          if (args[0] !== prevX || args[1] !== prevY) { // yup, some fonts have zero-length line commands\n            commandCallback('L', prevX, prevY, (prevX = args[0]), (prevY = args[1]));\n          }\n          break\n        case 'Q': {\n          commandCallback('Q', prevX, prevY, (prevX = args[2]), (prevY = args[3]), args[0], args[1]);\n          break\n        }\n        case 'C': {\n          commandCallback('C', prevX, prevY, (prevX = args[4]), (prevY = args[5]), args[0], args[1], args[2], args[3]);\n          break\n        }\n        case 'Z':\n          if (prevX !== firstX || prevY !== firstY) {\n            commandCallback('L', prevX, prevY, firstX, firstY);\n          }\n          break\n      }\n    }\n  }\n\n  /**\n   * Convert a path string to a series of straight line segments\n   * @param {string} pathString - An SVG-like path string to parse; should only contain commands: M/L/Q/C/Z\n   * @param {function(x1:number, y1:number, x2:number, y2:number)} segmentCallback - A callback\n   *        function that will be called once for every line segment\n   * @param {number} [curvePoints] - How many straight line segments to use when approximating a\n   *        bezier curve in the path. Defaults to 16.\n   */\n  function pathToLineSegments (pathString, segmentCallback, curvePoints) {\n    if ( curvePoints === void 0 ) curvePoints = 16;\n\n    var tempPoint = { x: 0, y: 0 };\n    forEachPathCommand(pathString, function (command, startX, startY, endX, endY, ctrl1X, ctrl1Y, ctrl2X, ctrl2Y) {\n      switch (command) {\n        case 'L':\n          segmentCallback(startX, startY, endX, endY);\n          break\n        case 'Q': {\n          var prevCurveX = startX;\n          var prevCurveY = startY;\n          for (var i = 1; i < curvePoints; i++) {\n            pointOnQuadraticBezier(\n              startX, startY,\n              ctrl1X, ctrl1Y,\n              endX, endY,\n              i / (curvePoints - 1),\n              tempPoint\n            );\n            segmentCallback(prevCurveX, prevCurveY, tempPoint.x, tempPoint.y);\n            prevCurveX = tempPoint.x;\n            prevCurveY = tempPoint.y;\n          }\n          break\n        }\n        case 'C': {\n          var prevCurveX$1 = startX;\n          var prevCurveY$1 = startY;\n          for (var i$1 = 1; i$1 < curvePoints; i$1++) {\n            pointOnCubicBezier(\n              startX, startY,\n              ctrl1X, ctrl1Y,\n              ctrl2X, ctrl2Y,\n              endX, endY,\n              i$1 / (curvePoints - 1),\n              tempPoint\n            );\n            segmentCallback(prevCurveX$1, prevCurveY$1, tempPoint.x, tempPoint.y);\n            prevCurveX$1 = tempPoint.x;\n            prevCurveY$1 = tempPoint.y;\n          }\n          break\n        }\n      }\n    });\n  }\n\n  var viewportQuadVertex = \"precision highp float;attribute vec2 aUV;varying vec2 vUV;void main(){vUV=aUV;gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}\";\n\n  var copyTexFragment = \"precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){gl_FragColor=texture2D(tex,vUV);}\";\n\n  var cache = new WeakMap();\n\n  var glContextParams = {\n    premultipliedAlpha: false,\n    preserveDrawingBuffer: true,\n    antialias: false,\n    depth: false,\n  };\n\n  /**\n   * This is a little helper library for WebGL. It assists with state management for a GL context.\n   * It's pretty tightly wrapped to the needs of this package, not very general-purpose.\n   *\n   * @param { WebGLRenderingContext | HTMLCanvasElement | OffscreenCanvas } glOrCanvas - the GL context to wrap\n   * @param { ({gl, getExtension, withProgram, withTexture, withTextureFramebuffer, handleContextLoss}) => void } callback\n   */\n  function withWebGLContext (glOrCanvas, callback) {\n    var gl = glOrCanvas.getContext ? glOrCanvas.getContext('webgl', glContextParams) : glOrCanvas;\n    var wrapper = cache.get(gl);\n    if (!wrapper) {\n      var isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext;\n      var extensions = {};\n      var programs = {};\n      var textures = {};\n      var textureUnit = -1;\n      var framebufferStack = [];\n\n      gl.canvas.addEventListener('webglcontextlost', function (e) {\n        handleContextLoss();\n        e.preventDefault();\n      }, false);\n\n      function getExtension (name) {\n        var ext = extensions[name];\n        if (!ext) {\n          ext = extensions[name] = gl.getExtension(name);\n          if (!ext) {\n            throw new Error((name + \" not supported\"))\n          }\n        }\n        return ext\n      }\n\n      function compileShader (src, type) {\n        var shader = gl.createShader(type);\n        gl.shaderSource(shader, src);\n        gl.compileShader(shader);\n        // const status = gl.getShaderParameter(shader, gl.COMPILE_STATUS)\n        // if (!status && !gl.isContextLost()) {\n        //   throw new Error(gl.getShaderInfoLog(shader).trim())\n        // }\n        return shader\n      }\n\n      function withProgram (name, vert, frag, func) {\n        if (!programs[name]) {\n          var attributes = {};\n          var uniforms = {};\n          var program = gl.createProgram();\n          gl.attachShader(program, compileShader(vert, gl.VERTEX_SHADER));\n          gl.attachShader(program, compileShader(frag, gl.FRAGMENT_SHADER));\n          gl.linkProgram(program);\n\n          programs[name] = {\n            program: program,\n            transaction: function transaction (func) {\n              gl.useProgram(program);\n              func({\n                setUniform: function setUniform (type, name) {\n                  var values = [], len = arguments.length - 2;\n                  while ( len-- > 0 ) values[ len ] = arguments[ len + 2 ];\n\n                  var uniformLoc = uniforms[name] || (uniforms[name] = gl.getUniformLocation(program, name));\n                  gl[(\"uniform\" + type)].apply(gl, [ uniformLoc ].concat( values ));\n                },\n\n                setAttribute: function setAttribute (name, size, usage, instancingDivisor, data) {\n                  var attr = attributes[name];\n                  if (!attr) {\n                    attr = attributes[name] = {\n                      buf: gl.createBuffer(), // TODO should we destroy our buffers?\n                      loc: gl.getAttribLocation(program, name),\n                      data: null\n                    };\n                  }\n                  gl.bindBuffer(gl.ARRAY_BUFFER, attr.buf);\n                  gl.vertexAttribPointer(attr.loc, size, gl.FLOAT, false, 0, 0);\n                  gl.enableVertexAttribArray(attr.loc);\n                  if (isWebGL2) {\n                    gl.vertexAttribDivisor(attr.loc, instancingDivisor);\n                  } else {\n                    getExtension('ANGLE_instanced_arrays').vertexAttribDivisorANGLE(attr.loc, instancingDivisor);\n                  }\n                  if (data !== attr.data) {\n                    gl.bufferData(gl.ARRAY_BUFFER, data, usage);\n                    attr.data = data;\n                  }\n                }\n              });\n            }\n          };\n        }\n\n        programs[name].transaction(func);\n      }\n\n      function withTexture (name, func) {\n        textureUnit++;\n        try {\n          gl.activeTexture(gl.TEXTURE0 + textureUnit);\n          var texture = textures[name];\n          if (!texture) {\n            texture = textures[name] = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n          }\n          gl.bindTexture(gl.TEXTURE_2D, texture);\n          func(texture, textureUnit);\n        } finally {\n          textureUnit--;\n        }\n      }\n\n      function withTextureFramebuffer (texture, textureUnit, func) {\n        var framebuffer = gl.createFramebuffer();\n        framebufferStack.push(framebuffer);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n        gl.activeTexture(gl.TEXTURE0 + textureUnit);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n        try {\n          func(framebuffer);\n        } finally {\n          gl.deleteFramebuffer(framebuffer);\n          gl.bindFramebuffer(gl.FRAMEBUFFER, framebufferStack[--framebufferStack.length - 1] || null);\n        }\n      }\n\n      function handleContextLoss () {\n        extensions = {};\n        programs = {};\n        textures = {};\n        textureUnit = -1;\n        framebufferStack.length = 0;\n      }\n\n      cache.set(gl, wrapper = {\n        gl: gl,\n        isWebGL2: isWebGL2,\n        getExtension: getExtension,\n        withProgram: withProgram,\n        withTexture: withTexture,\n        withTextureFramebuffer: withTextureFramebuffer,\n        handleContextLoss: handleContextLoss,\n      });\n    }\n    callback(wrapper);\n  }\n\n\n  function renderImageData(glOrCanvas, imageData, x, y, width, height, channels, framebuffer) {\n    if ( channels === void 0 ) channels = 15;\n    if ( framebuffer === void 0 ) framebuffer = null;\n\n    withWebGLContext(glOrCanvas, function (ref) {\n      var gl = ref.gl;\n      var withProgram = ref.withProgram;\n      var withTexture = ref.withTexture;\n\n      withTexture('copy', function (tex, texUnit) {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n        withProgram('copy', viewportQuadVertex, copyTexFragment, function (ref) {\n          var setUniform = ref.setUniform;\n          var setAttribute = ref.setAttribute;\n\n          setAttribute('aUV', 2, gl.STATIC_DRAW, 0, new Float32Array([0, 0, 2, 0, 0, 2]));\n          setUniform('1i', 'image', texUnit);\n          gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer || null);\n          gl.disable(gl.BLEND);\n          gl.colorMask(channels & 8, channels & 4, channels & 2, channels & 1);\n          gl.viewport(x, y, width, height);\n          gl.scissor(x, y, width, height);\n          gl.drawArrays(gl.TRIANGLES, 0, 3);\n        });\n      });\n    });\n  }\n\n  /**\n   * Resizing a canvas clears its contents; this utility copies the previous contents over.\n   * @param canvas\n   * @param newWidth\n   * @param newHeight\n   */\n  function resizeWebGLCanvasWithoutClearing(canvas, newWidth, newHeight) {\n    var width = canvas.width;\n    var height = canvas.height;\n    withWebGLContext(canvas, function (ref) {\n      var gl = ref.gl;\n\n      var data = new Uint8Array(width * height * 4);\n      gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, data);\n      canvas.width = newWidth;\n      canvas.height = newHeight;\n      renderImageData(gl, data, 0, 0, width, height);\n    });\n  }\n\n  var webglUtils = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    withWebGLContext: withWebGLContext,\n    renderImageData: renderImageData,\n    resizeWebGLCanvasWithoutClearing: resizeWebGLCanvasWithoutClearing\n  });\n\n  function generate$2 (sdfWidth, sdfHeight, path, viewBox, maxDistance, sdfExponent) {\n    if ( sdfExponent === void 0 ) sdfExponent = 1;\n\n    var textureData = new Uint8Array(sdfWidth * sdfHeight);\n\n    var viewBoxWidth = viewBox[2] - viewBox[0];\n    var viewBoxHeight = viewBox[3] - viewBox[1];\n\n    // Decompose all paths into straight line segments and add them to an index\n    var segments = [];\n    pathToLineSegments(path, function (x1, y1, x2, y2) {\n      segments.push({\n        x1: x1, y1: y1, x2: x2, y2: y2,\n        minX: Math.min(x1, x2),\n        minY: Math.min(y1, y2),\n        maxX: Math.max(x1, x2),\n        maxY: Math.max(y1, y2)\n      });\n    });\n\n    // Sort segments by maxX, this will let us short-circuit some loops below\n    segments.sort(function (a, b) { return a.maxX - b.maxX; });\n\n    // For each target SDF texel, find the distance from its center to its nearest line segment,\n    // map that distance to an alpha value, and write that alpha to the texel\n    for (var sdfX = 0; sdfX < sdfWidth; sdfX++) {\n      for (var sdfY = 0; sdfY < sdfHeight; sdfY++) {\n        var signedDist = findNearestSignedDistance(\n          viewBox[0] + viewBoxWidth * (sdfX + 0.5) / sdfWidth,\n          viewBox[1] + viewBoxHeight * (sdfY + 0.5) / sdfHeight\n        );\n\n        // Use an exponential scale to ensure the texels very near the glyph path have adequate\n        // precision, while allowing the distance field to cover the entire texture, given that\n        // there are only 8 bits available. Formula visualized: https://www.desmos.com/calculator/uiaq5aqiam\n        var alpha = Math.pow((1 - Math.abs(signedDist) / maxDistance), sdfExponent) / 2;\n        if (signedDist < 0) {\n          alpha = 1 - alpha;\n        }\n\n        alpha = Math.max(0, Math.min(255, Math.round(alpha * 255))); //clamp\n        textureData[sdfY * sdfWidth + sdfX] = alpha;\n      }\n    }\n\n    return textureData\n\n    /**\n     * For a given x/y, search the index for the closest line segment and return\n     * its signed distance. Negative = inside, positive = outside, zero = on edge\n     * @param x\n     * @param y\n     * @returns {number}\n     */\n    function findNearestSignedDistance (x, y) {\n      var closestDistSq = Infinity;\n      var closestDist = Infinity;\n\n      for (var i = segments.length; i--;) {\n        var seg = segments[i];\n        if (seg.maxX + closestDist <= x) { break } //sorting by maxX means no more can be closer, so we can short-circuit\n        if (x + closestDist > seg.minX && y - closestDist < seg.maxY && y + closestDist > seg.minY) {\n          var distSq = absSquareDistanceToLineSegment(x, y, seg.x1, seg.y1, seg.x2, seg.y2);\n          if (distSq < closestDistSq) {\n            closestDistSq = distSq;\n            closestDist = Math.sqrt(closestDistSq);\n          }\n        }\n      }\n\n      // Flip to negative distance if inside the poly\n      if (isPointInPoly(x, y)) {\n        closestDist = -closestDist;\n      }\n      return closestDist\n    }\n\n    /**\n     * Determine whether the given point lies inside or outside the glyph. Uses a simple\n     * winding-number ray casting algorithm using a ray pointing east from the point.\n     */\n    function isPointInPoly (x, y) {\n      var winding = 0;\n      for (var i = segments.length; i--;) {\n        var seg = segments[i];\n        if (seg.maxX <= x) { break } //sorting by maxX means no more can cross, so we can short-circuit\n        var intersects = ((seg.y1 > y) !== (seg.y2 > y)) && (x < (seg.x2 - seg.x1) * (y - seg.y1) / (seg.y2 - seg.y1) + seg.x1);\n        if (intersects) {\n          winding += seg.y1 < seg.y2 ? 1 : -1;\n        }\n      }\n      return winding !== 0\n    }\n  }\n\n  function generateIntoCanvas$2(sdfWidth, sdfHeight, path, viewBox, maxDistance, sdfExponent, canvas, x, y, channel) {\n    if ( sdfExponent === void 0 ) sdfExponent = 1;\n    if ( x === void 0 ) x = 0;\n    if ( y === void 0 ) y = 0;\n    if ( channel === void 0 ) channel = 0;\n\n    generateIntoFramebuffer$1(sdfWidth, sdfHeight, path, viewBox, maxDistance, sdfExponent, canvas, null, x, y, channel);\n  }\n\n  function generateIntoFramebuffer$1 (sdfWidth, sdfHeight, path, viewBox, maxDistance, sdfExponent, glOrCanvas, framebuffer, x, y, channel) {\n    if ( sdfExponent === void 0 ) sdfExponent = 1;\n    if ( x === void 0 ) x = 0;\n    if ( y === void 0 ) y = 0;\n    if ( channel === void 0 ) channel = 0;\n\n    var data = generate$2(sdfWidth, sdfHeight, path, viewBox, maxDistance, sdfExponent);\n    // Expand single-channel data to rbga\n    var rgbaData = new Uint8Array(data.length * 4);\n    for (var i = 0; i < data.length; i++) {\n      rgbaData[i * 4 + channel] = data[i];\n    }\n    renderImageData(glOrCanvas, rgbaData, x, y, sdfWidth, sdfHeight, 1 << (3 - channel), framebuffer);\n  }\n\n  /**\n   * Find the absolute distance from a point to a line segment at closest approach\n   */\n  function absSquareDistanceToLineSegment (x, y, lineX0, lineY0, lineX1, lineY1) {\n    var ldx = lineX1 - lineX0;\n    var ldy = lineY1 - lineY0;\n    var lengthSq = ldx * ldx + ldy * ldy;\n    var t = lengthSq ? Math.max(0, Math.min(1, ((x - lineX0) * ldx + (y - lineY0) * ldy) / lengthSq)) : 0;\n    var dx = x - (lineX0 + t * ldx);\n    var dy = y - (lineY0 + t * ldy);\n    return dx * dx + dy * dy\n  }\n\n  var javascript = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    generate: generate$2,\n    generateIntoCanvas: generateIntoCanvas$2,\n    generateIntoFramebuffer: generateIntoFramebuffer$1\n  });\n\n  var mainVertex = \"precision highp float;uniform vec4 uGlyphBounds;attribute vec2 aUV;attribute vec4 aLineSegment;varying vec4 vLineSegment;varying vec2 vGlyphXY;void main(){vLineSegment=aLineSegment;vGlyphXY=mix(uGlyphBounds.xy,uGlyphBounds.zw,aUV);gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}\";\n\n  var mainFragment = \"precision highp float;uniform vec4 uGlyphBounds;uniform float uMaxDistance;uniform float uExponent;varying vec4 vLineSegment;varying vec2 vGlyphXY;float absDistToSegment(vec2 point,vec2 lineA,vec2 lineB){vec2 lineDir=lineB-lineA;float lenSq=dot(lineDir,lineDir);float t=lenSq==0.0 ? 0.0 : clamp(dot(point-lineA,lineDir)/lenSq,0.0,1.0);vec2 linePt=lineA+t*lineDir;return distance(point,linePt);}void main(){vec4 seg=vLineSegment;vec2 p=vGlyphXY;float dist=absDistToSegment(p,seg.xy,seg.zw);float val=pow(1.0-clamp(dist/uMaxDistance,0.0,1.0),uExponent)*0.5;bool crossing=(seg.y>p.y!=seg.w>p.y)&&(p.x<(seg.z-seg.x)*(p.y-seg.y)/(seg.w-seg.y)+seg.x);bool crossingUp=crossing&&vLineSegment.y<vLineSegment.w;gl_FragColor=vec4(crossingUp ? 1.0/255.0 : 0.0,crossing&&!crossingUp ? 1.0/255.0 : 0.0,0.0,val);}\";\n\n  var postFragment = \"precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){vec4 color=texture2D(tex,vUV);bool inside=color.r!=color.g;float val=inside ? 1.0-color.a : color.a;gl_FragColor=vec4(val);}\";\n\n  // Single triangle covering viewport\n  var viewportUVs = new Float32Array([0, 0, 2, 0, 0, 2]);\n\n  var implicitContext = null;\n  var isTestingSupport = false;\n  var NULL_OBJECT = {};\n  var supportByCanvas = new WeakMap(); // canvas -> bool\n\n  function validateSupport (glOrCanvas) {\n    if (!isTestingSupport && !isSupported(glOrCanvas)) {\n      throw new Error('WebGL generation not supported')\n    }\n  }\n\n  function generate$1 (sdfWidth, sdfHeight, path, viewBox, maxDistance, sdfExponent, glOrCanvas) {\n    if ( sdfExponent === void 0 ) sdfExponent = 1;\n    if ( glOrCanvas === void 0 ) glOrCanvas = null;\n\n    if (!glOrCanvas) {\n      glOrCanvas = implicitContext;\n      if (!glOrCanvas) {\n        var canvas = typeof OffscreenCanvas === 'function'\n          ? new OffscreenCanvas(1, 1)\n          : typeof document !== 'undefined'\n            ? document.createElement('canvas')\n            : null;\n        if (!canvas) {\n          throw new Error('OffscreenCanvas or DOM canvas not supported')\n        }\n        glOrCanvas = implicitContext = canvas.getContext('webgl', { depth: false });\n      }\n    }\n\n    validateSupport(glOrCanvas);\n\n    var rgbaData = new Uint8Array(sdfWidth * sdfHeight * 4); //not Uint8ClampedArray, cuz Safari\n\n    // Render into a background texture framebuffer\n    withWebGLContext(glOrCanvas, function (ref) {\n      var gl = ref.gl;\n      var withTexture = ref.withTexture;\n      var withTextureFramebuffer = ref.withTextureFramebuffer;\n\n      withTexture('readable', function (texture, textureUnit) {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, sdfWidth, sdfHeight, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        withTextureFramebuffer(texture, textureUnit, function (framebuffer) {\n          generateIntoFramebuffer(\n            sdfWidth,\n            sdfHeight,\n            path,\n            viewBox,\n            maxDistance,\n            sdfExponent,\n            gl,\n            framebuffer,\n            0,\n            0,\n            0 // red channel\n          );\n          gl.readPixels(0, 0, sdfWidth, sdfHeight, gl.RGBA, gl.UNSIGNED_BYTE, rgbaData);\n        });\n      });\n    });\n\n    // Throw away all but the red channel\n    var data = new Uint8Array(sdfWidth * sdfHeight);\n    for (var i = 0, j = 0; i < rgbaData.length; i += 4) {\n      data[j++] = rgbaData[i];\n    }\n\n    return data\n  }\n\n  function generateIntoCanvas$1(sdfWidth, sdfHeight, path, viewBox, maxDistance, sdfExponent, canvas, x, y, channel) {\n    if ( sdfExponent === void 0 ) sdfExponent = 1;\n    if ( x === void 0 ) x = 0;\n    if ( y === void 0 ) y = 0;\n    if ( channel === void 0 ) channel = 0;\n\n    generateIntoFramebuffer(sdfWidth, sdfHeight, path, viewBox, maxDistance, sdfExponent, canvas, null, x, y, channel);\n  }\n\n  function generateIntoFramebuffer (sdfWidth, sdfHeight, path, viewBox, maxDistance, sdfExponent, glOrCanvas, framebuffer, x, y, channel) {\n    if ( sdfExponent === void 0 ) sdfExponent = 1;\n    if ( x === void 0 ) x = 0;\n    if ( y === void 0 ) y = 0;\n    if ( channel === void 0 ) channel = 0;\n\n    // Verify support\n    validateSupport(glOrCanvas);\n\n    // Compute path segments\n    var lineSegmentCoords = [];\n    pathToLineSegments(path, function (x1, y1, x2, y2) {\n      lineSegmentCoords.push(x1, y1, x2, y2);\n    });\n    lineSegmentCoords = new Float32Array(lineSegmentCoords);\n\n    withWebGLContext(glOrCanvas, function (ref) {\n      var gl = ref.gl;\n      var isWebGL2 = ref.isWebGL2;\n      var getExtension = ref.getExtension;\n      var withProgram = ref.withProgram;\n      var withTexture = ref.withTexture;\n      var withTextureFramebuffer = ref.withTextureFramebuffer;\n      var handleContextLoss = ref.handleContextLoss;\n\n      withTexture('rawDistances', function (intermediateTexture, intermediateTextureUnit) {\n        if (sdfWidth !== intermediateTexture._lastWidth || sdfHeight !== intermediateTexture._lastHeight) {\n          gl.texImage2D(\n            gl.TEXTURE_2D, 0, gl.RGBA,\n            intermediateTexture._lastWidth = sdfWidth,\n            intermediateTexture._lastHeight = sdfHeight,\n            0, gl.RGBA, gl.UNSIGNED_BYTE, null\n          );\n        }\n\n        // Unsigned distance pass\n        withProgram('main', mainVertex, mainFragment, function (ref) {\n          var setAttribute = ref.setAttribute;\n          var setUniform = ref.setUniform;\n\n          // Init extensions\n          var instancingExtension = !isWebGL2 && getExtension('ANGLE_instanced_arrays');\n          var blendMinMaxExtension = !isWebGL2 && getExtension('EXT_blend_minmax');\n\n          // Init/update attributes\n          setAttribute('aUV', 2, gl.STATIC_DRAW, 0, viewportUVs);\n          setAttribute('aLineSegment', 4, gl.DYNAMIC_DRAW, 1, lineSegmentCoords);\n\n          // Init/update uniforms\n          setUniform.apply(void 0, [ '4f', 'uGlyphBounds' ].concat( viewBox ));\n          setUniform('1f', 'uMaxDistance', maxDistance);\n          setUniform('1f', 'uExponent', sdfExponent);\n\n          // Render initial unsigned distance / winding number info to a texture\n          withTextureFramebuffer(intermediateTexture, intermediateTextureUnit, function (framebuffer) {\n            gl.enable(gl.BLEND);\n            gl.colorMask(true, true, true, true);\n            gl.viewport(0, 0, sdfWidth, sdfHeight);\n            gl.scissor(0, 0, sdfWidth, sdfHeight);\n            gl.blendFunc(gl.ONE, gl.ONE);\n            // Red+Green channels are incremented (FUNC_ADD) for segment-ray crossings to give a \"winding number\".\n            // Alpha holds the closest (MAX) unsigned distance.\n            gl.blendEquationSeparate(gl.FUNC_ADD, isWebGL2 ? gl.MAX : blendMinMaxExtension.MAX_EXT);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n            if (isWebGL2) {\n              gl.drawArraysInstanced(gl.TRIANGLES, 0, 3, lineSegmentCoords.length / 4);\n            } else {\n              instancingExtension.drawArraysInstancedANGLE(gl.TRIANGLES, 0, 3, lineSegmentCoords.length / 4);\n            }\n            // Debug\n            // const debug = new Uint8Array(sdfWidth * sdfHeight * 4)\n            // gl.readPixels(0, 0, sdfWidth, sdfHeight, gl.RGBA, gl.UNSIGNED_BYTE, debug)\n            // console.log('intermediate texture data: ', debug)\n          });\n        });\n\n        // Use the data stored in the texture to apply inside/outside and write to the output framebuffer rect+channel.\n        withProgram('post', viewportQuadVertex, postFragment, function (program) {\n          program.setAttribute('aUV', 2, gl.STATIC_DRAW, 0, viewportUVs);\n          program.setUniform('1i', 'tex', intermediateTextureUnit);\n          gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n          gl.disable(gl.BLEND);\n          gl.colorMask(channel === 0, channel === 1, channel === 2, channel === 3);\n          gl.viewport(x, y, sdfWidth, sdfHeight);\n          gl.scissor(x, y, sdfWidth, sdfHeight);\n          gl.drawArrays(gl.TRIANGLES, 0, 3);\n        });\n      });\n\n      // Handle context loss occurring during any of the above calls\n      if (gl.isContextLost()) {\n        handleContextLoss();\n        throw new Error('webgl context lost')\n      }\n    });\n  }\n\n  function isSupported (glOrCanvas) {\n    var key = (!glOrCanvas || glOrCanvas === implicitContext) ? NULL_OBJECT : (glOrCanvas.canvas || glOrCanvas);\n    var supported = supportByCanvas.get(key);\n    if (supported === undefined) {\n      isTestingSupport = true;\n      var failReason = null;\n      try {\n        // Since we can't detect all failure modes up front, let's just do a trial run of a\n        // simple path and compare what we get back to the correct expected result. This will\n        // also serve to prime the shader compilation.\n        var expectedResult = [\n          97, 106, 97, 61,\n          99, 137, 118, 80,\n          80, 118, 137, 99,\n          61, 97, 106, 97\n        ];\n        var testResult = generate$1(\n          4,\n          4,\n          'M8,8L16,8L24,24L16,24Z',\n          [0, 0, 32, 32],\n          24,\n          1,\n          glOrCanvas\n        );\n        supported = testResult && expectedResult.length === testResult.length &&\n          testResult.every(function (val, i) { return val === expectedResult[i]; });\n        if (!supported) {\n          failReason = 'bad trial run results';\n          console.info(expectedResult, testResult);\n        }\n      } catch (err) {\n        // TODO if it threw due to webgl context loss, should we maybe leave isSupported as null and try again later?\n        supported = false;\n        failReason = err.message;\n      }\n      if (failReason) {\n        console.warn('WebGL SDF generation not supported:', failReason);\n      }\n      isTestingSupport = false;\n      supportByCanvas.set(key, supported);\n    }\n    return supported\n  }\n\n  var webgl = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    generate: generate$1,\n    generateIntoCanvas: generateIntoCanvas$1,\n    generateIntoFramebuffer: generateIntoFramebuffer,\n    isSupported: isSupported\n  });\n\n  /**\n   * Generate an SDF texture image for a 2D path.\n   *\n   * @param {number} sdfWidth - width of the SDF output image in pixels.\n   * @param {number} sdfHeight - height of the SDF output image in pixels.\n   * @param {string} path - an SVG-like path string describing the glyph; should only contain commands: M/L/Q/C/Z.\n   * @param {number[]} viewBox - [minX, minY, maxX, maxY] in font units aligning with the texture's edges.\n   * @param {number} maxDistance - the maximum distance from the glyph path in font units that will be encoded; defaults\n   *        to half the maximum viewBox dimension.\n   * @param {number} [sdfExponent] - specifies an exponent for encoding the SDF's distance values; higher exponents\n   *        will give greater precision nearer the glyph's path.\n   * @return {Uint8Array}\n   */\n  function generate(\n    sdfWidth,\n    sdfHeight,\n    path,\n    viewBox,\n    maxDistance,\n    sdfExponent\n  ) {\n    if ( maxDistance === void 0 ) maxDistance = Math.max(viewBox[2] - viewBox[0], viewBox[3] - viewBox[1]) / 2;\n    if ( sdfExponent === void 0 ) sdfExponent = 1;\n\n    try {\n      return generate$1.apply(webgl, arguments)\n    } catch(e) {\n      console.info('WebGL SDF generation failed, falling back to JS', e);\n      return generate$2.apply(javascript, arguments)\n    }\n  }\n\n  /**\n   * Generate an SDF texture image for a 2D path, inserting the result into a WebGL `canvas` at a given x/y position\n   * and color channel. This is generally much faster than calling `generate` because it does not require reading pixels\n   * back from the GPU->CPU -- the `canvas` can be used directly as a WebGL texture image, so it all stays on the GPU.\n   *\n   * @param {number} sdfWidth - width of the SDF output image in pixels.\n   * @param {number} sdfHeight - height of the SDF output image in pixels.\n   * @param {string} path - an SVG-like path string describing the glyph; should only contain commands: M/L/Q/C/Z.\n   * @param {number[]} viewBox - [minX, minY, maxX, maxY] in font units aligning with the texture's edges.\n   * @param {number} maxDistance - the maximum distance from the glyph path in font units that will be encoded; defaults\n   *        to half the maximum viewBox dimension.\n   * @param {number} [sdfExponent] - specifies an exponent for encoding the SDF's distance values; higher exponents\n   *        will give greater precision nearer the glyph's path.\n   * @param {HTMLCanvasElement|OffscreenCanvas} canvas - a WebGL-enabled canvas into which the SDF will be rendered.\n   *        Only the relevant rect/channel will be modified, the rest will be preserved. To avoid unpredictable results\n   *        due to shared GL context state, this canvas should be dedicated to use by this library alone.\n   * @param {number} x - the x position at which to render the SDF.\n   * @param {number} y - the y position at which to render the SDF.\n   * @param {number} channel - the color channel index (0-4) into which the SDF will be rendered.\n   * @return {Uint8Array}\n   */\n  function generateIntoCanvas(\n    sdfWidth,\n    sdfHeight,\n    path,\n    viewBox,\n    maxDistance,\n    sdfExponent,\n    canvas,\n    x,\n    y,\n    channel\n  ) {\n    if ( maxDistance === void 0 ) maxDistance = Math.max(viewBox[2] - viewBox[0], viewBox[3] - viewBox[1]) / 2;\n    if ( sdfExponent === void 0 ) sdfExponent = 1;\n    if ( x === void 0 ) x = 0;\n    if ( y === void 0 ) y = 0;\n    if ( channel === void 0 ) channel = 0;\n\n    try {\n      return generateIntoCanvas$1.apply(webgl, arguments)\n    } catch(e) {\n      console.info('WebGL SDF generation failed, falling back to JS', e);\n      return generateIntoCanvas$2.apply(javascript, arguments)\n    }\n  }\n\n  exports.forEachPathCommand = forEachPathCommand;\n  exports.generate = generate;\n  exports.generateIntoCanvas = generateIntoCanvas;\n  exports.javascript = javascript;\n  exports.pathToLineSegments = pathToLineSegments;\n  exports.webgl = webgl;\n  exports.webglUtils = webglUtils;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}({}));\nreturn exports\n}\n\nexport { SDFGenerator as default };\n","function bidiFactory() {\nvar bidi = (function (exports) {\n\n  // Bidi character types data, auto generated\n  var DATA = {\n    \"R\": \"13k,1a,2,3,3,2+1j,ch+16,a+1,5+2,2+n,5,a,4,6+16,4+3,h+1b,4mo,179q,2+9,2+11,2i9+7y,2+68,4,3+4,5+13,4+3,2+4k,3+29,8+cf,1t+7z,w+17,3+3m,1t+3z,16o1+5r,8+30,8+mc,29+1r,29+4v,75+73\",\n    \"EN\": \"1c+9,3d+1,6,187+9,513,4+5,7+9,sf+j,175h+9,qw+q,161f+1d,4xt+a,25i+9\",\n    \"ES\": \"17,2,6dp+1,f+1,av,16vr,mx+1,4o,2\",\n    \"ET\": \"z+2,3h+3,b+1,ym,3e+1,2o,p4+1,8,6u,7c,g6,1wc,1n9+4,30+1b,2n,6d,qhx+1,h0m,a+1,49+2,63+1,4+1,6bb+3,12jj\",\n    \"AN\": \"16o+5,2j+9,2+1,35,ed,1ff2+9,87+u\",\n    \"CS\": \"18,2+1,b,2u,12k,55v,l,17v0,2,3,53,2+1,b\",\n    \"B\": \"a,3,f+2,2v,690\",\n    \"S\": \"9,2,k\",\n    \"WS\": \"c,k,4f4,1vk+a,u,1j,335\",\n    \"ON\": \"x+1,4+4,h+5,r+5,r+3,z,5+3,2+1,2+1,5,2+2,3+4,o,w,ci+1,8+d,3+d,6+8,2+g,39+1,9,6+1,2,33,b8,3+1,3c+1,7+1,5r,b,7h+3,sa+5,2,3i+6,jg+3,ur+9,2v,ij+1,9g+9,7+a,8m,4+1,49+x,14u,2+2,c+2,e+2,e+2,e+1,i+n,e+e,2+p,u+2,e+2,36+1,2+3,2+1,b,2+2,6+5,2,2,2,h+1,5+4,6+3,3+f,16+2,5+3l,3+81,1y+p,2+40,q+a,m+13,2r+ch,2+9e,75+hf,3+v,2+2w,6e+5,f+6,75+2a,1a+p,2+2g,d+5x,r+b,6+3,4+o,g,6+1,6+2,2k+1,4,2j,5h+z,1m+1,1e+f,t+2,1f+e,d+3,4o+3,2s+1,w,535+1r,h3l+1i,93+2,2s,b+1,3l+x,2v,4g+3,21+3,kz+1,g5v+1,5a,j+9,n+v,2,3,2+8,2+1,3+2,2,3,46+1,4+4,h+5,r+5,r+a,3h+2,4+6,b+4,78,1r+24,4+c,4,1hb,ey+6,103+j,16j+c,1ux+7,5+g,fsh,jdq+1t,4,57+2e,p1,1m,1m,1m,1m,4kt+1,7j+17,5+2r,d+e,3+e,2+e,2+10,m+4,w,1n+5,1q,4z+5,4b+rb,9+c,4+c,4+37,d+2g,8+b,l+b,5+1j,9+9,7+13,9+t,3+1,27+3c,2+29,2+3q,d+d,3+4,4+2,6+6,a+o,8+6,a+2,e+6,16+42,2+1i\",\n    \"BN\": \"0+8,6+d,2s+5,2+p,e,4m9,1kt+2,2b+5,5+5,17q9+v,7k,6p+8,6+1,119d+3,440+7,96s+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+75,6p+2rz,1ben+1,1ekf+1,1ekf+1\",\n    \"NSM\": \"lc+33,7o+6,7c+18,2,2+1,2+1,2,21+a,1d+k,h,2u+6,3+5,3+1,2+3,10,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,g+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+g,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,k1+w,2db+2,3y,2p+v,ff+3,30+1,n9x+3,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,r2,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+5,3+1,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2d+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,f0c+4,1o+6,t5,1s+3,2a,f5l+1,43t+2,i+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,gzhy+6n\",\n    \"AL\": \"16w,3,2,e+1b,z+2,2+2s,g+1,8+1,b+m,2+t,s+2i,c+e,4h+f,1d+1e,1bwe+dp,3+3z,x+c,2+1,35+3y,2rm+z,5+7,b+5,dt+l,c+u,17nl+27,1t+27,4x+6n,3+d\",\n    \"LRO\": \"6ct\",\n    \"RLO\": \"6cu\",\n    \"LRE\": \"6cq\",\n    \"RLE\": \"6cr\",\n    \"PDF\": \"6cs\",\n    \"LRI\": \"6ee\",\n    \"RLI\": \"6ef\",\n    \"FSI\": \"6eg\",\n    \"PDI\": \"6eh\"\n  };\n\n  var TYPES = {};\n  var TYPES_TO_NAMES = {};\n  TYPES.L = 1; //L is the default\n  TYPES_TO_NAMES[1] = 'L';\n  Object.keys(DATA).forEach(function (type, i) {\n    TYPES[type] = 1 << (i + 1);\n    TYPES_TO_NAMES[TYPES[type]] = type;\n  });\n  Object.freeze(TYPES);\n\n  var ISOLATE_INIT_TYPES = TYPES.LRI | TYPES.RLI | TYPES.FSI;\n  var STRONG_TYPES = TYPES.L | TYPES.R | TYPES.AL;\n  var NEUTRAL_ISOLATE_TYPES = TYPES.B | TYPES.S | TYPES.WS | TYPES.ON | TYPES.FSI | TYPES.LRI | TYPES.RLI | TYPES.PDI;\n  var BN_LIKE_TYPES = TYPES.BN | TYPES.RLE | TYPES.LRE | TYPES.RLO | TYPES.LRO | TYPES.PDF;\n  var TRAILING_TYPES = TYPES.S | TYPES.WS | TYPES.B | ISOLATE_INIT_TYPES | TYPES.PDI | BN_LIKE_TYPES;\n\n  var map = null;\n\n  function parseData () {\n    if (!map) {\n      //const start = performance.now()\n      map = new Map();\n      var loop = function ( type ) {\n        if (DATA.hasOwnProperty(type)) {\n          var lastCode = 0;\n          DATA[type].split(',').forEach(function (range) {\n            var ref = range.split('+');\n            var skip = ref[0];\n            var step = ref[1];\n            skip = parseInt(skip, 36);\n            step = step ? parseInt(step, 36) : 0;\n            map.set(lastCode += skip, TYPES[type]);\n            for (var i = 0; i < step; i++) {\n              map.set(++lastCode, TYPES[type]);\n            }\n          });\n        }\n      };\n\n      for (var type in DATA) loop( type );\n      //console.log(`char types parsed in ${performance.now() - start}ms`)\n    }\n  }\n\n  /**\n   * @param {string} char\n   * @return {number}\n   */\n  function getBidiCharType (char) {\n    parseData();\n    return map.get(char.codePointAt(0)) || TYPES.L\n  }\n\n  function getBidiCharTypeName(char) {\n    return TYPES_TO_NAMES[getBidiCharType(char)]\n  }\n\n  // Bidi bracket pairs data, auto generated\n  var data$1 = {\n    \"pairs\": \"14>1,1e>2,u>2,2wt>1,1>1,1ge>1,1wp>1,1j>1,f>1,hm>1,1>1,u>1,u6>1,1>1,+5,28>1,w>1,1>1,+3,b8>1,1>1,+3,1>3,-1>-1,3>1,1>1,+2,1s>1,1>1,x>1,th>1,1>1,+2,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,4q>1,1e>2,u>2,2>1,+1\",\n    \"canonical\": \"6f1>-6dx,6dy>-6dx,6ec>-6ed,6ee>-6ed,6ww>2jj,-2ji>2jj,14r4>-1e7l,1e7m>-1e7l,1e7m>-1e5c,1e5d>-1e5b,1e5c>-14qx,14qy>-14qx,14vn>-1ecg,1ech>-1ecg,1edu>-1ecg,1eci>-1ecg,1eda>-1ecg,1eci>-1ecg,1eci>-168q,168r>-168q,168s>-14ye,14yf>-14ye\"\n  };\n\n  /**\n   * Parses an string that holds encoded codepoint mappings, e.g. for bracket pairs or\n   * mirroring characters, as encoded by scripts/generateBidiData.js. Returns an object\n   * holding the `map`, and optionally a `reverseMap` if `includeReverse:true`.\n   * @param {string} encodedString\n   * @param {boolean} includeReverse - true if you want reverseMap in the output\n   * @return {{map: Map<number, number>, reverseMap?: Map<number, number>}}\n   */\n  function parseCharacterMap (encodedString, includeReverse) {\n    var radix = 36;\n    var lastCode = 0;\n    var map = new Map();\n    var reverseMap = includeReverse && new Map();\n    var prevPair;\n    encodedString.split(',').forEach(function visit(entry) {\n      if (entry.indexOf('+') !== -1) {\n        for (var i = +entry; i--;) {\n          visit(prevPair);\n        }\n      } else {\n        prevPair = entry;\n        var ref = entry.split('>');\n        var a = ref[0];\n        var b = ref[1];\n        a = String.fromCodePoint(lastCode += parseInt(a, radix));\n        b = String.fromCodePoint(lastCode += parseInt(b, radix));\n        map.set(a, b);\n        includeReverse && reverseMap.set(b, a);\n      }\n    });\n    return { map: map, reverseMap: reverseMap }\n  }\n\n  var openToClose, closeToOpen, canonical;\n\n  function parse$1 () {\n    if (!openToClose) {\n      //const start = performance.now()\n      var ref = parseCharacterMap(data$1.pairs, true);\n      var map = ref.map;\n      var reverseMap = ref.reverseMap;\n      openToClose = map;\n      closeToOpen = reverseMap;\n      canonical = parseCharacterMap(data$1.canonical, false).map;\n      //console.log(`brackets parsed in ${performance.now() - start}ms`)\n    }\n  }\n\n  function openingToClosingBracket (char) {\n    parse$1();\n    return openToClose.get(char) || null\n  }\n\n  function closingToOpeningBracket (char) {\n    parse$1();\n    return closeToOpen.get(char) || null\n  }\n\n  function getCanonicalBracket (char) {\n    parse$1();\n    return canonical.get(char) || null\n  }\n\n  // Local type aliases\n  var TYPE_L = TYPES.L;\n  var TYPE_R = TYPES.R;\n  var TYPE_EN = TYPES.EN;\n  var TYPE_ES = TYPES.ES;\n  var TYPE_ET = TYPES.ET;\n  var TYPE_AN = TYPES.AN;\n  var TYPE_CS = TYPES.CS;\n  var TYPE_B = TYPES.B;\n  var TYPE_S = TYPES.S;\n  var TYPE_ON = TYPES.ON;\n  var TYPE_BN = TYPES.BN;\n  var TYPE_NSM = TYPES.NSM;\n  var TYPE_AL = TYPES.AL;\n  var TYPE_LRO = TYPES.LRO;\n  var TYPE_RLO = TYPES.RLO;\n  var TYPE_LRE = TYPES.LRE;\n  var TYPE_RLE = TYPES.RLE;\n  var TYPE_PDF = TYPES.PDF;\n  var TYPE_LRI = TYPES.LRI;\n  var TYPE_RLI = TYPES.RLI;\n  var TYPE_FSI = TYPES.FSI;\n  var TYPE_PDI = TYPES.PDI;\n\n  /**\n   * @typedef {object} GetEmbeddingLevelsResult\n   * @property {{start, end, level}[]} paragraphs\n   * @property {Uint8Array} levels\n   */\n\n  /**\n   * This function applies the Bidirectional Algorithm to a string, returning the resolved embedding levels\n   * in a single Uint8Array plus a list of objects holding each paragraph's start and end indices and resolved\n   * base embedding level.\n   *\n   * @param {string} string - The input string\n   * @param {\"ltr\"|\"rtl\"|\"auto\"} [baseDirection] - Use \"ltr\" or \"rtl\" to force a base paragraph direction,\n   *        otherwise a direction will be chosen automatically from each paragraph's contents.\n   * @return {GetEmbeddingLevelsResult}\n   */\n  function getEmbeddingLevels (string, baseDirection) {\n    var MAX_DEPTH = 125;\n\n    // Start by mapping all characters to their unicode type, as a bitmask integer\n    var charTypes = new Uint32Array(string.length);\n    for (var i = 0; i < string.length; i++) {\n      charTypes[i] = getBidiCharType(string[i]);\n    }\n\n    var charTypeCounts = new Map(); //will be cleared at start of each paragraph\n    function changeCharType(i, type) {\n      var oldType = charTypes[i];\n      charTypes[i] = type;\n      charTypeCounts.set(oldType, charTypeCounts.get(oldType) - 1);\n      if (oldType & NEUTRAL_ISOLATE_TYPES) {\n        charTypeCounts.set(NEUTRAL_ISOLATE_TYPES, charTypeCounts.get(NEUTRAL_ISOLATE_TYPES) - 1);\n      }\n      charTypeCounts.set(type, (charTypeCounts.get(type) || 0) + 1);\n      if (type & NEUTRAL_ISOLATE_TYPES) {\n        charTypeCounts.set(NEUTRAL_ISOLATE_TYPES, (charTypeCounts.get(NEUTRAL_ISOLATE_TYPES) || 0) + 1);\n      }\n    }\n\n    var embedLevels = new Uint8Array(string.length);\n    var isolationPairs = new Map(); //init->pdi and pdi->init\n\n    // === 3.3.1 The Paragraph Level ===\n    // 3.3.1 P1: Split the text into paragraphs\n    var paragraphs = []; // [{start, end, level}, ...]\n    var paragraph = null;\n    for (var i$1 = 0; i$1 < string.length; i$1++) {\n      if (!paragraph) {\n        paragraphs.push(paragraph = {\n          start: i$1,\n          end: string.length - 1,\n          // 3.3.1 P2-P3: Determine the paragraph level\n          level: baseDirection === 'rtl' ? 1 : baseDirection === 'ltr' ? 0 : determineAutoEmbedLevel(i$1, false)\n        });\n      }\n      if (charTypes[i$1] & TYPE_B) {\n        paragraph.end = i$1;\n        paragraph = null;\n      }\n    }\n\n    var FORMATTING_TYPES = TYPE_RLE | TYPE_LRE | TYPE_RLO | TYPE_LRO | ISOLATE_INIT_TYPES | TYPE_PDI | TYPE_PDF | TYPE_B;\n    var nextEven = function (n) { return n + ((n & 1) ? 1 : 2); };\n    var nextOdd = function (n) { return n + ((n & 1) ? 2 : 1); };\n\n    // Everything from here on will operate per paragraph.\n    for (var paraIdx = 0; paraIdx < paragraphs.length; paraIdx++) {\n      paragraph = paragraphs[paraIdx];\n      var statusStack = [{\n        _level: paragraph.level,\n        _override: 0, //0=neutral, 1=L, 2=R\n        _isolate: 0 //bool\n      }];\n      var stackTop = (void 0);\n      var overflowIsolateCount = 0;\n      var overflowEmbeddingCount = 0;\n      var validIsolateCount = 0;\n      charTypeCounts.clear();\n\n      // === 3.3.2 Explicit Levels and Directions ===\n      for (var i$2 = paragraph.start; i$2 <= paragraph.end; i$2++) {\n        var charType = charTypes[i$2];\n        stackTop = statusStack[statusStack.length - 1];\n\n        // Set initial counts\n        charTypeCounts.set(charType, (charTypeCounts.get(charType) || 0) + 1);\n        if (charType & NEUTRAL_ISOLATE_TYPES) {\n          charTypeCounts.set(NEUTRAL_ISOLATE_TYPES, (charTypeCounts.get(NEUTRAL_ISOLATE_TYPES) || 0) + 1);\n        }\n\n        // Explicit Embeddings: 3.3.2 X2 - X3\n        if (charType & FORMATTING_TYPES) { //prefilter all formatters\n          if (charType & (TYPE_RLE | TYPE_LRE)) {\n            embedLevels[i$2] = stackTop._level; // 5.2\n            var level = (charType === TYPE_RLE ? nextOdd : nextEven)(stackTop._level);\n            if (level <= MAX_DEPTH && !overflowIsolateCount && !overflowEmbeddingCount) {\n              statusStack.push({\n                _level: level,\n                _override: 0,\n                _isolate: 0\n              });\n            } else if (!overflowIsolateCount) {\n              overflowEmbeddingCount++;\n            }\n          }\n\n          // Explicit Overrides: 3.3.2 X4 - X5\n          else if (charType & (TYPE_RLO | TYPE_LRO)) {\n            embedLevels[i$2] = stackTop._level; // 5.2\n            var level$1 = (charType === TYPE_RLO ? nextOdd : nextEven)(stackTop._level);\n            if (level$1 <= MAX_DEPTH && !overflowIsolateCount && !overflowEmbeddingCount) {\n              statusStack.push({\n                _level: level$1,\n                _override: (charType & TYPE_RLO) ? TYPE_R : TYPE_L,\n                _isolate: 0\n              });\n            } else if (!overflowIsolateCount) {\n              overflowEmbeddingCount++;\n            }\n          }\n\n          // Isolates: 3.3.2 X5a - X5c\n          else if (charType & ISOLATE_INIT_TYPES) {\n            // X5c - FSI becomes either RLI or LRI\n            if (charType & TYPE_FSI) {\n              charType = determineAutoEmbedLevel(i$2 + 1, true) === 1 ? TYPE_RLI : TYPE_LRI;\n            }\n\n            embedLevels[i$2] = stackTop._level;\n            if (stackTop._override) {\n              changeCharType(i$2, stackTop._override);\n            }\n            var level$2 = (charType === TYPE_RLI ? nextOdd : nextEven)(stackTop._level);\n            if (level$2 <= MAX_DEPTH && overflowIsolateCount === 0 && overflowEmbeddingCount === 0) {\n              validIsolateCount++;\n              statusStack.push({\n                _level: level$2,\n                _override: 0,\n                _isolate: 1,\n                _isolInitIndex: i$2\n              });\n            } else {\n              overflowIsolateCount++;\n            }\n          }\n\n          // Terminating Isolates: 3.3.2 X6a\n          else if (charType & TYPE_PDI) {\n            if (overflowIsolateCount > 0) {\n              overflowIsolateCount--;\n            } else if (validIsolateCount > 0) {\n              overflowEmbeddingCount = 0;\n              while (!statusStack[statusStack.length - 1]._isolate) {\n                statusStack.pop();\n              }\n              // Add to isolation pairs bidirectional mapping:\n              var isolInitIndex = statusStack[statusStack.length - 1]._isolInitIndex;\n              if (isolInitIndex != null) {\n                isolationPairs.set(isolInitIndex, i$2);\n                isolationPairs.set(i$2, isolInitIndex);\n              }\n              statusStack.pop();\n              validIsolateCount--;\n            }\n            stackTop = statusStack[statusStack.length - 1];\n            embedLevels[i$2] = stackTop._level;\n            if (stackTop._override) {\n              changeCharType(i$2, stackTop._override);\n            }\n          }\n\n\n          // Terminating Embeddings and Overrides: 3.3.2 X7\n          else if (charType & TYPE_PDF) {\n            if (overflowIsolateCount === 0) {\n              if (overflowEmbeddingCount > 0) {\n                overflowEmbeddingCount--;\n              } else if (!stackTop._isolate && statusStack.length > 1) {\n                statusStack.pop();\n                stackTop = statusStack[statusStack.length - 1];\n              }\n            }\n            embedLevels[i$2] = stackTop._level; // 5.2\n          }\n\n          // End of Paragraph: 3.3.2 X8\n          else if (charType & TYPE_B) {\n            embedLevels[i$2] = paragraph.level;\n          }\n        }\n\n        // Non-formatting characters: 3.3.2 X6\n        else {\n          embedLevels[i$2] = stackTop._level;\n          // NOTE: This exclusion of BN seems to go against what section 5.2 says, but is required for test passage\n          if (stackTop._override && charType !== TYPE_BN) {\n            changeCharType(i$2, stackTop._override);\n          }\n        }\n      }\n\n      // === 3.3.3 Preparations for Implicit Processing ===\n\n      // Remove all RLE, LRE, RLO, LRO, PDF, and BN characters: 3.3.3 X9\n      // Note: Due to section 5.2, we won't remove them, but we'll use the BN_LIKE_TYPES bitset to\n      // easily ignore them all from here on out.\n\n      // 3.3.3 X10\n      // Compute the set of isolating run sequences as specified by BD13\n      var levelRuns = [];\n      var currentRun = null;\n      for (var i$3 = paragraph.start; i$3 <= paragraph.end; i$3++) {\n        var charType$1 = charTypes[i$3];\n        if (!(charType$1 & BN_LIKE_TYPES)) {\n          var lvl = embedLevels[i$3];\n          var isIsolInit = charType$1 & ISOLATE_INIT_TYPES;\n          var isPDI = charType$1 === TYPE_PDI;\n          if (currentRun && lvl === currentRun._level) {\n            currentRun._end = i$3;\n            currentRun._endsWithIsolInit = isIsolInit;\n          } else {\n            levelRuns.push(currentRun = {\n              _start: i$3,\n              _end: i$3,\n              _level: lvl,\n              _startsWithPDI: isPDI,\n              _endsWithIsolInit: isIsolInit\n            });\n          }\n        }\n      }\n      var isolatingRunSeqs = []; // [{seqIndices: [], sosType: L|R, eosType: L|R}]\n      for (var runIdx = 0; runIdx < levelRuns.length; runIdx++) {\n        var run = levelRuns[runIdx];\n        if (!run._startsWithPDI || (run._startsWithPDI && !isolationPairs.has(run._start))) {\n          var seqRuns = [currentRun = run];\n          for (var pdiIndex = (void 0); currentRun && currentRun._endsWithIsolInit && (pdiIndex = isolationPairs.get(currentRun._end)) != null;) {\n            for (var i$4 = runIdx + 1; i$4 < levelRuns.length; i$4++) {\n              if (levelRuns[i$4]._start === pdiIndex) {\n                seqRuns.push(currentRun = levelRuns[i$4]);\n                break\n              }\n            }\n          }\n          // build flat list of indices across all runs:\n          var seqIndices = [];\n          for (var i$5 = 0; i$5 < seqRuns.length; i$5++) {\n            var run$1 = seqRuns[i$5];\n            for (var j = run$1._start; j <= run$1._end; j++) {\n              seqIndices.push(j);\n            }\n          }\n          // determine the sos/eos types:\n          var firstLevel = embedLevels[seqIndices[0]];\n          var prevLevel = paragraph.level;\n          for (var i$6 = seqIndices[0] - 1; i$6 >= 0; i$6--) {\n            if (!(charTypes[i$6] & BN_LIKE_TYPES)) { //5.2\n              prevLevel = embedLevels[i$6];\n              break\n            }\n          }\n          var lastIndex = seqIndices[seqIndices.length - 1];\n          var lastLevel = embedLevels[lastIndex];\n          var nextLevel = paragraph.level;\n          if (!(charTypes[lastIndex] & ISOLATE_INIT_TYPES)) {\n            for (var i$7 = lastIndex + 1; i$7 <= paragraph.end; i$7++) {\n              if (!(charTypes[i$7] & BN_LIKE_TYPES)) { //5.2\n                nextLevel = embedLevels[i$7];\n                break\n              }\n            }\n          }\n          isolatingRunSeqs.push({\n            _seqIndices: seqIndices,\n            _sosType: Math.max(prevLevel, firstLevel) % 2 ? TYPE_R : TYPE_L,\n            _eosType: Math.max(nextLevel, lastLevel) % 2 ? TYPE_R : TYPE_L\n          });\n        }\n      }\n\n      // The next steps are done per isolating run sequence\n      for (var seqIdx = 0; seqIdx < isolatingRunSeqs.length; seqIdx++) {\n        var ref = isolatingRunSeqs[seqIdx];\n        var seqIndices$1 = ref._seqIndices;\n        var sosType = ref._sosType;\n        var eosType = ref._eosType;\n\n        // === 3.3.4 Resolving Weak Types ===\n\n        // W1 + 5.2. Search backward from each NSM to the first character in the isolating run sequence whose\n        // bidirectional type is not BN, and set the NSM to ON if it is an isolate initiator or PDI, and to its\n        // type otherwise. If the NSM is the first non-BN character, change the NSM to the type of sos.\n        if (charTypeCounts.get(TYPE_NSM)) {\n          for (var si = 0; si < seqIndices$1.length; si++) {\n            var i$8 = seqIndices$1[si];\n            if (charTypes[i$8] & TYPE_NSM) {\n              var prevType = sosType;\n              for (var sj = si - 1; sj >= 0; sj--) {\n                if (!(charTypes[seqIndices$1[sj]] & BN_LIKE_TYPES)) { //5.2 scan back to first non-BN\n                  prevType = charTypes[seqIndices$1[sj]];\n                  break\n                }\n              }\n              changeCharType(i$8, (prevType & (ISOLATE_INIT_TYPES | TYPE_PDI)) ? TYPE_ON : prevType);\n            }\n          }\n        }\n\n        // W2. Search backward from each instance of a European number until the first strong type (R, L, AL, or sos)\n        // is found. If an AL is found, change the type of the European number to Arabic number.\n        if (charTypeCounts.get(TYPE_EN)) {\n          for (var si$1 = 0; si$1 < seqIndices$1.length; si$1++) {\n            var i$9 = seqIndices$1[si$1];\n            if (charTypes[i$9] & TYPE_EN) {\n              for (var sj$1 = si$1 - 1; sj$1 >= -1; sj$1--) {\n                var prevCharType = sj$1 === -1 ? sosType : charTypes[seqIndices$1[sj$1]];\n                if (prevCharType & STRONG_TYPES) {\n                  if (prevCharType === TYPE_AL) {\n                    changeCharType(i$9, TYPE_AN);\n                  }\n                  break\n                }\n              }\n            }\n          }\n        }\n\n        // W3. Change all ALs to R\n        if (charTypeCounts.get(TYPE_AL)) {\n          for (var si$2 = 0; si$2 < seqIndices$1.length; si$2++) {\n            var i$10 = seqIndices$1[si$2];\n            if (charTypes[i$10] & TYPE_AL) {\n              changeCharType(i$10, TYPE_R);\n            }\n          }\n        }\n\n        // W4. A single European separator between two European numbers changes to a European number. A single common\n        // separator between two numbers of the same type changes to that type.\n        if (charTypeCounts.get(TYPE_ES) || charTypeCounts.get(TYPE_CS)) {\n          for (var si$3 = 1; si$3 < seqIndices$1.length - 1; si$3++) {\n            var i$11 = seqIndices$1[si$3];\n            if (charTypes[i$11] & (TYPE_ES | TYPE_CS)) {\n              var prevType$1 = 0, nextType = 0;\n              for (var sj$2 = si$3 - 1; sj$2 >= 0; sj$2--) {\n                prevType$1 = charTypes[seqIndices$1[sj$2]];\n                if (!(prevType$1 & BN_LIKE_TYPES)) { //5.2\n                  break\n                }\n              }\n              for (var sj$3 = si$3 + 1; sj$3 < seqIndices$1.length; sj$3++) {\n                nextType = charTypes[seqIndices$1[sj$3]];\n                if (!(nextType & BN_LIKE_TYPES)) { //5.2\n                  break\n                }\n              }\n              if (prevType$1 === nextType && (charTypes[i$11] === TYPE_ES ? prevType$1 === TYPE_EN : (prevType$1 & (TYPE_EN | TYPE_AN)))) {\n                changeCharType(i$11, prevType$1);\n              }\n            }\n          }\n        }\n\n        // W5. A sequence of European terminators adjacent to European numbers changes to all European numbers.\n        if (charTypeCounts.get(TYPE_EN)) {\n          for (var si$4 = 0; si$4 < seqIndices$1.length; si$4++) {\n            var i$12 = seqIndices$1[si$4];\n            if (charTypes[i$12] & TYPE_EN) {\n              for (var sj$4 = si$4 - 1; sj$4 >= 0 && (charTypes[seqIndices$1[sj$4]] & (TYPE_ET | BN_LIKE_TYPES)); sj$4--) {\n                changeCharType(seqIndices$1[sj$4], TYPE_EN);\n              }\n              for (var sj$5 = si$4 + 1; sj$5 < seqIndices$1.length && (charTypes[seqIndices$1[sj$5]] & (TYPE_ET | BN_LIKE_TYPES)); sj$5++) {\n                changeCharType(seqIndices$1[sj$5], TYPE_EN);\n              }\n            }\n          }\n        }\n\n        // W6. Otherwise, separators and terminators change to Other Neutral.\n        if (charTypeCounts.get(TYPE_ET) || charTypeCounts.get(TYPE_ES) || charTypeCounts.get(TYPE_CS)) {\n          for (var si$5 = 0; si$5 < seqIndices$1.length; si$5++) {\n            var i$13 = seqIndices$1[si$5];\n            if (charTypes[i$13] & (TYPE_ET | TYPE_ES | TYPE_CS)) {\n              changeCharType(i$13, TYPE_ON);\n              // 5.2 transform adjacent BNs too:\n              for (var sj$6 = si$5 - 1; sj$6 >= 0 && (charTypes[seqIndices$1[sj$6]] & BN_LIKE_TYPES); sj$6--) {\n                changeCharType(seqIndices$1[sj$6], TYPE_ON);\n              }\n              for (var sj$7 = si$5 + 1; sj$7 < seqIndices$1.length && (charTypes[seqIndices$1[sj$7]] & BN_LIKE_TYPES); sj$7++) {\n                changeCharType(seqIndices$1[sj$7], TYPE_ON);\n              }\n            }\n          }\n        }\n\n        // W7. Search backward from each instance of a European number until the first strong type (R, L, or sos)\n        // is found. If an L is found, then change the type of the European number to L.\n        // NOTE: implemented in single forward pass for efficiency\n        if (charTypeCounts.get(TYPE_EN)) {\n          for (var si$6 = 0, prevStrongType = sosType; si$6 < seqIndices$1.length; si$6++) {\n            var i$14 = seqIndices$1[si$6];\n            var type = charTypes[i$14];\n            if (type & TYPE_EN) {\n              if (prevStrongType === TYPE_L) {\n                changeCharType(i$14, TYPE_L);\n              }\n            } else if (type & STRONG_TYPES) {\n              prevStrongType = type;\n            }\n          }\n        }\n\n        // === 3.3.5 Resolving Neutral and Isolate Formatting Types ===\n\n        if (charTypeCounts.get(NEUTRAL_ISOLATE_TYPES)) {\n          // N0. Process bracket pairs in an isolating run sequence sequentially in the logical order of the text\n          // positions of the opening paired brackets using the logic given below. Within this scope, bidirectional\n          // types EN and AN are treated as R.\n          var R_TYPES_FOR_N_STEPS = (TYPE_R | TYPE_EN | TYPE_AN);\n          var STRONG_TYPES_FOR_N_STEPS = R_TYPES_FOR_N_STEPS | TYPE_L;\n\n          // * Identify the bracket pairs in the current isolating run sequence according to BD16.\n          var bracketPairs = [];\n          {\n            var openerStack = [];\n            for (var si$7 = 0; si$7 < seqIndices$1.length; si$7++) {\n              // NOTE: for any potential bracket character we also test that it still carries a NI\n              // type, as that may have been changed earlier. This doesn't seem to be explicitly\n              // called out in the spec, but is required for passage of certain tests.\n              if (charTypes[seqIndices$1[si$7]] & NEUTRAL_ISOLATE_TYPES) {\n                var char = string[seqIndices$1[si$7]];\n                var oppositeBracket = (void 0);\n                // Opening bracket\n                if (openingToClosingBracket(char) !== null) {\n                  if (openerStack.length < 63) {\n                    openerStack.push({ char: char, seqIndex: si$7 });\n                  } else {\n                    break\n                  }\n                }\n                // Closing bracket\n                else if ((oppositeBracket = closingToOpeningBracket(char)) !== null) {\n                  for (var stackIdx = openerStack.length - 1; stackIdx >= 0; stackIdx--) {\n                    var stackChar = openerStack[stackIdx].char;\n                    if (stackChar === oppositeBracket ||\n                      stackChar === closingToOpeningBracket(getCanonicalBracket(char)) ||\n                      openingToClosingBracket(getCanonicalBracket(stackChar)) === char\n                    ) {\n                      bracketPairs.push([openerStack[stackIdx].seqIndex, si$7]);\n                      openerStack.length = stackIdx; //pop the matching bracket and all following\n                      break\n                    }\n                  }\n                }\n              }\n            }\n            bracketPairs.sort(function (a, b) { return a[0] - b[0]; });\n          }\n          // * For each bracket-pair element in the list of pairs of text positions\n          for (var pairIdx = 0; pairIdx < bracketPairs.length; pairIdx++) {\n            var ref$1 = bracketPairs[pairIdx];\n            var openSeqIdx = ref$1[0];\n            var closeSeqIdx = ref$1[1];\n            // a. Inspect the bidirectional types of the characters enclosed within the bracket pair.\n            // b. If any strong type (either L or R) matching the embedding direction is found, set the type for both\n            // brackets in the pair to match the embedding direction.\n            var foundStrongType = false;\n            var useStrongType = 0;\n            for (var si$8 = openSeqIdx + 1; si$8 < closeSeqIdx; si$8++) {\n              var i$15 = seqIndices$1[si$8];\n              if (charTypes[i$15] & STRONG_TYPES_FOR_N_STEPS) {\n                foundStrongType = true;\n                var lr = (charTypes[i$15] & R_TYPES_FOR_N_STEPS) ? TYPE_R : TYPE_L;\n                if (lr === getEmbedDirection(i$15)) {\n                  useStrongType = lr;\n                  break\n                }\n              }\n            }\n            // c. Otherwise, if there is a strong type it must be opposite the embedding direction. Therefore, test\n            // for an established context with a preceding strong type by checking backwards before the opening paired\n            // bracket until the first strong type (L, R, or sos) is found.\n            //    1. If the preceding strong type is also opposite the embedding direction, context is established, so\n            //    set the type for both brackets in the pair to that direction.\n            //    2. Otherwise set the type for both brackets in the pair to the embedding direction.\n            if (foundStrongType && !useStrongType) {\n              useStrongType = sosType;\n              for (var si$9 = openSeqIdx - 1; si$9 >= 0; si$9--) {\n                var i$16 = seqIndices$1[si$9];\n                if (charTypes[i$16] & STRONG_TYPES_FOR_N_STEPS) {\n                  var lr$1 = (charTypes[i$16] & R_TYPES_FOR_N_STEPS) ? TYPE_R : TYPE_L;\n                  if (lr$1 !== getEmbedDirection(i$16)) {\n                    useStrongType = lr$1;\n                  } else {\n                    useStrongType = getEmbedDirection(i$16);\n                  }\n                  break\n                }\n              }\n            }\n            if (useStrongType) {\n              charTypes[seqIndices$1[openSeqIdx]] = charTypes[seqIndices$1[closeSeqIdx]] = useStrongType;\n              // * Any number of characters that had original bidirectional character type NSM prior to the application\n              // of W1 that immediately follow a paired bracket which changed to L or R under N0 should change to match\n              // the type of their preceding bracket.\n              if (useStrongType !== getEmbedDirection(seqIndices$1[openSeqIdx])) {\n                for (var si$10 = openSeqIdx + 1; si$10 < seqIndices$1.length; si$10++) {\n                  if (!(charTypes[seqIndices$1[si$10]] & BN_LIKE_TYPES)) {\n                    if (getBidiCharType(string[seqIndices$1[si$10]]) & TYPE_NSM) {\n                      charTypes[seqIndices$1[si$10]] = useStrongType;\n                    }\n                    break\n                  }\n                }\n              }\n              if (useStrongType !== getEmbedDirection(seqIndices$1[closeSeqIdx])) {\n                for (var si$11 = closeSeqIdx + 1; si$11 < seqIndices$1.length; si$11++) {\n                  if (!(charTypes[seqIndices$1[si$11]] & BN_LIKE_TYPES)) {\n                    if (getBidiCharType(string[seqIndices$1[si$11]]) & TYPE_NSM) {\n                      charTypes[seqIndices$1[si$11]] = useStrongType;\n                    }\n                    break\n                  }\n                }\n              }\n            }\n          }\n\n          // N1. A sequence of NIs takes the direction of the surrounding strong text if the text on both sides has the\n          // same direction.\n          // N2. Any remaining NIs take the embedding direction.\n          for (var si$12 = 0; si$12 < seqIndices$1.length; si$12++) {\n            if (charTypes[seqIndices$1[si$12]] & NEUTRAL_ISOLATE_TYPES) {\n              var niRunStart = si$12, niRunEnd = si$12;\n              var prevType$2 = sosType; //si === 0 ? sosType : (charTypes[seqIndices[si - 1]] & R_TYPES_FOR_N_STEPS) ? TYPE_R : TYPE_L\n              for (var si2 = si$12 - 1; si2 >= 0; si2--) {\n                if (charTypes[seqIndices$1[si2]] & BN_LIKE_TYPES) {\n                  niRunStart = si2; //5.2 treat BNs adjacent to NIs as NIs\n                } else {\n                  prevType$2 = (charTypes[seqIndices$1[si2]] & R_TYPES_FOR_N_STEPS) ? TYPE_R : TYPE_L;\n                  break\n                }\n              }\n              var nextType$1 = eosType;\n              for (var si2$1 = si$12 + 1; si2$1 < seqIndices$1.length; si2$1++) {\n                if (charTypes[seqIndices$1[si2$1]] & (NEUTRAL_ISOLATE_TYPES | BN_LIKE_TYPES)) {\n                  niRunEnd = si2$1;\n                } else {\n                  nextType$1 = (charTypes[seqIndices$1[si2$1]] & R_TYPES_FOR_N_STEPS) ? TYPE_R : TYPE_L;\n                  break\n                }\n              }\n              for (var sj$8 = niRunStart; sj$8 <= niRunEnd; sj$8++) {\n                charTypes[seqIndices$1[sj$8]] = prevType$2 === nextType$1 ? prevType$2 : getEmbedDirection(seqIndices$1[sj$8]);\n              }\n              si$12 = niRunEnd;\n            }\n          }\n        }\n      }\n\n      // === 3.3.6 Resolving Implicit Levels ===\n\n      for (var i$17 = paragraph.start; i$17 <= paragraph.end; i$17++) {\n        var level$3 = embedLevels[i$17];\n        var type$1 = charTypes[i$17];\n        // I2. For all characters with an odd (right-to-left) embedding level, those of type L, EN or AN go up one level.\n        if (level$3 & 1) {\n          if (type$1 & (TYPE_L | TYPE_EN | TYPE_AN)) {\n            embedLevels[i$17]++;\n          }\n        }\n          // I1. For all characters with an even (left-to-right) embedding level, those of type R go up one level\n        // and those of type AN or EN go up two levels.\n        else {\n          if (type$1 & TYPE_R) {\n            embedLevels[i$17]++;\n          } else if (type$1 & (TYPE_AN | TYPE_EN)) {\n            embedLevels[i$17] += 2;\n          }\n        }\n\n        // 5.2: Resolve any LRE, RLE, LRO, RLO, PDF, or BN to the level of the preceding character if there is one,\n        // and otherwise to the base level.\n        if (type$1 & BN_LIKE_TYPES) {\n          embedLevels[i$17] = i$17 === 0 ? paragraph.level : embedLevels[i$17 - 1];\n        }\n\n        // 3.4 L1.1-4: Reset the embedding level of segment/paragraph separators, and any sequence of whitespace or\n        // isolate formatting characters preceding them or the end of the paragraph, to the paragraph level.\n        // NOTE: this will also need to be applied to each individual line ending after line wrapping occurs.\n        if (i$17 === paragraph.end || getBidiCharType(string[i$17]) & (TYPE_S | TYPE_B)) {\n          for (var j$1 = i$17; j$1 >= 0 && (getBidiCharType(string[j$1]) & TRAILING_TYPES); j$1--) {\n            embedLevels[j$1] = paragraph.level;\n          }\n        }\n      }\n    }\n\n    // DONE! The resolved levels can then be used, after line wrapping, to flip runs of characters\n    // according to section 3.4 Reordering Resolved Levels\n    return {\n      levels: embedLevels,\n      paragraphs: paragraphs\n    }\n\n    function determineAutoEmbedLevel (start, isFSI) {\n      // 3.3.1 P2 - P3\n      for (var i = start; i < string.length; i++) {\n        var charType = charTypes[i];\n        if (charType & (TYPE_R | TYPE_AL)) {\n          return 1\n        }\n        if ((charType & (TYPE_B | TYPE_L)) || (isFSI && charType === TYPE_PDI)) {\n          return 0\n        }\n        if (charType & ISOLATE_INIT_TYPES) {\n          var pdi = indexOfMatchingPDI(i);\n          i = pdi === -1 ? string.length : pdi;\n        }\n      }\n      return 0\n    }\n\n    function indexOfMatchingPDI (isolateStart) {\n      // 3.1.2 BD9\n      var isolationLevel = 1;\n      for (var i = isolateStart + 1; i < string.length; i++) {\n        var charType = charTypes[i];\n        if (charType & TYPE_B) {\n          break\n        }\n        if (charType & TYPE_PDI) {\n          if (--isolationLevel === 0) {\n            return i\n          }\n        } else if (charType & ISOLATE_INIT_TYPES) {\n          isolationLevel++;\n        }\n      }\n      return -1\n    }\n\n    function getEmbedDirection (i) {\n      return (embedLevels[i] & 1) ? TYPE_R : TYPE_L\n    }\n\n  }\n\n  // Bidi mirrored chars data, auto generated\n  var data = \"14>1,j>2,t>2,u>2,1a>g,2v3>1,1>1,1ge>1,1wd>1,b>1,1j>1,f>1,ai>3,-2>3,+1,8>1k0,-1jq>1y7,-1y6>1hf,-1he>1h6,-1h5>1ha,-1h8>1qi,-1pu>1,6>3u,-3s>7,6>1,1>1,f>1,1>1,+2,3>1,1>1,+13,4>1,1>1,6>1eo,-1ee>1,3>1mg,-1me>1mk,-1mj>1mi,-1mg>1mi,-1md>1,1>1,+2,1>10k,-103>1,1>1,4>1,5>1,1>1,+10,3>1,1>8,-7>8,+1,-6>7,+1,a>1,1>1,u>1,u6>1,1>1,+5,26>1,1>1,2>1,2>2,8>1,7>1,4>1,1>1,+5,b8>1,1>1,+3,1>3,-2>1,2>1,1>1,+2,c>1,3>1,1>1,+2,h>1,3>1,a>1,1>1,2>1,3>1,1>1,d>1,f>1,3>1,1a>1,1>1,6>1,7>1,13>1,k>1,1>1,+19,4>1,1>1,+2,2>1,1>1,+18,m>1,a>1,1>1,lk>1,1>1,4>1,2>1,f>1,3>1,1>1,+3,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,6>1,4j>1,j>2,t>2,u>2,2>1,+1\";\n\n  var mirrorMap;\n\n  function parse () {\n    if (!mirrorMap) {\n      //const start = performance.now()\n      var ref = parseCharacterMap(data, true);\n      var map = ref.map;\n      var reverseMap = ref.reverseMap;\n      // Combine both maps into one\n      reverseMap.forEach(function (value, key) {\n        map.set(key, value);\n      });\n      mirrorMap = map;\n      //console.log(`mirrored chars parsed in ${performance.now() - start}ms`)\n    }\n  }\n\n  function getMirroredCharacter (char) {\n    parse();\n    return mirrorMap.get(char) || null\n  }\n\n  /**\n   * Given a string and its resolved embedding levels, build a map of indices to replacement chars\n   * for any characters in right-to-left segments that have defined mirrored characters.\n   * @param string\n   * @param embeddingLevels\n   * @param [start]\n   * @param [end]\n   * @return {Map<number, string>}\n   */\n  function getMirroredCharactersMap(string, embeddingLevels, start, end) {\n    var strLen = string.length;\n    start = Math.max(0, start == null ? 0 : +start);\n    end = Math.min(strLen - 1, end == null ? strLen - 1 : +end);\n\n    var map = new Map();\n    for (var i = start; i <= end; i++) {\n      if (embeddingLevels[i] & 1) { //only odd (rtl) levels\n        var mirror = getMirroredCharacter(string[i]);\n        if (mirror !== null) {\n          map.set(i, mirror);\n        }\n      }\n    }\n    return map\n  }\n\n  /**\n   * Given a start and end denoting a single line within a string, and a set of precalculated\n   * bidi embedding levels, produce a list of segments whose ordering should be flipped, in sequence.\n   * @param {string} string - the full input string\n   * @param {GetEmbeddingLevelsResult} embeddingLevelsResult - the result object from getEmbeddingLevels\n   * @param {number} [start] - first character in a subset of the full string\n   * @param {number} [end] - last character in a subset of the full string\n   * @return {number[][]} - the list of start/end segments that should be flipped, in order.\n   */\n  function getReorderSegments(string, embeddingLevelsResult, start, end) {\n    var strLen = string.length;\n    start = Math.max(0, start == null ? 0 : +start);\n    end = Math.min(strLen - 1, end == null ? strLen - 1 : +end);\n\n    var segments = [];\n    embeddingLevelsResult.paragraphs.forEach(function (paragraph) {\n      var lineStart = Math.max(start, paragraph.start);\n      var lineEnd = Math.min(end, paragraph.end);\n      if (lineStart < lineEnd) {\n        // Local slice for mutation\n        var lineLevels = embeddingLevelsResult.levels.slice(lineStart, lineEnd + 1);\n\n        // 3.4 L1.4: Reset any sequence of whitespace characters and/or isolate formatting characters at the\n        // end of the line to the paragraph level.\n        for (var i = lineEnd; i >= lineStart && (getBidiCharType(string[i]) & TRAILING_TYPES); i--) {\n          lineLevels[i] = paragraph.level;\n        }\n\n        // L2. From the highest level found in the text to the lowest odd level on each line, including intermediate levels\n        // not actually present in the text, reverse any contiguous sequence of characters that are at that level or higher.\n        var maxLevel = paragraph.level;\n        var minOddLevel = Infinity;\n        for (var i$1 = 0; i$1 < lineLevels.length; i$1++) {\n          var level = lineLevels[i$1];\n          if (level > maxLevel) { maxLevel = level; }\n          if (level < minOddLevel) { minOddLevel = level | 1; }\n        }\n        for (var lvl = maxLevel; lvl >= minOddLevel; lvl--) {\n          for (var i$2 = 0; i$2 < lineLevels.length; i$2++) {\n            if (lineLevels[i$2] >= lvl) {\n              var segStart = i$2;\n              while (i$2 + 1 < lineLevels.length && lineLevels[i$2 + 1] >= lvl) {\n                i$2++;\n              }\n              if (i$2 > segStart) {\n                segments.push([segStart + start, i$2 + start]);\n              }\n            }\n          }\n        }\n      }\n    });\n    return segments\n  }\n\n  /**\n   * @param {string} string\n   * @param {GetEmbeddingLevelsResult} embedLevelsResult\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {string} the new string with bidi segments reordered\n   */\n  function getReorderedString(string, embedLevelsResult, start, end) {\n    var indices = getReorderedIndices(string, embedLevelsResult, start, end);\n    var chars = [].concat( string );\n    indices.forEach(function (charIndex, i) {\n      chars[i] = (\n        (embedLevelsResult.levels[charIndex] & 1) ? getMirroredCharacter(string[charIndex]) : null\n      ) || string[charIndex];\n    });\n    return chars.join('')\n  }\n\n  /**\n   * @param {string} string\n   * @param {GetEmbeddingLevelsResult} embedLevelsResult\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {number[]} an array with character indices in their new bidi order\n   */\n  function getReorderedIndices(string, embedLevelsResult, start, end) {\n    var segments = getReorderSegments(string, embedLevelsResult, start, end);\n    // Fill an array with indices\n    var indices = [];\n    for (var i = 0; i < string.length; i++) {\n      indices[i] = i;\n    }\n    // Reverse each segment in order\n    segments.forEach(function (ref) {\n      var start = ref[0];\n      var end = ref[1];\n\n      var slice = indices.slice(start, end + 1);\n      for (var i = slice.length; i--;) {\n        indices[end - i] = slice[i];\n      }\n    });\n    return indices\n  }\n\n  exports.closingToOpeningBracket = closingToOpeningBracket;\n  exports.getBidiCharType = getBidiCharType;\n  exports.getBidiCharTypeName = getBidiCharTypeName;\n  exports.getCanonicalBracket = getCanonicalBracket;\n  exports.getEmbeddingLevels = getEmbeddingLevels;\n  exports.getMirroredCharacter = getMirroredCharacter;\n  exports.getMirroredCharactersMap = getMirroredCharactersMap;\n  exports.getReorderSegments = getReorderSegments;\n  exports.getReorderedIndices = getReorderedIndices;\n  exports.getReorderedString = getReorderedString;\n  exports.openingToClosingBracket = openingToClosingBracket;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}({}));\nreturn bidi}\n\nexport default bidiFactory;\n","import { ShaderChunk, UniformsUtils, MeshDepthMaterial, RGBADepthPacking, MeshDistanceMaterial, ShaderLib, Matrix4, Vector3, Mesh, CylinderBufferGeometry, Vector2, MeshStandardMaterial, DoubleSide } from 'three';\n\n/**\n * Regular expression for matching the `void main() {` opener line in GLSL.\n * @type {RegExp}\n */\nconst voidMainRegExp = /\\bvoid\\s+main\\s*\\(\\s*\\)\\s*{/g;\n\n/**\n * Recursively expands all `#include <xyz>` statements within string of shader code.\n * Copied from three's WebGLProgram#parseIncludes for external use.\n *\n * @param {string} source - The GLSL source code to evaluate\n * @return {string} The GLSL code with all includes expanded\n */\nfunction expandShaderIncludes( source ) {\n  const pattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n  function replace(match, include) {\n    let chunk = ShaderChunk[include];\n    return chunk ? expandShaderIncludes(chunk) : match\n  }\n  return source.replace( pattern, replace )\n}\n\n/*\n * This is a direct copy of MathUtils.generateUUID from Three.js, to preserve compatibility with three\n * versions before 0.113.0 as it was changed from Math to MathUtils in that version.\n * https://github.com/mrdoob/three.js/blob/dd8b5aa3b270c17096b90945cd2d6d1b13aaec53/src/math/MathUtils.js#L16\n */\n\nconst _lut = [];\n\nfor (let i = 0; i < 256; i++) {\n  _lut[i] = (i < 16 ? '0' : '') + (i).toString(16);\n}\n\nfunction generateUUID() {\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n  const d0 = Math.random() * 0xffffffff | 0;\n  const d1 = Math.random() * 0xffffffff | 0;\n  const d2 = Math.random() * 0xffffffff | 0;\n  const d3 = Math.random() * 0xffffffff | 0;\n  const uuid = _lut[d0 & 0xff] + _lut[d0 >> 8 & 0xff] + _lut[d0 >> 16 & 0xff] + _lut[d0 >> 24 & 0xff] + '-' +\n    _lut[d1 & 0xff] + _lut[d1 >> 8 & 0xff] + '-' + _lut[d1 >> 16 & 0x0f | 0x40] + _lut[d1 >> 24 & 0xff] + '-' +\n    _lut[d2 & 0x3f | 0x80] + _lut[d2 >> 8 & 0xff] + '-' + _lut[d2 >> 16 & 0xff] + _lut[d2 >> 24 & 0xff] +\n    _lut[d3 & 0xff] + _lut[d3 >> 8 & 0xff] + _lut[d3 >> 16 & 0xff] + _lut[d3 >> 24 & 0xff];\n\n  // .toUpperCase() here flattens concatenated strings to save heap memory space.\n  return uuid.toUpperCase()\n\n}\n\n// Local assign polyfill to avoid importing troika-core\nconst assign = Object.assign || function(/*target, ...sources*/) {\n  let target = arguments[0];\n  for (let i = 1, len = arguments.length; i < len; i++) {\n    let source = arguments[i];\n    if (source) {\n      for (let prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          target[prop] = source[prop];\n        }\n      }\n    }\n  }\n  return target\n};\n\n\nconst epoch = Date.now();\nconst CONSTRUCTOR_CACHE = new WeakMap();\nconst SHADER_UPGRADE_CACHE = new Map();\n\n// Material ids must be integers, but we can't access the increment from Three's `Material` module,\n// so let's choose a sufficiently large starting value that should theoretically never collide.\nlet materialInstanceId = 1e10;\n\n/**\n * A utility for creating a custom shader material derived from another material's\n * shaders. This allows you to inject custom shader logic and transforms into the\n * builtin ThreeJS materials without having to recreate them from scratch.\n *\n * @param {THREE.Material} baseMaterial - the original material to derive from\n *\n * @param {Object} options - How the base material should be modified.\n * @param {Object} options.defines - Custom `defines` for the material\n * @param {Object} options.extensions - Custom `extensions` for the material, e.g. `{derivatives: true}`\n * @param {Object} options.uniforms - Custom `uniforms` for use in the modified shader. These can\n *        be accessed and manipulated via the resulting material's `uniforms` property, just like\n *        in a ShaderMaterial. You do not need to repeat the base material's own uniforms here.\n * @param {String} options.timeUniform - If specified, a uniform of this name will be injected into\n *        both shaders, and it will automatically be updated on each render frame with a number of\n *        elapsed milliseconds. The \"zero\" epoch time is not significant so don't rely on this as a\n *        true calendar time.\n * @param {String} options.vertexDefs - Custom GLSL code to inject into the vertex shader's top-level\n *        definitions, above the `void main()` function.\n * @param {String} options.vertexMainIntro - Custom GLSL code to inject at the top of the vertex\n *        shader's `void main` function.\n * @param {String} options.vertexMainOutro - Custom GLSL code to inject at the end of the vertex\n *        shader's `void main` function.\n * @param {String} options.vertexTransform - Custom GLSL code to manipulate the `position`, `normal`,\n *        and/or `uv` vertex attributes. This code will be wrapped within a standalone function with\n *        those attributes exposed by their normal names as read/write values.\n * @param {String} options.fragmentDefs - Custom GLSL code to inject into the fragment shader's top-level\n *        definitions, above the `void main()` function.\n * @param {String} options.fragmentMainIntro - Custom GLSL code to inject at the top of the fragment\n *        shader's `void main` function.\n * @param {String} options.fragmentMainOutro - Custom GLSL code to inject at the end of the fragment\n *        shader's `void main` function. You can manipulate `gl_FragColor` here but keep in mind it goes\n *        after any of ThreeJS's color postprocessing shader chunks (tonemapping, fog, etc.), so if you\n *        want those to apply to your changes use `fragmentColorTransform` instead.\n * @param {String} options.fragmentColorTransform - Custom GLSL code to manipulate the `gl_FragColor`\n *        output value. Will be injected near the end of the `void main` function, but before any\n *        of ThreeJS's color postprocessing shader chunks (tonemapping, fog, etc.), and before the\n *        `fragmentMainOutro`.\n * @param {function<{vertexShader,fragmentShader}>:{vertexShader,fragmentShader}} options.customRewriter - A function\n *        for performing custom rewrites of the full shader code. Useful if you need to do something\n *        special that's not covered by the other builtin options. This function will be executed before\n *        any other transforms are applied.\n * @param {boolean} options.chained - Set to `true` to prototype-chain the derived material to the base\n *        material, rather than the default behavior of copying it. This allows the derived material to\n *        automatically pick up changes made to the base material and its properties. This can be useful\n *        where the derived material is hidden from the user as an implementation detail, allowing them\n *        to work with the original material like normal. But it can result in unexpected behavior if not\n *        handled carefully.\n *\n * @return {THREE.Material}\n *\n * The returned material will also have two new methods, `getDepthMaterial()` and `getDistanceMaterial()`,\n * which can be called to get a variant of the derived material for use in shadow casting. If the\n * target mesh is expected to cast shadows, then you can assign these to the mesh's `customDepthMaterial`\n * (for directional and spot lights) and/or `customDistanceMaterial` (for point lights) properties to\n * allow the cast shadow to honor your derived shader's vertex transforms and discarded fragments. These\n * will also set a custom `#define IS_DEPTH_MATERIAL` or `#define IS_DISTANCE_MATERIAL` that you can look\n * for in your derived shaders with `#ifdef` to customize their behavior for the depth or distance\n * scenarios, e.g. skipping antialiasing or expensive shader logic.\n */\nfunction createDerivedMaterial(baseMaterial, options) {\n  // Generate a key that is unique to the content of these `options`. We'll use this\n  // throughout for caching and for generating the upgraded shader code. This increases\n  // the likelihood that the resulting shaders will line up across multiple calls so\n  // their GL programs can be shared and cached.\n  const optionsKey = getKeyForOptions(options);\n\n  // First check to see if we've already derived from this baseMaterial using this\n  // unique set of options, and if so reuse the constructor to avoid some allocations.\n  let ctorsByDerivation = CONSTRUCTOR_CACHE.get(baseMaterial);\n  if (!ctorsByDerivation) {\n    CONSTRUCTOR_CACHE.set(baseMaterial, (ctorsByDerivation = Object.create(null)));\n  }\n  if (ctorsByDerivation[optionsKey]) {\n    return new ctorsByDerivation[optionsKey]()\n  }\n\n  const privateBeforeCompileProp = `_onBeforeCompile${optionsKey}`;\n\n  // Private onBeforeCompile handler that injects the modified shaders and uniforms when\n  // the renderer switches to this material's program\n  const onBeforeCompile = function (shaderInfo) {\n    baseMaterial.onBeforeCompile.call(this, shaderInfo);\n\n    // Upgrade the shaders, caching the result by incoming source code\n    const cacheKey = this.customProgramCacheKey() + '|' + shaderInfo.vertexShader + '|' + shaderInfo.fragmentShader;\n    let upgradedShaders = SHADER_UPGRADE_CACHE[cacheKey];\n    if (!upgradedShaders) {\n      const upgraded = upgradeShaders(shaderInfo, options, optionsKey);\n      upgradedShaders = SHADER_UPGRADE_CACHE[cacheKey] = upgraded;\n    }\n\n    // Inject upgraded shaders and uniforms into the program\n    shaderInfo.vertexShader = upgradedShaders.vertexShader;\n    shaderInfo.fragmentShader = upgradedShaders.fragmentShader;\n    assign(shaderInfo.uniforms, this.uniforms);\n\n    // Inject auto-updating time uniform if requested\n    if (options.timeUniform) {\n      shaderInfo.uniforms[options.timeUniform] = {\n        get value() {return Date.now() - epoch}\n      };\n    }\n\n    // Users can still add their own handlers on top of ours\n    if (this[privateBeforeCompileProp]) {\n      this[privateBeforeCompileProp](shaderInfo);\n    }\n  };\n\n  const DerivedMaterial = function DerivedMaterial() {\n    return derive(options.chained ? baseMaterial : baseMaterial.clone())\n  };\n\n  const derive = function(base) {\n    // Prototype chain to the base material\n    const derived = Object.create(base, descriptor);\n\n    // Store the baseMaterial for reference; this is always the original even when cloning\n    Object.defineProperty(derived, 'baseMaterial', { value: baseMaterial });\n\n    // Needs its own ids\n    Object.defineProperty(derived, 'id', { value: materialInstanceId++ });\n    derived.uuid = generateUUID();\n\n    // Merge uniforms, defines, and extensions\n    derived.uniforms = assign({}, base.uniforms, options.uniforms);\n    derived.defines = assign({}, base.defines, options.defines);\n    derived.defines[`TROIKA_DERIVED_MATERIAL_${optionsKey}`] = ''; //force a program change from the base material\n    derived.extensions = assign({}, base.extensions, options.extensions);\n\n    // Don't inherit EventDispatcher listeners\n    derived._listeners = undefined;\n\n    return derived\n  };\n\n  const descriptor = {\n    constructor: {value: DerivedMaterial},\n    isDerivedMaterial: {value: true},\n\n    customProgramCacheKey: {\n      writable: true,\n      configurable: true,\n      value: function () {\n        return baseMaterial.customProgramCacheKey() + '|' + optionsKey\n      }\n    },\n\n    onBeforeCompile: {\n      get() {\n        return onBeforeCompile\n      },\n      set(fn) {\n        this[privateBeforeCompileProp] = fn;\n      }\n    },\n\n    copy: {\n      writable: true,\n      configurable: true,\n      value: function (source) {\n        baseMaterial.copy.call(this, source);\n        if (!baseMaterial.isShaderMaterial && !baseMaterial.isDerivedMaterial) {\n          assign(this.extensions, source.extensions);\n          assign(this.defines, source.defines);\n          assign(this.uniforms, UniformsUtils.clone(source.uniforms));\n        }\n        return this\n      }\n    },\n\n    clone: {\n      writable: true,\n      configurable: true,\n      value: function () {\n        const newBase = new baseMaterial.constructor();\n        return derive(newBase).copy(this)\n      }\n    },\n\n    /**\n     * Utility to get a MeshDepthMaterial that will honor this derived material's vertex\n     * transformations and discarded fragments.\n     */\n    getDepthMaterial: {\n      writable: true,\n      configurable: true,\n      value: function() {\n        let depthMaterial = this._depthMaterial;\n        if (!depthMaterial) {\n          depthMaterial = this._depthMaterial = createDerivedMaterial(\n            baseMaterial.isDerivedMaterial\n              ? baseMaterial.getDepthMaterial()\n              : new MeshDepthMaterial({ depthPacking: RGBADepthPacking }),\n            options\n          );\n          depthMaterial.defines.IS_DEPTH_MATERIAL = '';\n          depthMaterial.uniforms = this.uniforms; //automatically recieve same uniform values\n        }\n        return depthMaterial\n      }\n    },\n\n    /**\n     * Utility to get a MeshDistanceMaterial that will honor this derived material's vertex\n     * transformations and discarded fragments.\n     */\n    getDistanceMaterial: {\n      writable: true,\n      configurable: true,\n      value: function() {\n        let distanceMaterial = this._distanceMaterial;\n        if (!distanceMaterial) {\n          distanceMaterial = this._distanceMaterial = createDerivedMaterial(\n            baseMaterial.isDerivedMaterial\n              ? baseMaterial.getDistanceMaterial()\n              : new MeshDistanceMaterial(),\n            options\n          );\n          distanceMaterial.defines.IS_DISTANCE_MATERIAL = '';\n          distanceMaterial.uniforms = this.uniforms; //automatically recieve same uniform values\n        }\n        return distanceMaterial\n      }\n    },\n\n    dispose: {\n      writable: true,\n      configurable: true,\n      value() {\n        const {_depthMaterial, _distanceMaterial} = this;\n        if (_depthMaterial) _depthMaterial.dispose();\n        if (_distanceMaterial) _distanceMaterial.dispose();\n        baseMaterial.dispose.call(this);\n      }\n    }\n  };\n\n  ctorsByDerivation[optionsKey] = DerivedMaterial;\n  return new DerivedMaterial()\n}\n\n\nfunction upgradeShaders({vertexShader, fragmentShader}, options, key) {\n  let {\n    vertexDefs,\n    vertexMainIntro,\n    vertexMainOutro,\n    vertexTransform,\n    fragmentDefs,\n    fragmentMainIntro,\n    fragmentMainOutro,\n    fragmentColorTransform,\n    customRewriter,\n    timeUniform\n  } = options;\n\n  vertexDefs = vertexDefs || '';\n  vertexMainIntro = vertexMainIntro || '';\n  vertexMainOutro = vertexMainOutro || '';\n  fragmentDefs = fragmentDefs || '';\n  fragmentMainIntro = fragmentMainIntro || '';\n  fragmentMainOutro = fragmentMainOutro || '';\n\n  // Expand includes if needed\n  if (vertexTransform || customRewriter) {\n    vertexShader = expandShaderIncludes(vertexShader);\n  }\n  if (fragmentColorTransform || customRewriter) {\n    // We need to be able to find postprocessing chunks after include expansion in order to\n    // put them after the fragmentColorTransform, so mark them with comments first. Even if\n    // this particular derivation doesn't have a fragmentColorTransform, other derivations may,\n    // so we still mark them.\n    fragmentShader = fragmentShader.replace(\n      /^[ \\t]*#include <((?:tonemapping|encodings|fog|premultiplied_alpha|dithering)_fragment)>/gm,\n      '\\n//!BEGIN_POST_CHUNK $1\\n$&\\n//!END_POST_CHUNK\\n'\n    );\n    fragmentShader = expandShaderIncludes(fragmentShader);\n  }\n\n  // Apply custom rewriter function\n  if (customRewriter) {\n    let res = customRewriter({vertexShader, fragmentShader});\n    vertexShader = res.vertexShader;\n    fragmentShader = res.fragmentShader;\n  }\n\n  // The fragmentColorTransform needs to go before any postprocessing chunks, so extract\n  // those and re-insert them into the outro in the correct place:\n  if (fragmentColorTransform) {\n    let postChunks = [];\n    fragmentShader = fragmentShader.replace(\n      /^\\/\\/!BEGIN_POST_CHUNK[^]+?^\\/\\/!END_POST_CHUNK/gm, // [^]+? = non-greedy match of any chars including newlines\n      match => {\n        postChunks.push(match);\n        return ''\n      }\n    );\n    fragmentMainOutro = `${fragmentColorTransform}\\n${postChunks.join('\\n')}\\n${fragmentMainOutro}`;\n  }\n\n  // Inject auto-updating time uniform if requested\n  if (timeUniform) {\n    const code = `\\nuniform float ${timeUniform};\\n`;\n    vertexDefs = code + vertexDefs;\n    fragmentDefs = code + fragmentDefs;\n  }\n\n  // Inject a function for the vertexTransform and rename all usages of position/normal/uv\n  if (vertexTransform) {\n    // Hoist these defs to the very top so they work in other function defs\n    vertexShader = `vec3 troika_position_${key};\nvec3 troika_normal_${key};\nvec2 troika_uv_${key};\n${vertexShader}\n`;\n    vertexDefs = `${vertexDefs}\nvoid troikaVertexTransform${key}(inout vec3 position, inout vec3 normal, inout vec2 uv) {\n  ${vertexTransform}\n}\n`;\n    vertexMainIntro = `\ntroika_position_${key} = vec3(position);\ntroika_normal_${key} = vec3(normal);\ntroika_uv_${key} = vec2(uv);\ntroikaVertexTransform${key}(troika_position_${key}, troika_normal_${key}, troika_uv_${key});\n${vertexMainIntro}\n`;\n    vertexShader = vertexShader.replace(/\\b(position|normal|uv)\\b/g, (match, match1, index, fullStr) => {\n      return /\\battribute\\s+vec[23]\\s+$/.test(fullStr.substr(0, index)) ? match1 : `troika_${match1}_${key}`\n    });\n  }\n\n  // Inject defs and intro/outro snippets\n  vertexShader = injectIntoShaderCode(vertexShader, key, vertexDefs, vertexMainIntro, vertexMainOutro);\n  fragmentShader = injectIntoShaderCode(fragmentShader, key, fragmentDefs, fragmentMainIntro, fragmentMainOutro);\n\n  return {\n    vertexShader,\n    fragmentShader\n  }\n}\n\nfunction injectIntoShaderCode(shaderCode, id, defs, intro, outro) {\n  if (intro || outro || defs) {\n    shaderCode = shaderCode.replace(voidMainRegExp, `\n${defs}\nvoid troikaOrigMain${id}() {`\n    );\n    shaderCode += `\nvoid main() {\n  ${intro}\n  troikaOrigMain${id}();\n  ${outro}\n}`;\n  }\n  return shaderCode\n}\n\n\nfunction optionsJsonReplacer(key, value) {\n  return key === 'uniforms' ? undefined : typeof value === 'function' ? value.toString() : value\n}\n\nlet _idCtr = 0;\nconst optionsHashesToIds = new Map();\nfunction getKeyForOptions(options) {\n  const optionsHash = JSON.stringify(options, optionsJsonReplacer);\n  let id = optionsHashesToIds.get(optionsHash);\n  if (id == null) {\n    optionsHashesToIds.set(optionsHash, (id = ++_idCtr));\n  }\n  return id\n}\n\n// Copied from threejs WebGLPrograms.js so we can resolve builtin materials to their shaders\n// TODO how can we keep this from getting stale?\nconst MATERIAL_TYPES_TO_SHADERS = {\n  MeshDepthMaterial: 'depth',\n  MeshDistanceMaterial: 'distanceRGBA',\n  MeshNormalMaterial: 'normal',\n  MeshBasicMaterial: 'basic',\n  MeshLambertMaterial: 'lambert',\n  MeshPhongMaterial: 'phong',\n  MeshToonMaterial: 'toon',\n  MeshStandardMaterial: 'physical',\n  MeshPhysicalMaterial: 'physical',\n  MeshMatcapMaterial: 'matcap',\n  LineBasicMaterial: 'basic',\n  LineDashedMaterial: 'dashed',\n  PointsMaterial: 'points',\n  ShadowMaterial: 'shadow',\n  SpriteMaterial: 'sprite'\n};\n\n/**\n * Given a Three.js `Material` instance, find the shaders/uniforms that will be\n * used to render that material.\n *\n * @param material - the Material instance\n * @return {object} - the material's shader info: `{uniforms:{}, fragmentShader:'', vertexShader:''}`\n */\nfunction getShadersForMaterial(material) {\n  let builtinType = MATERIAL_TYPES_TO_SHADERS[material.type];\n  return builtinType ? ShaderLib[builtinType] : material //TODO fallback for unknown type?\n}\n\n/**\n * Find all uniforms and their types within a shader code string.\n *\n * @param {string} shader - The shader code to parse\n * @return {object} mapping of uniform names to their glsl type\n */\nfunction getShaderUniformTypes(shader) {\n  let uniformRE = /\\buniform\\s+(int|float|vec[234]|mat[34])\\s+([A-Za-z_][\\w]*)/g;\n  let uniforms = Object.create(null);\n  let match;\n  while ((match = uniformRE.exec(shader)) !== null) {\n    uniforms[match[2]] = match[1];\n  }\n  return uniforms\n}\n\n/**\n * Helper for smoothing out the `m.getInverse(x)` --> `m.copy(x).invert()` conversion\n * that happened in ThreeJS r123.\n * @param {Matrix4} srcMatrix\n * @param {Matrix4} [tgtMatrix]\n */\nfunction invertMatrix4(srcMatrix, tgtMatrix = new Matrix4()) {\n  if (typeof tgtMatrix.invert === 'function') {\n    tgtMatrix.copy(srcMatrix).invert();\n  } else {\n    tgtMatrix.getInverse(srcMatrix);\n  }\n  return tgtMatrix\n}\n\n/*\nInput geometry is a cylinder with r=1, height in y dimension from 0 to 1,\ndivided into a reasonable number of height segments.\n*/\n\nconst vertexDefs = `\nuniform vec3 pointA;\nuniform vec3 controlA;\nuniform vec3 controlB;\nuniform vec3 pointB;\nuniform float radius;\nvarying float bezierT;\n\nvec3 cubicBezier(vec3 p1, vec3 c1, vec3 c2, vec3 p2, float t) {\n  float t2 = 1.0 - t;\n  float b0 = t2 * t2 * t2;\n  float b1 = 3.0 * t * t2 * t2;\n  float b2 = 3.0 * t * t * t2;\n  float b3 = t * t * t;\n  return b0 * p1 + b1 * c1 + b2 * c2 + b3 * p2;\n}\n\nvec3 cubicBezierDerivative(vec3 p1, vec3 c1, vec3 c2, vec3 p2, float t) {\n  float t2 = 1.0 - t;\n  return -3.0 * p1 * t2 * t2 +\n    c1 * (3.0 * t2 * t2 - 6.0 * t2 * t) +\n    c2 * (6.0 * t2 * t - 3.0 * t * t) +\n    3.0 * p2 * t * t;\n}\n`;\n\nconst vertexTransform = `\nfloat t = position.y;\nbezierT = t;\nvec3 bezierCenterPos = cubicBezier(pointA, controlA, controlB, pointB, t);\nvec3 bezierDir = normalize(cubicBezierDerivative(pointA, controlA, controlB, pointB, t));\n\n// Make \"sideways\" always perpendicular to the camera ray; this ensures that any twists\n// in the cylinder occur where you won't see them: \nvec3 viewDirection = normalMatrix * vec3(0.0, 0.0, 1.0);\nif (bezierDir == viewDirection) {\n  bezierDir = normalize(cubicBezierDerivative(pointA, controlA, controlB, pointB, t == 1.0 ? t - 0.0001 : t + 0.0001));\n}\nvec3 sideways = normalize(cross(bezierDir, viewDirection));\nvec3 upish = normalize(cross(sideways, bezierDir));\n\n// Build a matrix for transforming this disc in the cylinder:\nmat4 discTx;\ndiscTx[0].xyz = sideways * radius;\ndiscTx[1].xyz = bezierDir * radius;\ndiscTx[2].xyz = upish * radius;\ndiscTx[3].xyz = bezierCenterPos;\ndiscTx[3][3] = 1.0;\n\n// Apply transform, ignoring original y\nposition = (discTx * vec4(position.x, 0.0, position.z, 1.0)).xyz;\nnormal = normalize(mat3(discTx) * normal);\n`;\n\nconst fragmentDefs = `\nuniform vec3 dashing;\nvarying float bezierT;\n`;\n\nconst fragmentMainIntro = `\nif (dashing.x + dashing.y > 0.0) {\n  float dashFrac = mod(bezierT - dashing.z, dashing.x + dashing.y);\n  if (dashFrac > dashing.x) {\n    discard;\n  }\n}\n`;\n\n// Debugging: separate color for each of the 6 sides:\n// const fragmentColorTransform = `\n// float sideNum = floor(vUV.x * 6.0);\n// vec3 mixColor = sideNum < 1.0 ? vec3(1.0, 0.0, 0.0) :\n//   sideNum < 2.0 ? vec3(0.0, 1.0, 1.0) :\n//   sideNum < 3.0 ? vec3(1.0, 1.0, 0.0) :\n//   sideNum < 4.0 ? vec3(0.0, 0.0, 1.0) :\n//   sideNum < 5.0 ? vec3(0.0, 1.0, 0.0) :\n//   vec3(1.0, 0.0, 1.0);\n// gl_FragColor.xyz = mix(gl_FragColor.xyz, mixColor, 0.5);\n// `\n\n\n\nfunction createBezierMeshMaterial(baseMaterial) {\n  return createDerivedMaterial(\n    baseMaterial,\n    {\n      chained: true,\n      uniforms: {\n        pointA: {value: new Vector3()},\n        controlA: {value: new Vector3()},\n        controlB: {value: new Vector3()},\n        pointB: {value: new Vector3()},\n        radius: {value: 0.01},\n        dashing: {value: new Vector3()} //on, off, offset\n      },\n      vertexDefs,\n      vertexTransform,\n      fragmentDefs,\n      fragmentMainIntro\n    }\n  )\n}\n\nlet geometry = null;\n\nconst defaultBaseMaterial = /*#__PURE__*/new MeshStandardMaterial({color: 0xffffff, side: DoubleSide});\n\n\n/**\n * A ThreeJS `Mesh` that bends a tube shape along a 3D cubic bezier path. The bending is done\n * by deforming a straight cylindrical geometry in the vertex shader based on a set of four\n * control point uniforms. It patches the necessary GLSL into the mesh's assigned `material`\n * automatically.\n *\n * The cubiz bezier path is determined by its four `Vector3` properties:\n * - `pointA`\n * - `controlA`\n * - `controlB`\n * - `pointB`\n *\n * The tube's radius is controlled by its `radius` property, which defaults to `0.01`.\n *\n * You can also give the tube a dashed appearance with two properties:\n *\n * - `dashArray` - an array of two numbers, defining the length of \"on\" and \"off\" parts of\n *   the dash. Each is a 0-1 ratio of the entire path's length. (Actually this is the `t` length\n *   used as input to the cubic bezier function, not its visible length.)\n * - `dashOffset` - offset of where the dash starts. You can animate this to make the dashes move.\n *\n * Note that the dashes will appear like a hollow tube, not solid. This will be more apparent on\n * thicker tubes.\n *\n * TODO: proper geometry bounding sphere and raycasting\n * TODO: allow control of the geometry's segment counts\n */\nclass BezierMesh extends Mesh {\n  static getGeometry() {\n    return geometry || (geometry =\n      new CylinderBufferGeometry(1, 1, 1, 6, 64).translate(0, 0.5, 0)\n    )\n  }\n\n  constructor() {\n    super(\n      BezierMesh.getGeometry(),\n      defaultBaseMaterial\n    );\n\n    this.pointA = new Vector3();\n    this.controlA = new Vector3();\n    this.controlB = new Vector3();\n    this.pointB = new Vector3();\n    this.radius = 0.01;\n    this.dashArray = new Vector2();\n    this.dashOffset = 0;\n\n    // TODO - disabling frustum culling until I figure out how to customize the\n    //  geometry's bounding sphere that gets used\n    this.frustumCulled = false;\n  }\n\n  // Handler for automatically wrapping the base material with our upgrades. We do the wrapping\n  // lazily on _read_ rather than write to avoid unnecessary wrapping on transient values.\n  get material() {\n    let derivedMaterial = this._derivedMaterial;\n    const baseMaterial = this._baseMaterial || this._defaultMaterial || (this._defaultMaterial = defaultBaseMaterial.clone());\n    if (!derivedMaterial || derivedMaterial.baseMaterial !== baseMaterial) {\n      derivedMaterial = this._derivedMaterial = createBezierMeshMaterial(baseMaterial);\n      // dispose the derived material when its base material is disposed:\n      baseMaterial.addEventListener('dispose', function onDispose() {\n        baseMaterial.removeEventListener('dispose', onDispose);\n        derivedMaterial.dispose();\n      });\n    }\n    return derivedMaterial\n  }\n  set material(baseMaterial) {\n    this._baseMaterial = baseMaterial;\n  }\n\n  // Create and update material for shadows upon request:\n  get customDepthMaterial() {\n    return this.material.getDepthMaterial()\n  }\n  get customDistanceMaterial() {\n    return this.material.getDistanceMaterial()\n  }\n\n  onBeforeRender(shaderInfo) {\n    const {uniforms} = this.material;\n    const {pointA, controlA, controlB, pointB, radius, dashArray, dashOffset} = this;\n    uniforms.pointA.value.copy(pointA);\n    uniforms.controlA.value.copy(controlA);\n    uniforms.controlB.value.copy(controlB);\n    uniforms.pointB.value.copy(pointB);\n    uniforms.radius.value = radius;\n    uniforms.dashing.value.set(dashArray.x, dashArray.y, dashOffset || 0);\n  }\n\n  raycast(raycaster, intersects) {\n    // TODO - just fail for now\n  }\n}\n\nexport { BezierMesh, createDerivedMaterial, expandShaderIncludes, getShaderUniformTypes, getShadersForMaterial, invertMatrix4, voidMainRegExp };\n","import { Texture, LinearFilter, Color, InstancedBufferGeometry, Sphere, Box3, BackSide, DoubleSide, InstancedBufferAttribute, PlaneBufferGeometry, BufferGeometry, Float32BufferAttribute, Vector2, Vector4, Matrix3, MeshBasicMaterial, Matrix4, Vector3, Mesh, FrontSide } from 'three';\nimport { terminateWorker, Thenable, defineWorkerModule, ThenableWorkerModule } from 'troika-worker-utils';\nimport createSDFGenerator from 'webgl-sdf-generator';\nimport bidiFactory from 'bidi-js';\nimport { createDerivedMaterial, voidMainRegExp } from 'troika-three-utils';\n\n/**\n * Factory function that creates a self-contained environment for processing text typesetting requests.\n *\n * It is important that this function has no closure dependencies, so that it can be easily injected\n * into the source for a Worker without requiring a build step or complex dependency loading. All its\n * dependencies must be passed in at initialization.\n *\n * @param {function} fontParser - a function that accepts an ArrayBuffer of the font data and returns\n * a standardized structure giving access to the font and its glyphs:\n *   {\n *     unitsPerEm: number,\n *     ascender: number,\n *     descender: number,\n *     forEachGlyph(string, fontSize, letterSpacing, callback) {\n *       //invokes callback for each glyph to render, passing it an object:\n *       callback({\n *         index: number,\n *         advanceWidth: number,\n *         xMin: number,\n *         yMin: number,\n *         xMax: number,\n *         yMax: number,\n *         pathCommandCount: number,\n *         forEachPathCommand(callback) {\n *           //invokes callback for each path command, with args:\n *           callback(\n *             type: 'M|L|C|Q|Z',\n *             ...args //0 to 6 args depending on the type\n *           )\n *         }\n *       })\n *     }\n *   }\n * @param {object} bidi - the bidi.js implementation object\n * @param {Object} config\n * @return {Object}\n */\nfunction createTypesetter(fontParser, bidi, config) {\n\n  const {\n    defaultFontURL\n  } = config;\n\n  /**\n   * Holds parsed font objects by url\n   */\n  const fonts = Object.create(null);\n\n  const INF = Infinity;\n\n  // Set of Unicode Default_Ignorable_Code_Point characters, these will not produce visible glyphs\n  const DEFAULT_IGNORABLE_CHARS = /[\\u00AD\\u034F\\u061C\\u115F-\\u1160\\u17B4-\\u17B5\\u180B-\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u206F\\u3164\\uFE00-\\uFE0F\\uFEFF\\uFFA0\\uFFF0-\\uFFF8]/;\n\n  // Incomplete set of characters that allow line breaking after them\n  // In the future we may consider a full Unicode line breaking algorithm impl: https://www.unicode.org/reports/tr14\n  const BREAK_AFTER_CHARS = /[\\s\\-\\u007C\\u00AD\\u2010\\u2012-\\u2014\\u2027\\u2056\\u2E17\\u2E40]/;\n\n  /**\n   * Load a given font url\n   */\n  function doLoadFont(url, callback) {\n    function tryLoad() {\n      const onError = err => {\n        console.error(`Failure loading font ${url}${url === defaultFontURL ? '' : '; trying fallback'}`, err);\n        if (url !== defaultFontURL) {\n          url = defaultFontURL;\n          tryLoad();\n        }\n      };\n      try {\n        const request = new XMLHttpRequest();\n        request.open('get', url, true);\n        request.responseType = 'arraybuffer';\n        request.onload = function () {\n          if (request.status >= 400) {\n            onError(new Error(request.statusText));\n          }\n          else if (request.status > 0) {\n            try {\n              const fontObj = fontParser(request.response);\n              callback(fontObj);\n            } catch (e) {\n              onError(e);\n            }\n          }\n        };\n        request.onerror = onError;\n        request.send();\n      } catch(err) {\n        onError(err);\n      }\n    }\n    tryLoad();\n  }\n\n\n  /**\n   * Load a given font url if needed, invoking a callback when it's loaded. If already\n   * loaded, the callback will be called synchronously.\n   */\n  function loadFont(fontUrl, callback) {\n    if (!fontUrl) fontUrl = defaultFontURL;\n    let font = fonts[fontUrl];\n    if (font) {\n      // if currently loading font, add to callbacks, otherwise execute immediately\n      if (font.pending) {\n        font.pending.push(callback);\n      } else {\n        callback(font);\n      }\n    } else {\n      fonts[fontUrl] = {pending: [callback]};\n      doLoadFont(fontUrl, fontObj => {\n        let callbacks = fonts[fontUrl].pending;\n        fonts[fontUrl] = fontObj;\n        callbacks.forEach(cb => cb(fontObj));\n      });\n    }\n  }\n\n\n  /**\n   * Main entry point.\n   * Process a text string with given font and formatting parameters, and return all info\n   * necessary to render all its glyphs.\n   */\n  function typeset(\n    {\n      text='',\n      font=defaultFontURL,\n      sdfGlyphSize=64,\n      fontSize=1,\n      letterSpacing=0,\n      lineHeight='normal',\n      maxWidth=INF,\n      direction,\n      textAlign='left',\n      textIndent=0,\n      whiteSpace='normal',\n      overflowWrap='normal',\n      anchorX = 0,\n      anchorY = 0,\n      includeCaretPositions=false,\n      chunkedBoundsSize=8192,\n      colorRanges=null\n    },\n    callback,\n    metricsOnly=false\n  ) {\n    const mainStart = now();\n    const timings = {fontLoad: 0, typesetting: 0};\n\n    // Ensure newlines are normalized\n    if (text.indexOf('\\r') > -1) {\n      console.info('Typesetter: got text with \\\\r chars; normalizing to \\\\n');\n      text = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n    }\n\n    // Ensure we've got numbers not strings\n    fontSize = +fontSize;\n    letterSpacing = +letterSpacing;\n    maxWidth = +maxWidth;\n    lineHeight = lineHeight || 'normal';\n    textIndent = +textIndent;\n\n    loadFont(font, fontObj => {\n      const hasMaxWidth = isFinite(maxWidth);\n      let glyphIds = null;\n      let glyphPositions = null;\n      let glyphData = null;\n      let glyphColors = null;\n      let caretPositions = null;\n      let visibleBounds = null;\n      let chunkedBounds = null;\n      let maxLineWidth = 0;\n      let renderableGlyphCount = 0;\n      let canWrap = whiteSpace !== 'nowrap';\n      const {ascender, descender, unitsPerEm} = fontObj;\n      timings.fontLoad = now() - mainStart;\n      const typesetStart = now();\n\n      // Find conversion between native font units and fontSize units; this will already be done\n      // for the gx/gy values below but everything else we'll need to convert\n      const fontSizeMult = fontSize / unitsPerEm;\n\n      // Determine appropriate value for 'normal' line height based on the font's actual metrics\n      // TODO this does not guarantee individual glyphs won't exceed the line height, e.g. Roboto; should we use yMin/Max instead?\n      if (lineHeight === 'normal') {\n        lineHeight = (ascender - descender) / unitsPerEm;\n      }\n\n      // Determine line height and leading adjustments\n      lineHeight = lineHeight * fontSize;\n      const halfLeading = (lineHeight - (ascender - descender) * fontSizeMult) / 2;\n      const topBaseline = -(ascender * fontSizeMult + halfLeading);\n      const caretHeight = Math.min(lineHeight, (ascender - descender) * fontSizeMult);\n      const caretBottomOffset = (ascender + descender) / 2 * fontSizeMult - caretHeight / 2;\n\n      // Distribute glyphs into lines based on wrapping\n      let lineXOffset = textIndent;\n      let currentLine = new TextLine();\n      const lines = [currentLine];\n\n      fontObj.forEachGlyph(text, fontSize, letterSpacing, (glyphObj, glyphX, charIndex) => {\n        const char = text.charAt(charIndex);\n        const glyphWidth = glyphObj.advanceWidth * fontSizeMult;\n        const curLineCount = currentLine.count;\n        let nextLine;\n\n        // Calc isWhitespace and isEmpty once per glyphObj\n        if (!('isEmpty' in glyphObj)) {\n          glyphObj.isWhitespace = !!char && /\\s/.test(char);\n          glyphObj.canBreakAfter = !!char && BREAK_AFTER_CHARS.test(char);\n          glyphObj.isEmpty = glyphObj.xMin === glyphObj.xMax || glyphObj.yMin === glyphObj.yMax || DEFAULT_IGNORABLE_CHARS.test(char);\n        }\n        if (!glyphObj.isWhitespace && !glyphObj.isEmpty) {\n          renderableGlyphCount++;\n        }\n\n        // If a non-whitespace character overflows the max width, we need to soft-wrap\n        if (canWrap && hasMaxWidth && !glyphObj.isWhitespace && glyphX + glyphWidth + lineXOffset > maxWidth && curLineCount) {\n          // If it's the first char after a whitespace, start a new line\n          if (currentLine.glyphAt(curLineCount - 1).glyphObj.canBreakAfter) {\n            nextLine = new TextLine();\n            lineXOffset = -glyphX;\n          } else {\n            // Back up looking for a whitespace character to wrap at\n            for (let i = curLineCount; i--;) {\n              // If we got the start of the line there's no soft break point; make hard break if overflowWrap='break-word'\n              if (i === 0 && overflowWrap === 'break-word') {\n                nextLine = new TextLine();\n                lineXOffset = -glyphX;\n                break\n              }\n              // Found a soft break point; move all chars since it to a new line\n              else if (currentLine.glyphAt(i).glyphObj.canBreakAfter) {\n                nextLine = currentLine.splitAt(i + 1);\n                const adjustX = nextLine.glyphAt(0).x;\n                lineXOffset -= adjustX;\n                for (let j = nextLine.count; j--;) {\n                  nextLine.glyphAt(j).x -= adjustX;\n                }\n                break\n              }\n            }\n          }\n          if (nextLine) {\n            currentLine.isSoftWrapped = true;\n            currentLine = nextLine;\n            lines.push(currentLine);\n            maxLineWidth = maxWidth; //after soft wrapping use maxWidth as calculated width\n          }\n        }\n\n        let fly = currentLine.glyphAt(currentLine.count);\n        fly.glyphObj = glyphObj;\n        fly.x = glyphX + lineXOffset;\n        fly.width = glyphWidth;\n        fly.charIndex = charIndex;\n\n        // Handle hard line breaks\n        if (char === '\\n') {\n          currentLine = new TextLine();\n          lines.push(currentLine);\n          lineXOffset = -(glyphX + glyphWidth + (letterSpacing * fontSize)) + textIndent;\n        }\n      });\n\n      // Calculate width of each line (excluding trailing whitespace) and maximum block width\n      lines.forEach(line => {\n        for (let i = line.count; i--;) {\n          let {glyphObj, x, width} = line.glyphAt(i);\n          if (!glyphObj.isWhitespace) {\n            line.width = x + width;\n            if (line.width > maxLineWidth) {\n              maxLineWidth = line.width;\n            }\n            return\n          }\n        }\n      });\n\n      // Find overall position adjustments for anchoring\n      let anchorXOffset = 0;\n      let anchorYOffset = 0;\n      if (anchorX) {\n        if (typeof anchorX === 'number') {\n          anchorXOffset = -anchorX;\n        }\n        else if (typeof anchorX === 'string') {\n          anchorXOffset = -maxLineWidth * (\n            anchorX === 'left' ? 0 :\n            anchorX === 'center' ? 0.5 :\n            anchorX === 'right' ? 1 :\n            parsePercent(anchorX)\n          );\n        }\n      }\n      if (anchorY) {\n        if (typeof anchorY === 'number') {\n          anchorYOffset = -anchorY;\n        }\n        else if (typeof anchorY === 'string') {\n          let height = lines.length * lineHeight;\n          anchorYOffset = anchorY === 'top' ? 0 :\n            anchorY === 'top-baseline' ? -topBaseline :\n            anchorY === 'middle' ? height / 2 :\n            anchorY === 'bottom' ? height :\n            anchorY === 'bottom-baseline' ? height - halfLeading + descender * fontSizeMult :\n            parsePercent(anchorY) * height;\n        }\n      }\n\n      if (!metricsOnly) {\n        // Resolve bidi levels\n        const bidiLevelsResult = bidi.getEmbeddingLevels(text, direction);\n\n        // Process each line, applying alignment offsets, adding each glyph to the atlas, and\n        // collecting all renderable glyphs into a single collection.\n        glyphIds = new Uint16Array(renderableGlyphCount);\n        glyphPositions = new Float32Array(renderableGlyphCount * 2);\n        glyphData = {};\n        visibleBounds = [INF, INF, -INF, -INF];\n        chunkedBounds = [];\n        let lineYOffset = topBaseline;\n        if (includeCaretPositions) {\n          caretPositions = new Float32Array(text.length * 3);\n        }\n        if (colorRanges) {\n          glyphColors = new Uint8Array(renderableGlyphCount * 3);\n        }\n        let renderableGlyphIndex = 0;\n        let prevCharIndex = -1;\n        let colorCharIndex = -1;\n        let chunk;\n        let currentColor;\n        lines.forEach((line, lineIndex) => {\n          let {count:lineGlyphCount, width:lineWidth} = line;\n\n          // Ignore empty lines\n          if (lineGlyphCount > 0) {\n            // Count trailing whitespaces, we want to ignore these for certain things\n            let trailingWhitespaceCount = 0;\n            for (let i = lineGlyphCount; i-- && line.glyphAt(i).glyphObj.isWhitespace;) {\n              trailingWhitespaceCount++;\n            }\n\n            // Apply horizontal alignment adjustments\n            let lineXOffset = 0;\n            let justifyAdjust = 0;\n            if (textAlign === 'center') {\n              lineXOffset = (maxLineWidth - lineWidth) / 2;\n            } else if (textAlign === 'right') {\n              lineXOffset = maxLineWidth - lineWidth;\n            } else if (textAlign === 'justify' && line.isSoftWrapped) {\n              // count non-trailing whitespace characters, and we'll adjust the offsets per character in the next loop\n              let whitespaceCount = 0;\n              for (let i = lineGlyphCount - trailingWhitespaceCount; i--;) {\n                if (line.glyphAt(i).glyphObj.isWhitespace) {\n                  whitespaceCount++;\n                }\n              }\n              justifyAdjust = (maxLineWidth - lineWidth) / whitespaceCount;\n            }\n            if (justifyAdjust || lineXOffset) {\n              let justifyOffset = 0;\n              for (let i = 0; i < lineGlyphCount; i++) {\n                let glyphInfo = line.glyphAt(i);\n                const glyphObj = glyphInfo.glyphObj;\n                glyphInfo.x += lineXOffset + justifyOffset;\n                // Expand non-trailing whitespaces for justify alignment\n                if (justifyAdjust !== 0 && glyphObj.isWhitespace && i < lineGlyphCount - trailingWhitespaceCount) {\n                  justifyOffset += justifyAdjust;\n                  glyphInfo.width += justifyAdjust;\n                }\n              }\n            }\n\n            // Perform bidi range flipping\n            const flips = bidi.getReorderSegments(\n              text, bidiLevelsResult, line.glyphAt(0).charIndex, line.glyphAt(line.count - 1).charIndex\n            );\n            for (let fi = 0; fi < flips.length; fi++) {\n              const [start, end] = flips[fi];\n              // Map start/end string indices to indices in the line\n              let left = Infinity, right = -Infinity;\n              for (let i = 0; i < lineGlyphCount; i++) {\n                if (line.glyphAt(i).charIndex >= start) { // gte to handle removed characters\n                  let startInLine = i, endInLine = i;\n                  for (; endInLine < lineGlyphCount; endInLine++) {\n                    let info = line.glyphAt(endInLine);\n                    if (info.charIndex > end) {\n                      break\n                    }\n                    if (endInLine < lineGlyphCount - trailingWhitespaceCount) { //don't include trailing ws in flip width\n                      left = Math.min(left, info.x);\n                      right = Math.max(right, info.x + info.width);\n                    }\n                  }\n                  for (let j = startInLine; j < endInLine; j++) {\n                    const glyphInfo = line.glyphAt(j);\n                    glyphInfo.x = right - (glyphInfo.x + glyphInfo.width - left);\n                  }\n                  break\n                }\n              }\n            }\n\n            // Assemble final data arrays\n            let glyphObj;\n            const setGlyphObj = g => glyphObj = g;\n            for (let i = 0; i < lineGlyphCount; i++) {\n              let glyphInfo = line.glyphAt(i);\n              glyphObj = glyphInfo.glyphObj;\n              const glyphId = glyphObj.index;\n\n              // Replace mirrored characters in rtl\n              const rtl = bidiLevelsResult.levels[glyphInfo.charIndex] & 1; //odd level means rtl\n              if (rtl) {\n                const mirrored = bidi.getMirroredCharacter(text[glyphInfo.charIndex]);\n                if (mirrored) {\n                  fontObj.forEachGlyph(mirrored, 0, 0, setGlyphObj);\n                }\n              }\n\n              // Add caret positions\n              if (includeCaretPositions) {\n                const {charIndex} = glyphInfo;\n                const caretLeft = glyphInfo.x + anchorXOffset;\n                const caretRight = glyphInfo.x + glyphInfo.width + anchorXOffset;\n                caretPositions[charIndex * 3] = rtl ? caretRight : caretLeft; //start edge x\n                caretPositions[charIndex * 3 + 1] = rtl ? caretLeft : caretRight; //end edge x\n                caretPositions[charIndex * 3 + 2] = lineYOffset + caretBottomOffset + anchorYOffset; //common bottom y\n\n                // If we skipped any chars from the previous glyph (due to ligature subs), fill in caret\n                // positions for those missing char indices; currently this uses a best-guess by dividing\n                // the ligature's width evenly. In the future we may try to use the font's LigatureCaretList\n                // table to get better interior caret positions.\n                const ligCount = charIndex - prevCharIndex;\n                if (ligCount > 1) {\n                  fillLigatureCaretPositions(caretPositions, prevCharIndex, ligCount);\n                }\n                prevCharIndex = charIndex;\n              }\n\n              // Track current color range\n              if (colorRanges) {\n                const {charIndex} = glyphInfo;\n                while(charIndex > colorCharIndex) {\n                  colorCharIndex++;\n                  if (colorRanges.hasOwnProperty(colorCharIndex)) {\n                    currentColor = colorRanges[colorCharIndex];\n                  }\n                }\n              }\n\n              // Get atlas data for renderable glyphs\n              if (!glyphObj.isWhitespace && !glyphObj.isEmpty) {\n                const idx = renderableGlyphIndex++;\n\n                // Add this glyph's path data\n                if (!glyphData[glyphId]) {\n                  glyphData[glyphId] = {\n                    path: glyphObj.path,\n                    pathBounds: [glyphObj.xMin, glyphObj.yMin, glyphObj.xMax, glyphObj.yMax]\n                  };\n                }\n\n                // Determine final glyph position and add to glyphPositions array\n                const glyphX = glyphInfo.x + anchorXOffset;\n                const glyphY = lineYOffset + anchorYOffset;\n                glyphPositions[idx * 2] = glyphX;\n                glyphPositions[idx * 2 + 1] = glyphY;\n\n                // Track total visible bounds\n                const visX0 = glyphX + glyphObj.xMin * fontSizeMult;\n                const visY0 = glyphY + glyphObj.yMin * fontSizeMult;\n                const visX1 = glyphX + glyphObj.xMax * fontSizeMult;\n                const visY1 = glyphY + glyphObj.yMax * fontSizeMult;\n                if (visX0 < visibleBounds[0]) visibleBounds[0] = visX0;\n                if (visY0 < visibleBounds[1]) visibleBounds[1] = visY0;\n                if (visX1 > visibleBounds[2]) visibleBounds[2] = visX1;\n                if (visY1 > visibleBounds[3]) visibleBounds[3] = visY1;\n\n                // Track bounding rects for each chunk of N glyphs\n                if (idx % chunkedBoundsSize === 0) {\n                  chunk = {start: idx, end: idx, rect: [INF, INF, -INF, -INF]};\n                  chunkedBounds.push(chunk);\n                }\n                chunk.end++;\n                const chunkRect = chunk.rect;\n                if (visX0 < chunkRect[0]) chunkRect[0] = visX0;\n                if (visY0 < chunkRect[1]) chunkRect[1] = visY0;\n                if (visX1 > chunkRect[2]) chunkRect[2] = visX1;\n                if (visY1 > chunkRect[3]) chunkRect[3] = visY1;\n\n                // Add to glyph ids array\n                glyphIds[idx] = glyphId;\n\n                // Add colors\n                if (colorRanges) {\n                  const start = idx * 3;\n                  glyphColors[start] = currentColor >> 16 & 255;\n                  glyphColors[start + 1] = currentColor >> 8 & 255;\n                  glyphColors[start + 2] = currentColor & 255;\n                }\n              }\n            }\n          }\n\n          // Increment y offset for next line\n          lineYOffset -= lineHeight;\n        });\n\n        // Fill in remaining caret positions in case the final character was a ligature\n        if (caretPositions) {\n          const ligCount = text.length - prevCharIndex;\n          if (ligCount > 1) {\n            fillLigatureCaretPositions(caretPositions, prevCharIndex, ligCount);\n          }\n        }\n      }\n\n      // Timing stats\n      timings.typesetting = now() - typesetStart;\n\n      callback({\n        glyphIds, //font indices for each glyph\n        glyphPositions, //x,y of each glyph's origin in layout\n        glyphData, //dict holding data about each glyph appearing in the text\n        caretPositions, //startX,endX,bottomY caret positions for each char\n        caretHeight, //height of cursor from bottom to top\n        glyphColors, //color for each glyph, if color ranges supplied\n        chunkedBounds, //total rects per (n=chunkedBoundsSize) consecutive glyphs\n        fontSize, //calculated em height\n        unitsPerEm, //font units per em\n        ascender: ascender * fontSizeMult, //font ascender\n        descender: descender * fontSizeMult, //font descender\n        lineHeight, //computed line height\n        topBaseline, //y coordinate of the top line's baseline\n        blockBounds: [ //bounds for the whole block of text, including vertical padding for lineHeight\n          anchorXOffset,\n          anchorYOffset - lines.length * lineHeight,\n          anchorXOffset + maxLineWidth,\n          anchorYOffset\n        ],\n        visibleBounds, //total bounds of visible text paths, may be larger or smaller than totalBounds\n        timings\n      });\n    });\n  }\n\n\n  /**\n   * For a given text string and font parameters, determine the resulting block dimensions\n   * after wrapping for the given maxWidth.\n   * @param args\n   * @param callback\n   */\n  function measure(args, callback) {\n    typeset(args, (result) => {\n      const [x0, y0, x1, y1] = result.blockBounds;\n      callback({\n        width: x1 - x0,\n        height: y1 - y0\n      });\n    }, {metricsOnly: true});\n  }\n\n  function parsePercent(str) {\n    let match = str.match(/^([\\d.]+)%$/);\n    let pct = match ? parseFloat(match[1]) : NaN;\n    return isNaN(pct) ? 0 : pct / 100\n  }\n\n  function fillLigatureCaretPositions(caretPositions, ligStartIndex, ligCount) {\n    const ligStartX = caretPositions[ligStartIndex * 3];\n    const ligEndX = caretPositions[ligStartIndex * 3 + 1];\n    const ligY = caretPositions[ligStartIndex * 3 + 2];\n    const guessedAdvanceX = (ligEndX - ligStartX) / ligCount;\n    for (let i = 0; i < ligCount; i++) {\n      const startIndex = (ligStartIndex + i) * 3;\n      caretPositions[startIndex] = ligStartX + guessedAdvanceX * i;\n      caretPositions[startIndex + 1] = ligStartX + guessedAdvanceX * (i + 1);\n      caretPositions[startIndex + 2] = ligY;\n    }\n  }\n\n  function now() {\n    return (self.performance || Date).now()\n  }\n\n  // Array-backed structure for a single line's glyphs data\n  function TextLine() {\n    this.data = [];\n  }\n  const textLineProps = ['glyphObj', 'x', 'width', 'charIndex'];\n  TextLine.prototype = {\n    width: 0,\n    isSoftWrapped: false,\n    get count() {\n      return Math.ceil(this.data.length / textLineProps.length)\n    },\n    glyphAt(i) {\n      let fly = TextLine.flyweight;\n      fly.data = this.data;\n      fly.index = i;\n      return fly\n    },\n    splitAt(i) {\n      let newLine = new TextLine();\n      newLine.data = this.data.splice(i * textLineProps.length);\n      return newLine\n    }\n  };\n  TextLine.flyweight = textLineProps.reduce((obj, prop, i, all) => {\n    Object.defineProperty(obj, prop, {\n      get() {\n        return this.data[this.index * textLineProps.length + i]\n      },\n      set(val) {\n        this.data[this.index * textLineProps.length + i] = val;\n      }\n    });\n    return obj\n  }, {data: null, index: 0});\n\n\n  return {\n    typeset,\n    measure,\n    loadFont\n  }\n}\n\nconst now = () => (self.performance || Date).now();\n\nconst mainThreadGenerator = createSDFGenerator();\n\nlet warned;\n\n/**\n * Generate an SDF texture image for a single glyph path, placing the result into a webgl canvas at a\n * given location and channel. Utilizes the webgl-sdf-generator external package for GPU-accelerated SDF\n * generation when supported.\n */\nfunction generateSDF(width, height, path, viewBox, distance, exponent, canvas, x, y, channel, useWebGL = true) {\n  // Allow opt-out\n  if (!useWebGL) {\n    return generateSDF_JS_Worker(width, height, path, viewBox, distance, exponent, canvas, x, y, channel)\n  }\n\n  // Attempt GPU-accelerated generation first\n  return generateSDF_GL(width, height, path, viewBox, distance, exponent, canvas, x, y, channel).then(\n    null,\n    err => {\n      // WebGL failed either due to a hard error or unexpected results; fall back to JS in workers\n      if (!warned) {\n        console.warn(`WebGL SDF generation failed, falling back to JS`, err);\n        warned = true;\n      }\n      return generateSDF_JS_Worker(width, height, path, viewBox, distance, exponent, canvas, x, y, channel)\n    }\n  )\n}\n\n/**\n * WebGL-based implementation executed on the main thread. Requests are executed in time-bounded\n * macrotask chunks to allow render frames to execute in between.\n */\nconst generateSDF_GL = /*#__PURE__*/function() {\n  const queue = [];\n  const chunkTimeBudget = 5; //ms\n  let timer = 0;\n  function nextChunk() {\n    const start = now();\n    while (queue.length && now() - start < chunkTimeBudget) {\n      queue.shift()();\n    }\n    timer = queue.length ? setTimeout(nextChunk, 0) : 0;\n  }\n  return (...args) => {\n    const thenable = Thenable();\n    queue.push(() => {\n      const start = now();\n      try {\n        mainThreadGenerator.webgl.generateIntoCanvas(...args);\n        thenable.resolve({timing: now() - start});\n      } catch(err) {\n        thenable.reject(err);\n      }\n    });\n    if (!timer) {\n      timer = setTimeout(nextChunk, 0);\n    }\n    return thenable\n  }\n}();\n\n/**\n * Fallback JS-based implementation, fanned out to a number of worker threads for parallelism\n */\nconst generateSDF_JS_Worker = /*#__PURE__*/function() {\n  const threadCount = 4; //how many workers to spawn\n  const idleTimeout = 2000; //workers will be terminated after being idle this many milliseconds\n  const threads = {};\n  let callNum = 0;\n  return function(width, height, path, viewBox, distance, exponent, canvas, x, y, channel) {\n    const workerId = 'TroikaTextSDFGenerator_JS_' + ((callNum++) % threadCount);\n    let thread = threads[workerId];\n    if (!thread) {\n      thread = threads[workerId] = {\n        workerModule: defineWorkerModule({\n          name: workerId,\n          workerId,\n          dependencies: [\n            createSDFGenerator,\n            now\n          ],\n          init(_createSDFGenerator, now) {\n            const generate = _createSDFGenerator().javascript.generate;\n            return function (...args) {\n              const start = now();\n              const textureData = generate(...args);\n              return {\n                textureData,\n                timing: now() - start\n              }\n            }\n          },\n          getTransferables(result) {\n            return [result.textureData.buffer]\n          }\n        }),\n        requests: 0,\n        idleTimer: null\n      };\n    }\n\n    thread.requests++;\n    clearTimeout(thread.idleTimer);\n    return thread.workerModule(width, height, path, viewBox, distance, exponent)\n      .then(({textureData, timing}) => {\n        // copy result data into the canvas\n        const start = now();\n        // expand single-channel data into rgba\n        const imageData = new Uint8Array(textureData.length * 4);\n        for (let i = 0; i < textureData.length; i++) {\n          imageData[i * 4 + channel] = textureData[i];\n        }\n        mainThreadGenerator.webglUtils.renderImageData(canvas, imageData, x, y, width, height, 1 << (3 - channel));\n        timing += now() - start;\n\n        // clean up workers after a while\n        if (--thread.requests === 0) {\n          thread.idleTimer = setTimeout(() => { terminateWorker(workerId); }, idleTimeout);\n        }\n        return {timing}\n      })\n  }\n}();\n\nfunction warmUpSDFCanvas(canvas) {\n  if (!canvas._warm) {\n    mainThreadGenerator.webgl.isSupported(canvas);\n    canvas._warm = true;\n  }\n}\n\nconst resizeWebGLCanvasWithoutClearing = mainThreadGenerator.webglUtils.resizeWebGLCanvasWithoutClearing;\n\n/*!\nCustom build of Typr.ts (https://github.com/fredli74/Typr.ts) for use in Troika text rendering.\nOriginal MIT license applies: https://github.com/fredli74/Typr.ts/blob/master/LICENSE\n*/\nfunction typrFactory(){return \"undefined\"==typeof window&&(self.window=self),function(r){var e={parse:function(r){var t=e._bin,a=new Uint8Array(r);if(\"ttcf\"==t.readASCII(a,0,4)){var n=4;t.readUshort(a,n),n+=2,t.readUshort(a,n),n+=2;var o=t.readUint(a,n);n+=4;for(var s=[],i=0;i<o;i++){var h=t.readUint(a,n);n+=4,s.push(e._readFont(a,h));}return s}return [e._readFont(a,0)]},_readFont:function(r,t){var a=e._bin,n=t;a.readFixed(r,t),t+=4;var o=a.readUshort(r,t);t+=2,a.readUshort(r,t),t+=2,a.readUshort(r,t),t+=2,a.readUshort(r,t),t+=2;for(var s=[\"cmap\",\"head\",\"hhea\",\"maxp\",\"hmtx\",\"name\",\"OS/2\",\"post\",\"loca\",\"glyf\",\"kern\",\"CFF \",\"GPOS\",\"GSUB\",\"SVG \"],i={_data:r,_offset:n},h={},f=0;f<o;f++){var d=a.readASCII(r,t,4);t+=4,a.readUint(r,t),t+=4;var l=a.readUint(r,t);t+=4;var u=a.readUint(r,t);t+=4,h[d]={offset:l,length:u};}for(f=0;f<s.length;f++){var v=s[f];h[v]&&(i[v.trim()]=e[v.trim()].parse(r,h[v].offset,h[v].length,i));}return i},_tabOffset:function(r,t,a){for(var n=e._bin,o=n.readUshort(r,a+4),s=a+12,i=0;i<o;i++){var h=n.readASCII(r,s,4);s+=4,n.readUint(r,s),s+=4;var f=n.readUint(r,s);if(s+=4,n.readUint(r,s),s+=4,h==t)return f}return 0}};e._bin={readFixed:function(r,e){return (r[e]<<8|r[e+1])+(r[e+2]<<8|r[e+3])/65540},readF2dot14:function(r,t){return e._bin.readShort(r,t)/16384},readInt:function(r,t){return e._bin._view(r).getInt32(t)},readInt8:function(r,t){return e._bin._view(r).getInt8(t)},readShort:function(r,t){return e._bin._view(r).getInt16(t)},readUshort:function(r,t){return e._bin._view(r).getUint16(t)},readUshorts:function(r,t,a){for(var n=[],o=0;o<a;o++)n.push(e._bin.readUshort(r,t+2*o));return n},readUint:function(r,t){return e._bin._view(r).getUint32(t)},readUint64:function(r,t){return 4294967296*e._bin.readUint(r,t)+e._bin.readUint(r,t+4)},readASCII:function(r,e,t){for(var a=\"\",n=0;n<t;n++)a+=String.fromCharCode(r[e+n]);return a},readUnicode:function(r,e,t){for(var a=\"\",n=0;n<t;n++){var o=r[e++]<<8|r[e++];a+=String.fromCharCode(o);}return a},_tdec:\"undefined\"!=typeof window&&window.TextDecoder?new window.TextDecoder:null,readUTF8:function(r,t,a){var n=e._bin._tdec;return n&&0==t&&a==r.length?n.decode(r):e._bin.readASCII(r,t,a)},readBytes:function(r,e,t){for(var a=[],n=0;n<t;n++)a.push(r[e+n]);return a},readASCIIArray:function(r,e,t){for(var a=[],n=0;n<t;n++)a.push(String.fromCharCode(r[e+n]));return a},_view:function(r){return r._dataView||(r._dataView=r.buffer?new DataView(r.buffer,r.byteOffset,r.byteLength):new DataView(new Uint8Array(r).buffer))}},e._lctf={},e._lctf.parse=function(r,t,a,n,o){var s=e._bin,i={},h=t;s.readFixed(r,t),t+=4;var f=s.readUshort(r,t);t+=2;var d=s.readUshort(r,t);t+=2;var l=s.readUshort(r,t);return t+=2,i.scriptList=e._lctf.readScriptList(r,h+f),i.featureList=e._lctf.readFeatureList(r,h+d),i.lookupList=e._lctf.readLookupList(r,h+l,o),i},e._lctf.readLookupList=function(r,t,a){var n=e._bin,o=t,s=[],i=n.readUshort(r,t);t+=2;for(var h=0;h<i;h++){var f=n.readUshort(r,t);t+=2;var d=e._lctf.readLookupTable(r,o+f,a);s.push(d);}return s},e._lctf.readLookupTable=function(r,t,a){var n=e._bin,o=t,s={tabs:[]};s.ltype=n.readUshort(r,t),t+=2,s.flag=n.readUshort(r,t),t+=2;var i=n.readUshort(r,t);t+=2;for(var h=s.ltype,f=0;f<i;f++){var d=n.readUshort(r,t);t+=2;var l=a(r,h,o+d,s);s.tabs.push(l);}return s},e._lctf.numOfOnes=function(r){for(var e=0,t=0;t<32;t++)0!=(r>>>t&1)&&e++;return e},e._lctf.readClassDef=function(r,t){var a=e._bin,n=[],o=a.readUshort(r,t);if(t+=2,1==o){var s=a.readUshort(r,t);t+=2;var i=a.readUshort(r,t);t+=2;for(var h=0;h<i;h++)n.push(s+h),n.push(s+h),n.push(a.readUshort(r,t)),t+=2;}if(2==o){var f=a.readUshort(r,t);t+=2;for(h=0;h<f;h++)n.push(a.readUshort(r,t)),t+=2,n.push(a.readUshort(r,t)),t+=2,n.push(a.readUshort(r,t)),t+=2;}return n},e._lctf.getInterval=function(r,e){for(var t=0;t<r.length;t+=3){var a=r[t],n=r[t+1];if(r[t+2],a<=e&&e<=n)return t}return -1},e._lctf.readCoverage=function(r,t){var a=e._bin,n={};n.fmt=a.readUshort(r,t),t+=2;var o=a.readUshort(r,t);return t+=2,1==n.fmt&&(n.tab=a.readUshorts(r,t,o)),2==n.fmt&&(n.tab=a.readUshorts(r,t,3*o)),n},e._lctf.coverageIndex=function(r,t){var a=r.tab;if(1==r.fmt)return a.indexOf(t);if(2==r.fmt){var n=e._lctf.getInterval(a,t);if(-1!=n)return a[n+2]+(t-a[n])}return -1},e._lctf.readFeatureList=function(r,t){var a=e._bin,n=t,o=[],s=a.readUshort(r,t);t+=2;for(var i=0;i<s;i++){var h=a.readASCII(r,t,4);t+=4;var f=a.readUshort(r,t);t+=2;var d=e._lctf.readFeatureTable(r,n+f);d.tag=h.trim(),o.push(d);}return o},e._lctf.readFeatureTable=function(r,t){var a=e._bin,n=t,o={},s=a.readUshort(r,t);t+=2,s>0&&(o.featureParams=n+s);var i=a.readUshort(r,t);t+=2,o.tab=[];for(var h=0;h<i;h++)o.tab.push(a.readUshort(r,t+2*h));return o},e._lctf.readScriptList=function(r,t){var a=e._bin,n=t,o={},s=a.readUshort(r,t);t+=2;for(var i=0;i<s;i++){var h=a.readASCII(r,t,4);t+=4;var f=a.readUshort(r,t);t+=2,o[h.trim()]=e._lctf.readScriptTable(r,n+f);}return o},e._lctf.readScriptTable=function(r,t){var a=e._bin,n=t,o={},s=a.readUshort(r,t);t+=2,o.default=e._lctf.readLangSysTable(r,n+s);var i=a.readUshort(r,t);t+=2;for(var h=0;h<i;h++){var f=a.readASCII(r,t,4);t+=4;var d=a.readUshort(r,t);t+=2,o[f.trim()]=e._lctf.readLangSysTable(r,n+d);}return o},e._lctf.readLangSysTable=function(r,t){var a=e._bin,n={};a.readUshort(r,t),t+=2,n.reqFeature=a.readUshort(r,t),t+=2;var o=a.readUshort(r,t);return t+=2,n.features=a.readUshorts(r,t,o),n},e.CFF={},e.CFF.parse=function(r,t,a){var n=e._bin;(r=new Uint8Array(r.buffer,t,a))[t=0],r[++t],r[++t],r[++t],t++;var o=[];t=e.CFF.readIndex(r,t,o);for(var s=[],i=0;i<o.length-1;i++)s.push(n.readASCII(r,t+o[i],o[i+1]-o[i]));t+=o[o.length-1];var h=[];t=e.CFF.readIndex(r,t,h);var f=[];for(i=0;i<h.length-1;i++)f.push(e.CFF.readDict(r,t+h[i],t+h[i+1]));t+=h[h.length-1];var d=f[0],l=[];t=e.CFF.readIndex(r,t,l);var u=[];for(i=0;i<l.length-1;i++)u.push(n.readASCII(r,t+l[i],l[i+1]-l[i]));if(t+=l[l.length-1],e.CFF.readSubrs(r,t,d),d.CharStrings){t=d.CharStrings;l=[];t=e.CFF.readIndex(r,t,l);var v=[];for(i=0;i<l.length-1;i++)v.push(n.readBytes(r,t+l[i],l[i+1]-l[i]));d.CharStrings=v;}if(d.ROS){t=d.FDArray;var c=[];t=e.CFF.readIndex(r,t,c),d.FDArray=[];for(i=0;i<c.length-1;i++){var p=e.CFF.readDict(r,t+c[i],t+c[i+1]);e.CFF._readFDict(r,p,u),d.FDArray.push(p);}t+=c[c.length-1],t=d.FDSelect,d.FDSelect=[];var U=r[t];if(t++,3!=U)throw U;var g=n.readUshort(r,t);t+=2;for(i=0;i<g+1;i++)d.FDSelect.push(n.readUshort(r,t),r[t+2]),t+=3;}return d.Encoding&&(d.Encoding=e.CFF.readEncoding(r,d.Encoding,d.CharStrings.length)),d.charset&&(d.charset=e.CFF.readCharset(r,d.charset,d.CharStrings.length)),e.CFF._readFDict(r,d,u),d},e.CFF._readFDict=function(r,t,a){var n;for(var o in t.Private&&(n=t.Private[1],t.Private=e.CFF.readDict(r,n,n+t.Private[0]),t.Private.Subrs&&e.CFF.readSubrs(r,n+t.Private.Subrs,t.Private)),t)-1!=[\"FamilyName\",\"FontName\",\"FullName\",\"Notice\",\"version\",\"Copyright\"].indexOf(o)&&(t[o]=a[t[o]-426+35]);},e.CFF.readSubrs=function(r,t,a){var n=e._bin,o=[];t=e.CFF.readIndex(r,t,o);var s,i=o.length;s=i<1240?107:i<33900?1131:32768,a.Bias=s,a.Subrs=[];for(var h=0;h<o.length-1;h++)a.Subrs.push(n.readBytes(r,t+o[h],o[h+1]-o[h]));},e.CFF.tableSE=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,0,111,112,113,114,0,115,116,117,118,119,120,121,122,0,123,0,124,125,126,127,128,129,130,131,0,132,133,0,134,135,136,137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,138,0,139,0,0,0,0,140,141,142,143,0,0,0,0,0,144,0,0,0,145,0,0,146,147,148,149,0,0,0,0],e.CFF.glyphByUnicode=function(r,e){for(var t=0;t<r.charset.length;t++)if(r.charset[t]==e)return t;return -1},e.CFF.glyphBySE=function(r,t){return t<0||t>255?-1:e.CFF.glyphByUnicode(r,e.CFF.tableSE[t])},e.CFF.readEncoding=function(r,t,a){e._bin;var n=[\".notdef\"],o=r[t];if(t++,0!=o)throw \"error: unknown encoding format: \"+o;var s=r[t];t++;for(var i=0;i<s;i++)n.push(r[t+i]);return n},e.CFF.readCharset=function(r,t,a){var n=e._bin,o=[\".notdef\"],s=r[t];if(t++,0==s)for(var i=0;i<a;i++){var h=n.readUshort(r,t);t+=2,o.push(h);}else {if(1!=s&&2!=s)throw \"error: format: \"+s;for(;o.length<a;){h=n.readUshort(r,t);t+=2;var f=0;1==s?(f=r[t],t++):(f=n.readUshort(r,t),t+=2);for(i=0;i<=f;i++)o.push(h),h++;}}return o},e.CFF.readIndex=function(r,t,a){var n=e._bin,o=n.readUshort(r,t)+1,s=r[t+=2];if(t++,1==s)for(var i=0;i<o;i++)a.push(r[t+i]);else if(2==s)for(i=0;i<o;i++)a.push(n.readUshort(r,t+2*i));else if(3==s)for(i=0;i<o;i++)a.push(16777215&n.readUint(r,t+3*i-1));else if(1!=o)throw \"unsupported offset size: \"+s+\", count: \"+o;return (t+=o*s)-1},e.CFF.getCharString=function(r,t,a){var n=e._bin,o=r[t],s=r[t+1];r[t+2],r[t+3],r[t+4];var i=1,h=null,f=null;o<=20&&(h=o,i=1),12==o&&(h=100*o+s,i=2),21<=o&&o<=27&&(h=o,i=1),28==o&&(f=n.readShort(r,t+1),i=3),29<=o&&o<=31&&(h=o,i=1),32<=o&&o<=246&&(f=o-139,i=1),247<=o&&o<=250&&(f=256*(o-247)+s+108,i=2),251<=o&&o<=254&&(f=256*-(o-251)-s-108,i=2),255==o&&(f=n.readInt(r,t+1)/65535,i=5),a.val=null!=f?f:\"o\"+h,a.size=i;},e.CFF.readCharString=function(r,t,a){for(var n=t+a,o=e._bin,s=[];t<n;){var i=r[t],h=r[t+1];r[t+2],r[t+3],r[t+4];var f=1,d=null,l=null;i<=20&&(d=i,f=1),12==i&&(d=100*i+h,f=2),19!=i&&20!=i||(d=i,f=2),21<=i&&i<=27&&(d=i,f=1),28==i&&(l=o.readShort(r,t+1),f=3),29<=i&&i<=31&&(d=i,f=1),32<=i&&i<=246&&(l=i-139,f=1),247<=i&&i<=250&&(l=256*(i-247)+h+108,f=2),251<=i&&i<=254&&(l=256*-(i-251)-h-108,f=2),255==i&&(l=o.readInt(r,t+1)/65535,f=5),s.push(null!=l?l:\"o\"+d),t+=f;}return s},e.CFF.readDict=function(r,t,a){for(var n=e._bin,o={},s=[];t<a;){var i=r[t],h=r[t+1];r[t+2],r[t+3],r[t+4];var f=1,d=null,l=null;if(28==i&&(l=n.readShort(r,t+1),f=3),29==i&&(l=n.readInt(r,t+1),f=5),32<=i&&i<=246&&(l=i-139,f=1),247<=i&&i<=250&&(l=256*(i-247)+h+108,f=2),251<=i&&i<=254&&(l=256*-(i-251)-h-108,f=2),255==i)throw l=n.readInt(r,t+1)/65535,f=5,\"unknown number\";if(30==i){var u=[];for(f=1;;){var v=r[t+f];f++;var c=v>>4,p=15&v;if(15!=c&&u.push(c),15!=p&&u.push(p),15==p)break}for(var U=\"\",g=[0,1,2,3,4,5,6,7,8,9,\".\",\"e\",\"e-\",\"reserved\",\"-\",\"endOfNumber\"],S=0;S<u.length;S++)U+=g[u[S]];l=parseFloat(U);}if(i<=21)if(d=[\"version\",\"Notice\",\"FullName\",\"FamilyName\",\"Weight\",\"FontBBox\",\"BlueValues\",\"OtherBlues\",\"FamilyBlues\",\"FamilyOtherBlues\",\"StdHW\",\"StdVW\",\"escape\",\"UniqueID\",\"XUID\",\"charset\",\"Encoding\",\"CharStrings\",\"Private\",\"Subrs\",\"defaultWidthX\",\"nominalWidthX\"][i],f=1,12==i)d=[\"Copyright\",\"isFixedPitch\",\"ItalicAngle\",\"UnderlinePosition\",\"UnderlineThickness\",\"PaintType\",\"CharstringType\",\"FontMatrix\",\"StrokeWidth\",\"BlueScale\",\"BlueShift\",\"BlueFuzz\",\"StemSnapH\",\"StemSnapV\",\"ForceBold\",0,0,\"LanguageGroup\",\"ExpansionFactor\",\"initialRandomSeed\",\"SyntheticBase\",\"PostScript\",\"BaseFontName\",\"BaseFontBlend\",0,0,0,0,0,0,\"ROS\",\"CIDFontVersion\",\"CIDFontRevision\",\"CIDFontType\",\"CIDCount\",\"UIDBase\",\"FDArray\",\"FDSelect\",\"FontName\"][h],f=2;null!=d?(o[d]=1==s.length?s[0]:s,s=[]):s.push(l),t+=f;}return o},e.cmap={},e.cmap.parse=function(r,t,a){r=new Uint8Array(r.buffer,t,a),t=0;var n=e._bin,o={};n.readUshort(r,t),t+=2;var s=n.readUshort(r,t);t+=2;var i=[];o.tables=[];for(var h=0;h<s;h++){var f=n.readUshort(r,t);t+=2;var d=n.readUshort(r,t);t+=2;var l=n.readUint(r,t);t+=4;var u=\"p\"+f+\"e\"+d,v=i.indexOf(l);if(-1==v){var c;v=o.tables.length,i.push(l);var p=n.readUshort(r,l);0==p?c=e.cmap.parse0(r,l):4==p?c=e.cmap.parse4(r,l):6==p?c=e.cmap.parse6(r,l):12==p?c=e.cmap.parse12(r,l):console.debug(\"unknown format: \"+p,f,d,l),o.tables.push(c);}if(null!=o[u])throw \"multiple tables for one platform+encoding\";o[u]=v;}return o},e.cmap.parse0=function(r,t){var a=e._bin,n={};n.format=a.readUshort(r,t),t+=2;var o=a.readUshort(r,t);t+=2,a.readUshort(r,t),t+=2,n.map=[];for(var s=0;s<o-6;s++)n.map.push(r[t+s]);return n},e.cmap.parse4=function(r,t){var a=e._bin,n=t,o={};o.format=a.readUshort(r,t),t+=2;var s=a.readUshort(r,t);t+=2,a.readUshort(r,t),t+=2;var i=a.readUshort(r,t);t+=2;var h=i/2;o.searchRange=a.readUshort(r,t),t+=2,o.entrySelector=a.readUshort(r,t),t+=2,o.rangeShift=a.readUshort(r,t),t+=2,o.endCount=a.readUshorts(r,t,h),t+=2*h,t+=2,o.startCount=a.readUshorts(r,t,h),t+=2*h,o.idDelta=[];for(var f=0;f<h;f++)o.idDelta.push(a.readShort(r,t)),t+=2;for(o.idRangeOffset=a.readUshorts(r,t,h),t+=2*h,o.glyphIdArray=[];t<n+s;)o.glyphIdArray.push(a.readUshort(r,t)),t+=2;return o},e.cmap.parse6=function(r,t){var a=e._bin,n={};n.format=a.readUshort(r,t),t+=2,a.readUshort(r,t),t+=2,a.readUshort(r,t),t+=2,n.firstCode=a.readUshort(r,t),t+=2;var o=a.readUshort(r,t);t+=2,n.glyphIdArray=[];for(var s=0;s<o;s++)n.glyphIdArray.push(a.readUshort(r,t)),t+=2;return n},e.cmap.parse12=function(r,t){var a=e._bin,n={};n.format=a.readUshort(r,t),t+=2,t+=2,a.readUint(r,t),t+=4,a.readUint(r,t),t+=4;var o=a.readUint(r,t);t+=4,n.groups=[];for(var s=0;s<o;s++){var i=t+12*s,h=a.readUint(r,i+0),f=a.readUint(r,i+4),d=a.readUint(r,i+8);n.groups.push([h,f,d]);}return n},e.glyf={},e.glyf.parse=function(r,e,t,a){for(var n=[],o=0;o<a.maxp.numGlyphs;o++)n.push(null);return n},e.glyf._parseGlyf=function(r,t){var a=e._bin,n=r._data,o=e._tabOffset(n,\"glyf\",r._offset)+r.loca[t];if(r.loca[t]==r.loca[t+1])return null;var s={};if(s.noc=a.readShort(n,o),o+=2,s.xMin=a.readShort(n,o),o+=2,s.yMin=a.readShort(n,o),o+=2,s.xMax=a.readShort(n,o),o+=2,s.yMax=a.readShort(n,o),o+=2,s.xMin>=s.xMax||s.yMin>=s.yMax)return null;if(s.noc>0){s.endPts=[];for(var i=0;i<s.noc;i++)s.endPts.push(a.readUshort(n,o)),o+=2;var h=a.readUshort(n,o);if(o+=2,n.length-o<h)return null;s.instructions=a.readBytes(n,o,h),o+=h;var f=s.endPts[s.noc-1]+1;s.flags=[];for(i=0;i<f;i++){var d=n[o];if(o++,s.flags.push(d),0!=(8&d)){var l=n[o];o++;for(var u=0;u<l;u++)s.flags.push(d),i++;}}s.xs=[];for(i=0;i<f;i++){var v=0!=(2&s.flags[i]),c=0!=(16&s.flags[i]);v?(s.xs.push(c?n[o]:-n[o]),o++):c?s.xs.push(0):(s.xs.push(a.readShort(n,o)),o+=2);}s.ys=[];for(i=0;i<f;i++){v=0!=(4&s.flags[i]),c=0!=(32&s.flags[i]);v?(s.ys.push(c?n[o]:-n[o]),o++):c?s.ys.push(0):(s.ys.push(a.readShort(n,o)),o+=2);}var p=0,U=0;for(i=0;i<f;i++)p+=s.xs[i],U+=s.ys[i],s.xs[i]=p,s.ys[i]=U;}else {var g;s.parts=[];do{g=a.readUshort(n,o),o+=2;var S={m:{a:1,b:0,c:0,d:1,tx:0,ty:0},p1:-1,p2:-1};if(s.parts.push(S),S.glyphIndex=a.readUshort(n,o),o+=2,1&g){var m=a.readShort(n,o);o+=2;var b=a.readShort(n,o);o+=2;}else {m=a.readInt8(n,o);o++;b=a.readInt8(n,o);o++;}2&g?(S.m.tx=m,S.m.ty=b):(S.p1=m,S.p2=b),8&g?(S.m.a=S.m.d=a.readF2dot14(n,o),o+=2):64&g?(S.m.a=a.readF2dot14(n,o),o+=2,S.m.d=a.readF2dot14(n,o),o+=2):128&g&&(S.m.a=a.readF2dot14(n,o),o+=2,S.m.b=a.readF2dot14(n,o),o+=2,S.m.c=a.readF2dot14(n,o),o+=2,S.m.d=a.readF2dot14(n,o),o+=2);}while(32&g);if(256&g){var y=a.readUshort(n,o);o+=2,s.instr=[];for(i=0;i<y;i++)s.instr.push(n[o]),o++;}}return s},e.GPOS={},e.GPOS.parse=function(r,t,a,n){return e._lctf.parse(r,t,a,n,e.GPOS.subt)},e.GPOS.subt=function(r,t,a,n){var o=e._bin,s=a,i={};if(i.fmt=o.readUshort(r,a),a+=2,1==t||2==t||3==t||7==t||8==t&&i.fmt<=2){var h=o.readUshort(r,a);a+=2,i.coverage=e._lctf.readCoverage(r,h+s);}if(1==t&&1==i.fmt){var f=o.readUshort(r,a);a+=2;var d=e._lctf.numOfOnes(f);0!=f&&(i.pos=e.GPOS.readValueRecord(r,a,f));}else if(2==t&&i.fmt>=1&&i.fmt<=2){f=o.readUshort(r,a);a+=2;var l=o.readUshort(r,a);a+=2;d=e._lctf.numOfOnes(f);var u=e._lctf.numOfOnes(l);if(1==i.fmt){i.pairsets=[];var v=o.readUshort(r,a);a+=2;for(var c=0;c<v;c++){var p=s+o.readUshort(r,a);a+=2;var U=o.readUshort(r,p);p+=2;for(var g=[],S=0;S<U;S++){var m=o.readUshort(r,p);p+=2,0!=f&&(x=e.GPOS.readValueRecord(r,p,f),p+=2*d),0!=l&&(P=e.GPOS.readValueRecord(r,p,l),p+=2*u),g.push({gid2:m,val1:x,val2:P});}i.pairsets.push(g);}}if(2==i.fmt){var b=o.readUshort(r,a);a+=2;var y=o.readUshort(r,a);a+=2;var F=o.readUshort(r,a);a+=2;var _=o.readUshort(r,a);a+=2,i.classDef1=e._lctf.readClassDef(r,s+b),i.classDef2=e._lctf.readClassDef(r,s+y),i.matrix=[];for(c=0;c<F;c++){var C=[];for(S=0;S<_;S++){var x=null,P=null;0!=f&&(x=e.GPOS.readValueRecord(r,a,f),a+=2*d),0!=l&&(P=e.GPOS.readValueRecord(r,a,l),a+=2*u),C.push({val1:x,val2:P});}i.matrix.push(C);}}}else {if(9==t&&1==i.fmt){var I=o.readUshort(r,a);a+=2;var w=o.readUint(r,a);if(a+=4,9==n.ltype)n.ltype=I;else if(n.ltype!=I)throw \"invalid extension substitution\";return e.GPOS.subt(r,n.ltype,s+w)}console.debug(\"unsupported GPOS table LookupType\",t,\"format\",i.fmt);}return i},e.GPOS.readValueRecord=function(r,t,a){var n=e._bin,o=[];return o.push(1&a?n.readShort(r,t):0),t+=1&a?2:0,o.push(2&a?n.readShort(r,t):0),t+=2&a?2:0,o.push(4&a?n.readShort(r,t):0),t+=4&a?2:0,o.push(8&a?n.readShort(r,t):0),t+=8&a?2:0,o},e.GSUB={},e.GSUB.parse=function(r,t,a,n){return e._lctf.parse(r,t,a,n,e.GSUB.subt)},e.GSUB.subt=function(r,t,a,n){var o=e._bin,s=a,i={};if(i.fmt=o.readUshort(r,a),a+=2,1!=t&&4!=t&&5!=t&&6!=t)return null;if(1==t||4==t||5==t&&i.fmt<=2||6==t&&i.fmt<=2){var h=o.readUshort(r,a);a+=2,i.coverage=e._lctf.readCoverage(r,s+h);}if(1==t&&i.fmt>=1&&i.fmt<=2){if(1==i.fmt)i.delta=o.readShort(r,a),a+=2;else if(2==i.fmt){var f=o.readUshort(r,a);a+=2,i.newg=o.readUshorts(r,a,f),a+=2*i.newg.length;}}else if(4==t){i.vals=[];f=o.readUshort(r,a);a+=2;for(var d=0;d<f;d++){var l=o.readUshort(r,a);a+=2,i.vals.push(e.GSUB.readLigatureSet(r,s+l));}}else if(5==t&&2==i.fmt){if(2==i.fmt){var u=o.readUshort(r,a);a+=2,i.cDef=e._lctf.readClassDef(r,s+u),i.scset=[];var v=o.readUshort(r,a);a+=2;for(d=0;d<v;d++){var c=o.readUshort(r,a);a+=2,i.scset.push(0==c?null:e.GSUB.readSubClassSet(r,s+c));}}}else if(6==t&&3==i.fmt){if(3==i.fmt){for(d=0;d<3;d++){f=o.readUshort(r,a);a+=2;for(var p=[],U=0;U<f;U++)p.push(e._lctf.readCoverage(r,s+o.readUshort(r,a+2*U)));a+=2*f,0==d&&(i.backCvg=p),1==d&&(i.inptCvg=p),2==d&&(i.ahedCvg=p);}f=o.readUshort(r,a);a+=2,i.lookupRec=e.GSUB.readSubstLookupRecords(r,a,f);}}else {if(7==t&&1==i.fmt){var g=o.readUshort(r,a);a+=2;var S=o.readUint(r,a);if(a+=4,9==n.ltype)n.ltype=g;else if(n.ltype!=g)throw \"invalid extension substitution\";return e.GSUB.subt(r,n.ltype,s+S)}console.debug(\"unsupported GSUB table LookupType\",t,\"format\",i.fmt);}return i},e.GSUB.readSubClassSet=function(r,t){var a=e._bin.readUshort,n=t,o=[],s=a(r,t);t+=2;for(var i=0;i<s;i++){var h=a(r,t);t+=2,o.push(e.GSUB.readSubClassRule(r,n+h));}return o},e.GSUB.readSubClassRule=function(r,t){var a=e._bin.readUshort,n={},o=a(r,t),s=a(r,t+=2);t+=2,n.input=[];for(var i=0;i<o-1;i++)n.input.push(a(r,t)),t+=2;return n.substLookupRecords=e.GSUB.readSubstLookupRecords(r,t,s),n},e.GSUB.readSubstLookupRecords=function(r,t,a){for(var n=e._bin.readUshort,o=[],s=0;s<a;s++)o.push(n(r,t),n(r,t+2)),t+=4;return o},e.GSUB.readChainSubClassSet=function(r,t){var a=e._bin,n=t,o=[],s=a.readUshort(r,t);t+=2;for(var i=0;i<s;i++){var h=a.readUshort(r,t);t+=2,o.push(e.GSUB.readChainSubClassRule(r,n+h));}return o},e.GSUB.readChainSubClassRule=function(r,t){for(var a=e._bin,n={},o=[\"backtrack\",\"input\",\"lookahead\"],s=0;s<o.length;s++){var i=a.readUshort(r,t);t+=2,1==s&&i--,n[o[s]]=a.readUshorts(r,t,i),t+=2*n[o[s]].length;}i=a.readUshort(r,t);return t+=2,n.subst=a.readUshorts(r,t,2*i),t+=2*n.subst.length,n},e.GSUB.readLigatureSet=function(r,t){var a=e._bin,n=t,o=[],s=a.readUshort(r,t);t+=2;for(var i=0;i<s;i++){var h=a.readUshort(r,t);t+=2,o.push(e.GSUB.readLigature(r,n+h));}return o},e.GSUB.readLigature=function(r,t){var a=e._bin,n={chain:[]};n.nglyph=a.readUshort(r,t),t+=2;var o=a.readUshort(r,t);t+=2;for(var s=0;s<o-1;s++)n.chain.push(a.readUshort(r,t)),t+=2;return n},e.head={},e.head.parse=function(r,t,a){var n=e._bin,o={};return n.readFixed(r,t),t+=4,o.fontRevision=n.readFixed(r,t),t+=4,n.readUint(r,t),t+=4,n.readUint(r,t),t+=4,o.flags=n.readUshort(r,t),t+=2,o.unitsPerEm=n.readUshort(r,t),t+=2,o.created=n.readUint64(r,t),t+=8,o.modified=n.readUint64(r,t),t+=8,o.xMin=n.readShort(r,t),t+=2,o.yMin=n.readShort(r,t),t+=2,o.xMax=n.readShort(r,t),t+=2,o.yMax=n.readShort(r,t),t+=2,o.macStyle=n.readUshort(r,t),t+=2,o.lowestRecPPEM=n.readUshort(r,t),t+=2,o.fontDirectionHint=n.readShort(r,t),t+=2,o.indexToLocFormat=n.readShort(r,t),t+=2,o.glyphDataFormat=n.readShort(r,t),t+=2,o},e.hhea={},e.hhea.parse=function(r,t,a){var n=e._bin,o={};return n.readFixed(r,t),t+=4,o.ascender=n.readShort(r,t),t+=2,o.descender=n.readShort(r,t),t+=2,o.lineGap=n.readShort(r,t),t+=2,o.advanceWidthMax=n.readUshort(r,t),t+=2,o.minLeftSideBearing=n.readShort(r,t),t+=2,o.minRightSideBearing=n.readShort(r,t),t+=2,o.xMaxExtent=n.readShort(r,t),t+=2,o.caretSlopeRise=n.readShort(r,t),t+=2,o.caretSlopeRun=n.readShort(r,t),t+=2,o.caretOffset=n.readShort(r,t),t+=2,t+=8,o.metricDataFormat=n.readShort(r,t),t+=2,o.numberOfHMetrics=n.readUshort(r,t),t+=2,o},e.hmtx={},e.hmtx.parse=function(r,t,a,n){for(var o=e._bin,s={aWidth:[],lsBearing:[]},i=0,h=0,f=0;f<n.maxp.numGlyphs;f++)f<n.hhea.numberOfHMetrics&&(i=o.readUshort(r,t),t+=2,h=o.readShort(r,t),t+=2),s.aWidth.push(i),s.lsBearing.push(h);return s},e.kern={},e.kern.parse=function(r,t,a,n){var o=e._bin,s=o.readUshort(r,t);if(t+=2,1==s)return e.kern.parseV1(r,t-2,a,n);var i=o.readUshort(r,t);t+=2;for(var h={glyph1:[],rval:[]},f=0;f<i;f++){t+=2;a=o.readUshort(r,t);t+=2;var d=o.readUshort(r,t);t+=2;var l=d>>>8;if(0!=(l&=15))throw \"unknown kern table format: \"+l;t=e.kern.readFormat0(r,t,h);}return h},e.kern.parseV1=function(r,t,a,n){var o=e._bin;o.readFixed(r,t),t+=4;var s=o.readUint(r,t);t+=4;for(var i={glyph1:[],rval:[]},h=0;h<s;h++){o.readUint(r,t),t+=4;var f=o.readUshort(r,t);t+=2,o.readUshort(r,t),t+=2;var d=f>>>8;if(0!=(d&=15))throw \"unknown kern table format: \"+d;t=e.kern.readFormat0(r,t,i);}return i},e.kern.readFormat0=function(r,t,a){var n=e._bin,o=-1,s=n.readUshort(r,t);t+=2,n.readUshort(r,t),t+=2,n.readUshort(r,t),t+=2,n.readUshort(r,t),t+=2;for(var i=0;i<s;i++){var h=n.readUshort(r,t);t+=2;var f=n.readUshort(r,t);t+=2;var d=n.readShort(r,t);t+=2,h!=o&&(a.glyph1.push(h),a.rval.push({glyph2:[],vals:[]}));var l=a.rval[a.rval.length-1];l.glyph2.push(f),l.vals.push(d),o=h;}return t},e.loca={},e.loca.parse=function(r,t,a,n){var o=e._bin,s=[],i=n.head.indexToLocFormat,h=n.maxp.numGlyphs+1;if(0==i)for(var f=0;f<h;f++)s.push(o.readUshort(r,t+(f<<1))<<1);if(1==i)for(f=0;f<h;f++)s.push(o.readUint(r,t+(f<<2)));return s},e.maxp={},e.maxp.parse=function(r,t,a){var n=e._bin,o={},s=n.readUint(r,t);return t+=4,o.numGlyphs=n.readUshort(r,t),t+=2,65536==s&&(o.maxPoints=n.readUshort(r,t),t+=2,o.maxContours=n.readUshort(r,t),t+=2,o.maxCompositePoints=n.readUshort(r,t),t+=2,o.maxCompositeContours=n.readUshort(r,t),t+=2,o.maxZones=n.readUshort(r,t),t+=2,o.maxTwilightPoints=n.readUshort(r,t),t+=2,o.maxStorage=n.readUshort(r,t),t+=2,o.maxFunctionDefs=n.readUshort(r,t),t+=2,o.maxInstructionDefs=n.readUshort(r,t),t+=2,o.maxStackElements=n.readUshort(r,t),t+=2,o.maxSizeOfInstructions=n.readUshort(r,t),t+=2,o.maxComponentElements=n.readUshort(r,t),t+=2,o.maxComponentDepth=n.readUshort(r,t),t+=2),o},e.name={},e.name.parse=function(r,t,a){var n=e._bin,o={};n.readUshort(r,t),t+=2;var s=n.readUshort(r,t);t+=2,n.readUshort(r,t);for(var i,h=[\"copyright\",\"fontFamily\",\"fontSubfamily\",\"ID\",\"fullName\",\"version\",\"postScriptName\",\"trademark\",\"manufacturer\",\"designer\",\"description\",\"urlVendor\",\"urlDesigner\",\"licence\",\"licenceURL\",\"---\",\"typoFamilyName\",\"typoSubfamilyName\",\"compatibleFull\",\"sampleText\",\"postScriptCID\",\"wwsFamilyName\",\"wwsSubfamilyName\",\"lightPalette\",\"darkPalette\"],f=t+=2,d=0;d<s;d++){var l=n.readUshort(r,t);t+=2;var u=n.readUshort(r,t);t+=2;var v=n.readUshort(r,t);t+=2;var c=n.readUshort(r,t);t+=2;var p=n.readUshort(r,t);t+=2;var U=n.readUshort(r,t);t+=2;var g,S=h[c],m=f+12*s+U;if(0==l)g=n.readUnicode(r,m,p/2);else if(3==l&&0==u)g=n.readUnicode(r,m,p/2);else if(0==u)g=n.readASCII(r,m,p);else if(1==u)g=n.readUnicode(r,m,p/2);else if(3==u)g=n.readUnicode(r,m,p/2);else {if(1!=l)throw \"unknown encoding \"+u+\", platformID: \"+l;g=n.readASCII(r,m,p),console.debug(\"reading unknown MAC encoding \"+u+\" as ASCII\");}var b=\"p\"+l+\",\"+v.toString(16);null==o[b]&&(o[b]={}),o[b][void 0!==S?S:c]=g,o[b]._lang=v;}for(var y in o)if(null!=o[y].postScriptName&&1033==o[y]._lang)return o[y];for(var y in o)if(null!=o[y].postScriptName&&0==o[y]._lang)return o[y];for(var y in o)if(null!=o[y].postScriptName&&3084==o[y]._lang)return o[y];for(var y in o)if(null!=o[y].postScriptName)return o[y];for(var y in o){i=y;break}return console.debug(\"returning name table with languageID \"+o[i]._lang),o[i]},e[\"OS/2\"]={},e[\"OS/2\"].parse=function(r,t,a){var n=e._bin.readUshort(r,t);t+=2;var o={};if(0==n)e[\"OS/2\"].version0(r,t,o);else if(1==n)e[\"OS/2\"].version1(r,t,o);else if(2==n||3==n||4==n)e[\"OS/2\"].version2(r,t,o);else {if(5!=n)throw \"unknown OS/2 table version: \"+n;e[\"OS/2\"].version5(r,t,o);}return o},e[\"OS/2\"].version0=function(r,t,a){var n=e._bin;return a.xAvgCharWidth=n.readShort(r,t),t+=2,a.usWeightClass=n.readUshort(r,t),t+=2,a.usWidthClass=n.readUshort(r,t),t+=2,a.fsType=n.readUshort(r,t),t+=2,a.ySubscriptXSize=n.readShort(r,t),t+=2,a.ySubscriptYSize=n.readShort(r,t),t+=2,a.ySubscriptXOffset=n.readShort(r,t),t+=2,a.ySubscriptYOffset=n.readShort(r,t),t+=2,a.ySuperscriptXSize=n.readShort(r,t),t+=2,a.ySuperscriptYSize=n.readShort(r,t),t+=2,a.ySuperscriptXOffset=n.readShort(r,t),t+=2,a.ySuperscriptYOffset=n.readShort(r,t),t+=2,a.yStrikeoutSize=n.readShort(r,t),t+=2,a.yStrikeoutPosition=n.readShort(r,t),t+=2,a.sFamilyClass=n.readShort(r,t),t+=2,a.panose=n.readBytes(r,t,10),t+=10,a.ulUnicodeRange1=n.readUint(r,t),t+=4,a.ulUnicodeRange2=n.readUint(r,t),t+=4,a.ulUnicodeRange3=n.readUint(r,t),t+=4,a.ulUnicodeRange4=n.readUint(r,t),t+=4,a.achVendID=[n.readInt8(r,t),n.readInt8(r,t+1),n.readInt8(r,t+2),n.readInt8(r,t+3)],t+=4,a.fsSelection=n.readUshort(r,t),t+=2,a.usFirstCharIndex=n.readUshort(r,t),t+=2,a.usLastCharIndex=n.readUshort(r,t),t+=2,a.sTypoAscender=n.readShort(r,t),t+=2,a.sTypoDescender=n.readShort(r,t),t+=2,a.sTypoLineGap=n.readShort(r,t),t+=2,a.usWinAscent=n.readUshort(r,t),t+=2,a.usWinDescent=n.readUshort(r,t),t+=2},e[\"OS/2\"].version1=function(r,t,a){var n=e._bin;return t=e[\"OS/2\"].version0(r,t,a),a.ulCodePageRange1=n.readUint(r,t),t+=4,a.ulCodePageRange2=n.readUint(r,t),t+=4},e[\"OS/2\"].version2=function(r,t,a){var n=e._bin;return t=e[\"OS/2\"].version1(r,t,a),a.sxHeight=n.readShort(r,t),t+=2,a.sCapHeight=n.readShort(r,t),t+=2,a.usDefault=n.readUshort(r,t),t+=2,a.usBreak=n.readUshort(r,t),t+=2,a.usMaxContext=n.readUshort(r,t),t+=2},e[\"OS/2\"].version5=function(r,t,a){var n=e._bin;return t=e[\"OS/2\"].version2(r,t,a),a.usLowerOpticalPointSize=n.readUshort(r,t),t+=2,a.usUpperOpticalPointSize=n.readUshort(r,t),t+=2},e.post={},e.post.parse=function(r,t,a){var n=e._bin,o={};return o.version=n.readFixed(r,t),t+=4,o.italicAngle=n.readFixed(r,t),t+=4,o.underlinePosition=n.readShort(r,t),t+=2,o.underlineThickness=n.readShort(r,t),t+=2,o},null==e&&(e={}),null==e.U&&(e.U={}),e.U.codeToGlyph=function(r,e){var t=r.cmap,a=-1;if(null!=t.p0e4?a=t.p0e4:null!=t.p3e1?a=t.p3e1:null!=t.p1e0?a=t.p1e0:null!=t.p0e3&&(a=t.p0e3),-1==a)throw \"no familiar platform and encoding!\";var n=t.tables[a];if(0==n.format)return e>=n.map.length?0:n.map[e];if(4==n.format){for(var o=-1,s=0;s<n.endCount.length;s++)if(e<=n.endCount[s]){o=s;break}if(-1==o)return 0;if(n.startCount[o]>e)return 0;return 65535&(0!=n.idRangeOffset[o]?n.glyphIdArray[e-n.startCount[o]+(n.idRangeOffset[o]>>1)-(n.idRangeOffset.length-o)]:e+n.idDelta[o])}if(12==n.format){if(e>n.groups[n.groups.length-1][1])return 0;for(s=0;s<n.groups.length;s++){var i=n.groups[s];if(i[0]<=e&&e<=i[1])return i[2]+(e-i[0])}return 0}throw \"unknown cmap table format \"+n.format},e.U.glyphToPath=function(r,t){var a={cmds:[],crds:[]};if(r.SVG&&r.SVG.entries[t]){var n=r.SVG.entries[t];return null==n?a:(\"string\"==typeof n&&(n=e.SVG.toPath(n),r.SVG.entries[t]=n),n)}if(r.CFF){var o={x:0,y:0,stack:[],nStems:0,haveWidth:!1,width:r.CFF.Private?r.CFF.Private.defaultWidthX:0,open:!1},s=r.CFF,i=r.CFF.Private;if(s.ROS){for(var h=0;s.FDSelect[h+2]<=t;)h+=2;i=s.FDArray[s.FDSelect[h+1]].Private;}e.U._drawCFF(r.CFF.CharStrings[t],o,s,i,a);}else r.glyf&&e.U._drawGlyf(t,r,a);return a},e.U._drawGlyf=function(r,t,a){var n=t.glyf[r];null==n&&(n=t.glyf[r]=e.glyf._parseGlyf(t,r)),null!=n&&(n.noc>-1?e.U._simpleGlyph(n,a):e.U._compoGlyph(n,t,a));},e.U._simpleGlyph=function(r,t){for(var a=0;a<r.noc;a++){for(var n=0==a?0:r.endPts[a-1]+1,o=r.endPts[a],s=n;s<=o;s++){var i=s==n?o:s-1,h=s==o?n:s+1,f=1&r.flags[s],d=1&r.flags[i],l=1&r.flags[h],u=r.xs[s],v=r.ys[s];if(s==n)if(f){if(!d){e.U.P.moveTo(t,u,v);continue}e.U.P.moveTo(t,r.xs[i],r.ys[i]);}else d?e.U.P.moveTo(t,r.xs[i],r.ys[i]):e.U.P.moveTo(t,(r.xs[i]+u)/2,(r.ys[i]+v)/2);f?d&&e.U.P.lineTo(t,u,v):l?e.U.P.qcurveTo(t,u,v,r.xs[h],r.ys[h]):e.U.P.qcurveTo(t,u,v,(u+r.xs[h])/2,(v+r.ys[h])/2);}e.U.P.closePath(t);}},e.U._compoGlyph=function(r,t,a){for(var n=0;n<r.parts.length;n++){var o={cmds:[],crds:[]},s=r.parts[n];e.U._drawGlyf(s.glyphIndex,t,o);for(var i=s.m,h=0;h<o.crds.length;h+=2){var f=o.crds[h],d=o.crds[h+1];a.crds.push(f*i.a+d*i.b+i.tx),a.crds.push(f*i.c+d*i.d+i.ty);}for(h=0;h<o.cmds.length;h++)a.cmds.push(o.cmds[h]);}},e.U._getGlyphClass=function(r,t){var a=e._lctf.getInterval(t,r);return -1==a?0:t[a+2]},e.U.getPairAdjustment=function(r,t,a){var n=0,o=!1;if(r.GPOS)for(var s=r.GPOS,i=s.lookupList,h=s.featureList,f=[],d=0;d<h.length;d++){var l=h[d];if(\"kern\"==l.tag){o=!0;for(var u=0;u<l.tab.length;u++)if(!f[l.tab[u]]){f[l.tab[u]]=!0;for(var v=i[l.tab[u]],c=0;c<v.tabs.length;c++)if(null!=v.tabs[c]){var p,U=v.tabs[c];if(!U.coverage||-1!=(p=e._lctf.coverageIndex(U.coverage,t)))if(1==v.ltype);else if(2==v.ltype){var g;if(1==U.fmt){var S=U.pairsets[p];for(d=0;d<S.length;d++)S[d].gid2==a&&(g=S[d]);}else if(2==U.fmt){var m=e.U._getGlyphClass(t,U.classDef1),b=e.U._getGlyphClass(a,U.classDef2);g=U.matrix[m][b];}g&&g.val1&&g.val1[2]&&(n+=g.val1[2]),g&&g.val2&&g.val2[0]&&(n+=g.val2[0]);}}}}}if(r.kern&&!o){var y=r.kern.glyph1.indexOf(t);if(-1!=y){var F=r.kern.rval[y].glyph2.indexOf(a);-1!=F&&(n+=r.kern.rval[y].vals[F]);}}return n},e.U._applySubs=function(r,t,a,n){for(var o=r.length-t-1,s=0;s<a.tabs.length;s++)if(null!=a.tabs[s]){var i,h=a.tabs[s];if(!h.coverage||-1!=(i=e._lctf.coverageIndex(h.coverage,r[t])))if(1==a.ltype)r[t],1==h.fmt?r[t]=r[t]+h.delta:r[t]=h.newg[i];else if(4==a.ltype)for(var f=h.vals[i],d=0;d<f.length;d++){var l=f[d],u=l.chain.length;if(!(u>o)){for(var v=!0,c=0,p=0;p<u;p++){for(;-1==r[t+c+(1+p)];)c++;l.chain[p]!=r[t+c+(1+p)]&&(v=!1);}if(v){r[t]=l.nglyph;for(p=0;p<u+c;p++)r[t+p+1]=-1;break}}}else if(5==a.ltype&&2==h.fmt)for(var U=e._lctf.getInterval(h.cDef,r[t]),g=h.cDef[U+2],S=h.scset[g],m=0;m<S.length;m++){var b=S[m],y=b.input;if(!(y.length>o)){for(v=!0,p=0;p<y.length;p++){var F=e._lctf.getInterval(h.cDef,r[t+1+p]);if(-1==U&&h.cDef[F+2]!=y[p]){v=!1;break}}if(v){var _=b.substLookupRecords;for(d=0;d<_.length;d+=2)_[d],_[d+1];}}}else if(6==a.ltype&&3==h.fmt){if(!e.U._glsCovered(r,h.backCvg,t-h.backCvg.length))continue;if(!e.U._glsCovered(r,h.inptCvg,t))continue;if(!e.U._glsCovered(r,h.ahedCvg,t+h.inptCvg.length))continue;var C=h.lookupRec;for(m=0;m<C.length;m+=2){U=C[m];var x=n[C[m+1]];e.U._applySubs(r,t+U,x,n);}}}},e.U._glsCovered=function(r,t,a){for(var n=0;n<t.length;n++){if(-1==e._lctf.coverageIndex(t[n],r[a+n]))return !1}return !0},e.U.glyphsToPath=function(r,t,a){for(var n={cmds:[],crds:[]},o=0,s=0;s<t.length;s++){var i=t[s];if(-1!=i){for(var h=s<t.length-1&&-1!=t[s+1]?t[s+1]:0,f=e.U.glyphToPath(r,i),d=0;d<f.crds.length;d+=2)n.crds.push(f.crds[d]+o),n.crds.push(f.crds[d+1]);a&&n.cmds.push(a);for(d=0;d<f.cmds.length;d++)n.cmds.push(f.cmds[d]);a&&n.cmds.push(\"X\"),o+=r.hmtx.aWidth[i],s<t.length-1&&(o+=e.U.getPairAdjustment(r,i,h));}}return n},e.U.P={},e.U.P.moveTo=function(r,e,t){r.cmds.push(\"M\"),r.crds.push(e,t);},e.U.P.lineTo=function(r,e,t){r.cmds.push(\"L\"),r.crds.push(e,t);},e.U.P.curveTo=function(r,e,t,a,n,o,s){r.cmds.push(\"C\"),r.crds.push(e,t,a,n,o,s);},e.U.P.qcurveTo=function(r,e,t,a,n){r.cmds.push(\"Q\"),r.crds.push(e,t,a,n);},e.U.P.closePath=function(r){r.cmds.push(\"Z\");},e.U._drawCFF=function(r,t,a,n,o){for(var s=t.stack,i=t.nStems,h=t.haveWidth,f=t.width,d=t.open,l=0,u=t.x,v=t.y,c=0,p=0,U=0,g=0,S=0,m=0,b=0,y=0,F=0,_=0,C={val:0,size:0};l<r.length;){e.CFF.getCharString(r,l,C);var x=C.val;if(l+=C.size,\"o1\"==x||\"o18\"==x)s.length%2!=0&&!h&&(f=s.shift()+n.nominalWidthX),i+=s.length>>1,s.length=0,h=!0;else if(\"o3\"==x||\"o23\"==x){s.length%2!=0&&!h&&(f=s.shift()+n.nominalWidthX),i+=s.length>>1,s.length=0,h=!0;}else if(\"o4\"==x)s.length>1&&!h&&(f=s.shift()+n.nominalWidthX,h=!0),d&&e.U.P.closePath(o),v+=s.pop(),e.U.P.moveTo(o,u,v),d=!0;else if(\"o5\"==x)for(;s.length>0;)u+=s.shift(),v+=s.shift(),e.U.P.lineTo(o,u,v);else if(\"o6\"==x||\"o7\"==x)for(var P=s.length,I=\"o6\"==x,w=0;w<P;w++){var O=s.shift();I?u+=O:v+=O,I=!I,e.U.P.lineTo(o,u,v);}else if(\"o8\"==x||\"o24\"==x){P=s.length;for(var T=0;T+6<=P;)c=u+s.shift(),p=v+s.shift(),U=c+s.shift(),g=p+s.shift(),u=U+s.shift(),v=g+s.shift(),e.U.P.curveTo(o,c,p,U,g,u,v),T+=6;\"o24\"==x&&(u+=s.shift(),v+=s.shift(),e.U.P.lineTo(o,u,v));}else {if(\"o11\"==x)break;if(\"o1234\"==x||\"o1235\"==x||\"o1236\"==x||\"o1237\"==x)\"o1234\"==x&&(p=v,U=(c=u+s.shift())+s.shift(),_=g=p+s.shift(),m=g,y=v,u=(b=(S=(F=U+s.shift())+s.shift())+s.shift())+s.shift(),e.U.P.curveTo(o,c,p,U,g,F,_),e.U.P.curveTo(o,S,m,b,y,u,v)),\"o1235\"==x&&(c=u+s.shift(),p=v+s.shift(),U=c+s.shift(),g=p+s.shift(),F=U+s.shift(),_=g+s.shift(),S=F+s.shift(),m=_+s.shift(),b=S+s.shift(),y=m+s.shift(),u=b+s.shift(),v=y+s.shift(),s.shift(),e.U.P.curveTo(o,c,p,U,g,F,_),e.U.P.curveTo(o,S,m,b,y,u,v)),\"o1236\"==x&&(c=u+s.shift(),p=v+s.shift(),U=c+s.shift(),_=g=p+s.shift(),m=g,b=(S=(F=U+s.shift())+s.shift())+s.shift(),y=m+s.shift(),u=b+s.shift(),e.U.P.curveTo(o,c,p,U,g,F,_),e.U.P.curveTo(o,S,m,b,y,u,v)),\"o1237\"==x&&(c=u+s.shift(),p=v+s.shift(),U=c+s.shift(),g=p+s.shift(),F=U+s.shift(),_=g+s.shift(),S=F+s.shift(),m=_+s.shift(),b=S+s.shift(),y=m+s.shift(),Math.abs(b-u)>Math.abs(y-v)?u=b+s.shift():v=y+s.shift(),e.U.P.curveTo(o,c,p,U,g,F,_),e.U.P.curveTo(o,S,m,b,y,u,v));else if(\"o14\"==x){if(s.length>0&&!h&&(f=s.shift()+a.nominalWidthX,h=!0),4==s.length){var k=s.shift(),G=s.shift(),D=s.shift(),B=s.shift(),L=e.CFF.glyphBySE(a,D),R=e.CFF.glyphBySE(a,B);e.U._drawCFF(a.CharStrings[L],t,a,n,o),t.x=k,t.y=G,e.U._drawCFF(a.CharStrings[R],t,a,n,o);}d&&(e.U.P.closePath(o),d=!1);}else if(\"o19\"==x||\"o20\"==x){s.length%2!=0&&!h&&(f=s.shift()+n.nominalWidthX),i+=s.length>>1,s.length=0,h=!0,l+=i+7>>3;}else if(\"o21\"==x)s.length>2&&!h&&(f=s.shift()+n.nominalWidthX,h=!0),v+=s.pop(),u+=s.pop(),d&&e.U.P.closePath(o),e.U.P.moveTo(o,u,v),d=!0;else if(\"o22\"==x)s.length>1&&!h&&(f=s.shift()+n.nominalWidthX,h=!0),u+=s.pop(),d&&e.U.P.closePath(o),e.U.P.moveTo(o,u,v),d=!0;else if(\"o25\"==x){for(;s.length>6;)u+=s.shift(),v+=s.shift(),e.U.P.lineTo(o,u,v);c=u+s.shift(),p=v+s.shift(),U=c+s.shift(),g=p+s.shift(),u=U+s.shift(),v=g+s.shift(),e.U.P.curveTo(o,c,p,U,g,u,v);}else if(\"o26\"==x)for(s.length%2&&(u+=s.shift());s.length>0;)c=u,p=v+s.shift(),u=U=c+s.shift(),v=(g=p+s.shift())+s.shift(),e.U.P.curveTo(o,c,p,U,g,u,v);else if(\"o27\"==x)for(s.length%2&&(v+=s.shift());s.length>0;)p=v,U=(c=u+s.shift())+s.shift(),g=p+s.shift(),u=U+s.shift(),v=g,e.U.P.curveTo(o,c,p,U,g,u,v);else if(\"o10\"==x||\"o29\"==x){var A=\"o10\"==x?n:a;if(0==s.length)console.debug(\"error: empty stack\");else {var W=s.pop(),M=A.Subrs[W+A.Bias];t.x=u,t.y=v,t.nStems=i,t.haveWidth=h,t.width=f,t.open=d,e.U._drawCFF(M,t,a,n,o),u=t.x,v=t.y,i=t.nStems,h=t.haveWidth,f=t.width,d=t.open;}}else if(\"o30\"==x||\"o31\"==x){var V=s.length,N=(T=0,\"o31\"==x);for(T+=V-(P=-3&V);T<P;)N?(p=v,U=(c=u+s.shift())+s.shift(),v=(g=p+s.shift())+s.shift(),P-T==5?(u=U+s.shift(),T++):u=U,N=!1):(c=u,p=v+s.shift(),U=c+s.shift(),g=p+s.shift(),u=U+s.shift(),P-T==5?(v=g+s.shift(),T++):v=g,N=!0),e.U.P.curveTo(o,c,p,U,g,u,v),T+=4;}else {if(\"o\"==(x+\"\").charAt(0))throw console.debug(\"Unknown operation: \"+x,r),x;s.push(x);}}}t.x=u,t.y=v,t.nStems=i,t.haveWidth=h,t.width=f,t.open=d;};var t=e,a={Typr:t};return r.Typr=t,r.default=a,Object.defineProperty(r,\"__esModule\",{value:!0}),r}({}).Typr}\n\n/*!\nCustom bundle of woff2otf (https://github.com/arty-name/woff2otf) with fflate\n(https://github.com/101arrowz/fflate) for use in Troika text rendering. \nOriginal licenses apply: \n- fflate: https://github.com/101arrowz/fflate/blob/master/LICENSE (MIT)\n- woff2otf.js: https://github.com/arty-name/woff2otf/blob/master/woff2otf.js (Apache2)\n*/\nfunction woff2otfFactory(){return function(r){var e=Uint8Array,n=Uint16Array,t=Uint32Array,a=new e([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new e([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),o=new e([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),f=function(r,e){for(var a=new n(31),i=0;i<31;++i)a[i]=e+=1<<r[i-1];var o=new t(a[30]);for(i=1;i<30;++i)for(var f=a[i];f<a[i+1];++f)o[f]=f-a[i]<<5|i;return [a,o]},u=f(a,2),v=u[0],s=u[1];v[28]=258,s[258]=28;for(var l=f(i,0)[0],c=new n(32768),g=0;g<32768;++g){var h=(43690&g)>>>1|(21845&g)<<1;h=(61680&(h=(52428&h)>>>2|(13107&h)<<2))>>>4|(3855&h)<<4,c[g]=((65280&h)>>>8|(255&h)<<8)>>>1;}var w=function(r,e,t){for(var a=r.length,i=0,o=new n(e);i<a;++i)++o[r[i]-1];var f,u=new n(e);for(i=0;i<e;++i)u[i]=u[i-1]+o[i-1]<<1;if(t){f=new n(1<<e);var v=15-e;for(i=0;i<a;++i)if(r[i])for(var s=i<<4|r[i],l=e-r[i],g=u[r[i]-1]++<<l,h=g|(1<<l)-1;g<=h;++g)f[c[g]>>>v]=s;}else for(f=new n(a),i=0;i<a;++i)r[i]&&(f[i]=c[u[r[i]-1]++]>>>15-r[i]);return f},d=new e(288);for(g=0;g<144;++g)d[g]=8;for(g=144;g<256;++g)d[g]=9;for(g=256;g<280;++g)d[g]=7;for(g=280;g<288;++g)d[g]=8;var m=new e(32);for(g=0;g<32;++g)m[g]=5;var b=w(d,9,1),p=w(m,5,1),y=function(r){for(var e=r[0],n=1;n<r.length;++n)r[n]>e&&(e=r[n]);return e},L=function(r,e,n){var t=e/8|0;return (r[t]|r[t+1]<<8)>>(7&e)&n},U=function(r,e){var n=e/8|0;return (r[n]|r[n+1]<<8|r[n+2]<<16)>>(7&e)},k=[\"unexpected EOF\",\"invalid block type\",\"invalid length/literal\",\"invalid distance\",\"stream finished\",\"no stream handler\",,\"no callback\",\"invalid UTF-8 data\",\"extra field too long\",\"date not in range 1980-2099\",\"filename too long\",\"stream finishing\",\"invalid zip data\"],T=function(r,e,n){var t=new Error(e||k[r]);if(t.code=r,Error.captureStackTrace&&Error.captureStackTrace(t,T),!n)throw t;return t},O=function(r,f,u){var s=r.length;if(!s||u&&!u.l&&s<5)return f||new e(0);var c=!f||u,g=!u||u.i;u||(u={}),f||(f=new e(3*s));var h,d=function(r){var n=f.length;if(r>n){var t=new e(Math.max(2*n,r));t.set(f),f=t;}},m=u.f||0,k=u.p||0,O=u.b||0,A=u.l,x=u.d,E=u.m,D=u.n,M=8*s;do{if(!A){u.f=m=L(r,k,1);var S=L(r,k+1,3);if(k+=3,!S){var V=r[(I=((h=k)/8|0)+(7&h&&1)+4)-4]|r[I-3]<<8,_=I+V;if(_>s){g&&T(0);break}c&&d(O+V),f.set(r.subarray(I,_),O),u.b=O+=V,u.p=k=8*_;continue}if(1==S)A=b,x=p,E=9,D=5;else if(2==S){var j=L(r,k,31)+257,z=L(r,k+10,15)+4,C=j+L(r,k+5,31)+1;k+=14;for(var F=new e(C),P=new e(19),q=0;q<z;++q)P[o[q]]=L(r,k+3*q,7);k+=3*z;var B=y(P),G=(1<<B)-1,H=w(P,B,1);for(q=0;q<C;){var I,J=H[L(r,k,G)];if(k+=15&J,(I=J>>>4)<16)F[q++]=I;else {var K=0,N=0;for(16==I?(N=3+L(r,k,3),k+=2,K=F[q-1]):17==I?(N=3+L(r,k,7),k+=3):18==I&&(N=11+L(r,k,127),k+=7);N--;)F[q++]=K;}}var Q=F.subarray(0,j),R=F.subarray(j);E=y(Q),D=y(R),A=w(Q,E,1),x=w(R,D,1);}else T(1);if(k>M){g&&T(0);break}}c&&d(O+131072);for(var W=(1<<E)-1,X=(1<<D)-1,Y=k;;Y=k){var Z=(K=A[U(r,k)&W])>>>4;if((k+=15&K)>M){g&&T(0);break}if(K||T(2),Z<256)f[O++]=Z;else {if(256==Z){Y=k,A=null;break}var $=Z-254;if(Z>264){var rr=a[q=Z-257];$=L(r,k,(1<<rr)-1)+v[q],k+=rr;}var er=x[U(r,k)&X],nr=er>>>4;er||T(3),k+=15&er;R=l[nr];if(nr>3){rr=i[nr];R+=U(r,k)&(1<<rr)-1,k+=rr;}if(k>M){g&&T(0);break}c&&d(O+131072);for(var tr=O+$;O<tr;O+=4)f[O]=f[O-R],f[O+1]=f[O+1-R],f[O+2]=f[O+2-R],f[O+3]=f[O+3-R];O=tr;}}u.l=A,u.p=Y,u.b=O,A&&(m=1,u.m=E,u.d=x,u.n=D);}while(!m);return O==f.length?f:function(r,a,i){(null==a||a<0)&&(a=0),(null==i||i>r.length)&&(i=r.length);var o=new(r instanceof n?n:r instanceof t?t:e)(i-a);return o.set(r.subarray(a,i)),o}(f,0,O)},A=new e(0);var x=\"undefined\"!=typeof TextDecoder&&new TextDecoder;try{x.decode(A,{stream:!0}),1;}catch(r){}return r.convert_streams=function(r){var e=new DataView(r),n=0;function t(){var r=e.getUint16(n);return n+=2,r}function a(){var r=e.getUint32(n);return n+=4,r}function i(r){m.setUint16(b,r),b+=2;}function o(r){m.setUint32(b,r),b+=4;}for(var f={signature:a(),flavor:a(),length:a(),numTables:t(),reserved:t(),totalSfntSize:a(),majorVersion:t(),minorVersion:t(),metaOffset:a(),metaLength:a(),metaOrigLength:a(),privOffset:a(),privLength:a()},u=0;Math.pow(2,u)<=f.numTables;)u++;u--;for(var v=16*Math.pow(2,u),s=16*f.numTables-v,l=12,c=[],g=0;g<f.numTables;g++)c.push({tag:a(),offset:a(),compLength:a(),origLength:a(),origChecksum:a()}),l+=16;var h,w=new Uint8Array(12+16*c.length+c.reduce((function(r,e){return r+e.origLength+4}),0)),d=w.buffer,m=new DataView(d),b=0;return o(f.flavor),i(f.numTables),i(v),i(u),i(s),c.forEach((function(r){o(r.tag),o(r.origChecksum),o(l),o(r.origLength),r.outOffset=l,(l+=r.origLength)%4!=0&&(l+=4-l%4);})),c.forEach((function(e){var n,t=r.slice(e.offset,e.offset+e.compLength);if(e.compLength!=e.origLength){var a=new Uint8Array(e.origLength);n=new Uint8Array(t,2),O(n,a);}else a=new Uint8Array(t);w.set(a,e.outOffset);var i=0;(l=e.outOffset+e.origLength)%4!=0&&(i=4-l%4),w.set(new Uint8Array(i).buffer,e.outOffset+e.origLength),h=l+i;})),d.slice(0,h)},Object.defineProperty(r,\"__esModule\",{value:!0}),r}({}).convert_streams}\n\n/**\n * A factory wrapper parsing a font file using Typr.\n * Also adds support for WOFF files (not WOFF2).\n */\n\nfunction parserFactory(Typr, woff2otf) {\n  const cmdArgLengths = {\n    M: 2,\n    L: 2,\n    Q: 4,\n    C: 6,\n    Z: 0\n  };\n\n  // {joinType: \"skip+step,...\"}\n  const joiningTypeRawData = {\"C\":\"18g,ca,368,1kz\",\"D\":\"17k,6,2,2+4,5+c,2+6,2+1,10+1,9+f,j+11,2+1,a,2,2+1,15+2,3,j+2,6+3,2+8,2,2,2+1,w+a,4+e,3+3,2,3+2,3+5,23+w,2f+4,3,2+9,2,b,2+3,3,1k+9,6+1,3+1,2+2,2+d,30g,p+y,1,1+1g,f+x,2,sd2+1d,jf3+4,f+3,2+4,2+2,b+3,42,2,4+2,2+1,2,3,t+1,9f+w,2,el+2,2+g,d+2,2l,2+1,5,3+1,2+1,2,3,6,16wm+1v\",\"R\":\"17m+3,2,2,6+3,m,15+2,2+2,h+h,13,3+8,2,2,3+1,2,p+1,x,5+4,5,a,2,2,3,u,c+2,g+1,5,2+1,4+1,5j,6+1,2,b,2+2,f,2+1,1s+2,2,3+1,7,1ez0,2,2+1,4+4,b,4,3,b,42,2+2,4,3,2+1,2,o+3,ae,ep,x,2o+2,3+1,3,5+1,6\",\"L\":\"x9u,jff,a,fd,jv\",\"T\":\"4t,gj+33,7o+4,1+1,7c+18,2,2+1,2+1,2,21+a,2,1b+k,h,2u+6,3+5,3+1,2+3,y,2,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,3,7,6+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+d,1,1+1,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,ek,3+1,r+4,1e+4,6+5,2p+c,1+3,1,1+2,1+b,2db+2,3y,2p+v,ff+3,30+1,n9x,1+2,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,5s,6y+2,ea,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+9,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2,2b+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,470+8,at4+4,1o+6,t5,1s+3,2a,f5l+1,2+3,43o+2,a+7,1+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,1,gzau,v+2n,3l+6n\"};\n\n  const JT_LEFT = 1, //indicates that a character joins with the subsequent character, but does not join with the preceding character.\n    JT_RIGHT = 2, //indicates that a character joins with the preceding character, but does not join with the subsequent character.\n    JT_DUAL = 4, //indicates that a character joins with the preceding character and joins with the subsequent character.\n    JT_TRANSPARENT = 8, //indicates that the character does not join with adjacent characters and that the character must be skipped over when the shaping engine is evaluating the joining positions in a sequence of characters. When a JT_TRANSPARENT character is encountered in a sequence, the JOINING_TYPE of the preceding character passes through. Diacritical marks are frequently assigned this value.\n    JT_JOIN_CAUSING = 16, //indicates that the character forces the use of joining forms with the preceding and subsequent characters. Kashidas and the Zero Width Joiner (U+200D) are both JOIN_CAUSING characters.\n    JT_NON_JOINING = 32; //indicates that a character does not join with the preceding or with the subsequent character.,\n\n  let joiningTypeMap;\n  function getCharJoiningType(ch) {\n    if (!joiningTypeMap) {\n      const m = {\n        R: JT_RIGHT,\n        L: JT_LEFT,\n        D: JT_DUAL,\n        C: JT_JOIN_CAUSING,\n        U: JT_NON_JOINING,\n        T: JT_TRANSPARENT\n      };\n      joiningTypeMap = new Map();\n      for (let type in joiningTypeRawData) {\n        let lastCode = 0;\n        joiningTypeRawData[type].split(',').forEach(range => {\n          let [skip, step] = range.split('+');\n          skip = parseInt(skip,36);\n          step = step ? parseInt(step, 36) : 0;\n          joiningTypeMap.set(lastCode += skip, m[type]);\n          for (let i = step; i--;) {\n            joiningTypeMap.set(++lastCode, m[type]);\n          }\n        });\n      }\n    }\n    return joiningTypeMap.get(ch) || JT_NON_JOINING\n  }\n\n  const ISOL = 1, INIT = 2, FINA = 3, MEDI = 4;\n  const formsToFeatures = [null, 'isol', 'init', 'fina', 'medi'];\n\n  function detectJoiningForms(str) {\n    // This implements the algorithm described here:\n    // https://github.com/n8willis/opentype-shaping-documents/blob/master/opentype-shaping-arabic-general.md\n    const joiningForms = new Uint8Array(str.length);\n    let prevJoiningType = JT_NON_JOINING;\n    let prevForm = ISOL;\n    let prevIndex = -1;\n    for (let i = 0; i < str.length; i++) {\n      const code = str.codePointAt(i);\n      let joiningType = getCharJoiningType(code) | 0;\n      let form = ISOL;\n      if (joiningType & JT_TRANSPARENT) {\n        continue\n      }\n      if (prevJoiningType & (JT_LEFT | JT_DUAL | JT_JOIN_CAUSING)) {\n        if (joiningType & (JT_RIGHT | JT_DUAL | JT_JOIN_CAUSING)) {\n          form = FINA;\n          // isol->init, fina->medi\n          if (prevForm === ISOL || prevForm === FINA) {\n            joiningForms[prevIndex]++;\n          }\n        }\n        else if (joiningType & (JT_LEFT | JT_NON_JOINING)) {\n          // medi->fina, init->isol\n          if (prevForm === INIT || prevForm === MEDI) {\n            joiningForms[prevIndex]--;\n          }\n        }\n      }\n      else if (prevJoiningType & (JT_RIGHT | JT_NON_JOINING)) {\n        // medi->fina, init->isol\n        if (prevForm === INIT || prevForm === MEDI) {\n          joiningForms[prevIndex]--;\n        }\n      }\n      prevForm = joiningForms[i] = form;\n      prevJoiningType = joiningType;\n      prevIndex = i;\n      if (code > 0xffff) i++;\n    }\n    // console.log(str.split('').map(ch => ch.codePointAt(0).toString(16)))\n    // console.log(str.split('').map(ch => getCharJoiningType(ch.codePointAt(0))))\n    // console.log(Array.from(joiningForms).map(f => formsToFeatures[f] || 'none'))\n    return joiningForms\n  }\n\n  function stringToGlyphs (font, str) {\n    const glyphIds = [];\n    for (let i = 0; i < str.length; i++) {\n      const cc = str.codePointAt(i);\n      if (cc > 0xffff) i++;\n      glyphIds.push(Typr.U.codeToGlyph(font, cc));\n    }\n\n    const gsub = font['GSUB'];\n    if (gsub) {\n      const {lookupList, featureList} = gsub;\n      let joiningForms;\n      const supportedFeatures = /^(rlig|liga|mset|isol|init|fina|medi|half|pres|blws)$/;\n      const usedLookups = [];\n      featureList.forEach(feature => {\n        if (supportedFeatures.test(feature.tag)) {\n          for (let ti = 0; ti < feature.tab.length; ti++) {\n            if (usedLookups[feature.tab[ti]]) continue\n            usedLookups[feature.tab[ti]] = true;\n            const tab = lookupList[feature.tab[ti]];\n            const isJoiningFeature = /^(isol|init|fina|medi)$/.test(feature.tag);\n            if (isJoiningFeature && !joiningForms) { //lazy\n              joiningForms = detectJoiningForms(str);\n            }\n            for (let ci = 0; ci < glyphIds.length; ci++) {\n              if (!joiningForms || !isJoiningFeature || formsToFeatures[joiningForms[ci]] === feature.tag) {\n                Typr.U._applySubs(glyphIds, ci, tab, lookupList);\n              }\n            }\n          }\n        }\n      });\n    }\n\n    return glyphIds\n  }\n\n\n  function wrapFontObj(typrFont) {\n    const glyphMap = Object.create(null);\n\n    const fontObj = {\n      unitsPerEm: typrFont.head.unitsPerEm,\n      ascender: typrFont.hhea.ascender,\n      descender: typrFont.hhea.descender,\n      forEachGlyph(text, fontSize, letterSpacing, callback) {\n        let glyphX = 0;\n        const fontScale = 1 / fontObj.unitsPerEm * fontSize;\n\n        const glyphIndices = stringToGlyphs(typrFont, text);\n        let charIndex = 0;\n        let prevGlyphIndex = -1;\n        glyphIndices.forEach((glyphIndex, i) => {\n          // Typr returns a glyph index per string codepoint, with -1s in place of those that\n          // were omitted due to ligature substitution. So we can track original index in the\n          // string via simple increment, and skip everything else when seeing a -1.\n          if (glyphIndex !== -1) {\n            let glyphObj = glyphMap[glyphIndex];\n            if (!glyphObj) {\n              const {cmds, crds} = Typr.U.glyphToPath(typrFont, glyphIndex);\n\n              // Build path string\n              let path = '';\n              let crdsIdx = 0;\n              for (let i = 0, len = cmds.length; i < len; i++) {\n                const numArgs = cmdArgLengths[cmds[i]];\n                path += cmds[i];\n                for (let j = 1; j <= numArgs; j++) {\n                  path += (j > 1 ? ',' : '') + crds[crdsIdx++];\n                }\n              }\n\n              // Find extents - Glyf gives this in metadata but not CFF, and Typr doesn't\n              // normalize the two, so it's simplest just to iterate ourselves.\n              let xMin, yMin, xMax, yMax;\n              if (crds.length) {\n                xMin = yMin = Infinity;\n                xMax = yMax = -Infinity;\n                for (let i = 0, len = crds.length; i < len; i += 2) {\n                  let x = crds[i];\n                  let y = crds[i + 1];\n                  if (x < xMin) xMin = x;\n                  if (y < yMin) yMin = y;\n                  if (x > xMax) xMax = x;\n                  if (y > yMax) yMax = y;\n                }\n              } else {\n                xMin = xMax = yMin = yMax = 0;\n              }\n\n              glyphObj = glyphMap[glyphIndex] = {\n                index: glyphIndex,\n                advanceWidth: typrFont.hmtx.aWidth[glyphIndex],\n                xMin,\n                yMin,\n                xMax,\n                yMax,\n                path,\n                pathCommandCount: cmds.length,\n                // forEachPathCommand(callback) {\n                //   let argsIndex = 0\n                //   const argsArray = []\n                //   for (let i = 0, len = cmds.length; i < len; i++) {\n                //     const numArgs = cmdArgLengths[cmds[i]]\n                //     argsArray.length = 1 + numArgs\n                //     argsArray[0] = cmds[i]\n                //     for (let j = 1; j <= numArgs; j++) {\n                //       argsArray[j] = crds[argsIndex++]\n                //     }\n                //     callback.apply(null, argsArray)\n                //   }\n                // }\n              };\n            }\n\n            // Kerning\n            if (prevGlyphIndex !== -1) {\n              glyphX += Typr.U.getPairAdjustment(typrFont, prevGlyphIndex, glyphIndex) * fontScale;\n            }\n\n            callback.call(null, glyphObj, glyphX, charIndex);\n\n            if (glyphObj.advanceWidth) {\n              glyphX += glyphObj.advanceWidth * fontScale;\n            }\n            if (letterSpacing) {\n              glyphX += letterSpacing * fontSize;\n            }\n\n            prevGlyphIndex = glyphIndex;\n          }\n          charIndex += (text.codePointAt(charIndex) > 0xffff ? 2 : 1);\n        });\n        return glyphX\n      }\n    };\n\n    return fontObj\n  }\n\n  return function parse(buffer) {\n    // Look to see if we have a WOFF file and convert it if so:\n    const peek = new Uint8Array(buffer, 0, 4);\n    const tag = Typr._bin.readASCII(peek, 0, 4);\n    if (tag === 'wOFF') {\n      buffer = woff2otf(buffer);\n    } else if (tag === 'wOF2') {\n      throw new Error('woff2 fonts not supported')\n    }\n    return wrapFontObj(Typr.parse(buffer)[0])\n  }\n}\n\n\nconst workerModule = /*#__PURE__*/defineWorkerModule({\n  name: 'Typr Font Parser',\n  dependencies: [typrFactory, woff2otfFactory, parserFactory],\n  init(typrFactory, woff2otfFactory, parserFactory) {\n    const Typr = typrFactory();\n    const woff2otf = woff2otfFactory();\n    return parserFactory(Typr, woff2otf)\n  }\n});\n\nconst CONFIG = {\n  defaultFontURL: 'https://fonts.gstatic.com/s/roboto/v18/KFOmCnqEu92Fr1Mu4mxM.woff', //Roboto Regular\n  sdfGlyphSize: 64,\n  sdfMargin: 1 / 16,\n  sdfExponent: 9,\n  textureWidth: 2048\n};\nconst tempColor = /*#__PURE__*/new Color();\nlet hasRequested = false;\n\nfunction now$1() {\n  return (self.performance || Date).now()\n}\n\n/**\n * Customizes the text builder configuration. This must be called prior to the first font processing\n * request, and applies to all fonts.\n *\n * @param {String} config.defaultFontURL - The URL of the default font to use for text processing\n *                 requests, in case none is specified or the specifiede font fails to load or parse.\n *                 Defaults to \"Roboto Regular\" from Google Fonts.\n * @param {Number} config.sdfGlyphSize - The default size of each glyph's SDF (signed distance field)\n *                 texture used for rendering. Must be a power-of-two number, and applies to all fonts,\n *                 but note that this can also be overridden per call to `getTextRenderInfo()`.\n *                 Larger sizes can improve the quality of glyph rendering by increasing the sharpness\n *                 of corners and preventing loss of very thin lines, at the expense of memory. Defaults\n *                 to 64 which is generally a good balance of size and quality.\n * @param {Number} config.sdfExponent - The exponent used when encoding the SDF values. A higher exponent\n *                 shifts the encoded 8-bit values to achieve higher precision/accuracy at texels nearer\n *                 the glyph's path, with lower precision further away. Defaults to 9.\n * @param {Number} config.sdfMargin - How much space to reserve in the SDF as margin outside the glyph's\n *                 path, as a percentage of the SDF width. A larger margin increases the quality of\n *                 extruded glyph outlines, but decreases the precision available for the glyph itself.\n *                 Defaults to 1/16th of the glyph size.\n * @param {Number} config.textureWidth - The width of the SDF texture; must be a power of 2. Defaults to\n *                 2048 which is a safe maximum texture dimension according to the stats at\n *                 https://webglstats.com/webgl/parameter/MAX_TEXTURE_SIZE and should allow for a\n *                 reasonably large number of glyphs (default glyph size of 64^2 and safe texture size of\n *                 2048^2, times 4 channels, allows for 4096 glyphs.) This can be increased if you need to\n *                 increase the glyph size and/or have an extraordinary number of glyphs.\n */\nfunction configureTextBuilder(config) {\n  if (hasRequested) {\n    console.warn('configureTextBuilder called after first font request; will be ignored.');\n  } else {\n    assign(CONFIG, config);\n  }\n}\n\n/**\n * Repository for all font SDF atlas textures and their glyph mappings. There is a separate atlas for\n * each sdfGlyphSize. Each atlas has a single Texture that holds all glyphs for all fonts.\n *\n *   {\n *     [sdfGlyphSize]: {\n *       glyphCount: number,\n *       sdfGlyphSize: number,\n *       sdfTexture: Texture,\n *       sdfCanvas: HTMLCanvasElement,\n *       contextLost: boolean,\n *       glyphsByFont: Map<fontURL, Map<glyphID, {path, atlasIndex, sdfViewBox}>>\n *     }\n *   }\n */\nconst atlases = Object.create(null);\n\n/**\n * @typedef {object} TroikaTextRenderInfo - Format of the result from `getTextRenderInfo`.\n * @property {object} parameters - The normalized input arguments to the render call.\n * @property {Texture} sdfTexture - The SDF atlas texture.\n * @property {number} sdfGlyphSize - The size of each glyph's SDF; see `configureTextBuilder`.\n * @property {number} sdfExponent - The exponent used in encoding the SDF's values; see `configureTextBuilder`.\n * @property {Float32Array} glyphBounds - List of [minX, minY, maxX, maxY] quad bounds for each glyph.\n * @property {Float32Array} glyphAtlasIndices - List holding each glyph's index in the SDF atlas.\n * @property {Uint8Array} [glyphColors] - List holding each glyph's [r, g, b] color, if `colorRanges` was supplied.\n * @property {Float32Array} [caretPositions] - A list of caret positions for all characters in the string; each is\n *           three elements: the starting X, the ending X, and the bottom Y for the caret.\n * @property {number} [caretHeight] - An appropriate height for all selection carets.\n * @property {number} ascender - The font's ascender metric.\n * @property {number} descender - The font's descender metric.\n * @property {number} lineHeight - The final computed lineHeight measurement.\n * @property {number} topBaseline - The y position of the top line's baseline.\n * @property {Array<number>} blockBounds - The total [minX, minY, maxX, maxY] rect of the whole text block;\n *           this can include extra vertical space beyond the visible glyphs due to lineHeight, and is\n *           equivalent to the dimensions of a block-level text element in CSS.\n * @property {Array<number>} visibleBounds - The total [minX, minY, maxX, maxY] rect of the whole text block;\n *           unlike `blockBounds` this is tightly wrapped to the visible glyph paths.\n * @property {Array<number>} totalBounds - DEPRECATED; use blockBounds instead.\n * @property {Array<number>} totalBlockSize - DEPRECATED; use blockBounds instead\n * @property {Array<object>} chunkedBounds - List of bounding rects for each consecutive set of N glyphs,\n *           in the format `{start:N, end:N, rect:[minX, minY, maxX, maxY]}`.\n * @property {object} timings - Timing info for various parts of the rendering logic including SDF\n *           generation, typesetting, etc.\n * @frozen\n */\n\n/**\n * @callback getTextRenderInfo~callback\n * @param {TroikaTextRenderInfo} textRenderInfo\n */\n\n/**\n * Main entry point for requesting the data needed to render a text string with given font parameters.\n * This is an asynchronous call, performing most of the logic in a web worker thread.\n * @param {object} args\n * @param {getTextRenderInfo~callback} callback\n */\nfunction getTextRenderInfo(args, callback) {\n  hasRequested = true;\n  args = assign({}, args);\n  const totalStart = now$1();\n\n  // Apply default font here to avoid a 'null' atlas, and convert relative\n  // URLs to absolute so they can be resolved in the worker\n  args.font = toAbsoluteURL(args.font || CONFIG.defaultFontURL);\n\n  // Normalize text to a string\n  args.text = '' + args.text;\n\n  args.sdfGlyphSize = args.sdfGlyphSize || CONFIG.sdfGlyphSize;\n\n  // Normalize colors\n  if (args.colorRanges != null) {\n    let colors = {};\n    for (let key in args.colorRanges) {\n      if (args.colorRanges.hasOwnProperty(key)) {\n        let val = args.colorRanges[key];\n        if (typeof val !== 'number') {\n          val = tempColor.set(val).getHex();\n        }\n        colors[key] = val;\n      }\n    }\n    args.colorRanges = colors;\n  }\n\n  Object.freeze(args);\n\n  // Init the atlas if needed\n  const {textureWidth, sdfExponent} = CONFIG;\n  const {sdfGlyphSize} = args;\n  const glyphsPerRow = (textureWidth / sdfGlyphSize * 4);\n  let atlas = atlases[sdfGlyphSize];\n  if (!atlas) {\n    const canvas = document.createElement('canvas');\n    canvas.width = textureWidth;\n    canvas.height = sdfGlyphSize * 256 / glyphsPerRow; // start tall enough to fit 256 glyphs\n    atlas = atlases[sdfGlyphSize] = {\n      glyphCount: 0,\n      sdfGlyphSize,\n      sdfCanvas: canvas,\n      sdfTexture: new Texture(\n        canvas,\n        undefined,\n        undefined,\n        undefined,\n        LinearFilter,\n        LinearFilter\n      ),\n      contextLost: false,\n      glyphsByFont: new Map()\n    };\n    atlas.sdfTexture.generateMipmaps = false;\n    initContextLossHandling(atlas);\n  }\n\n  const {sdfTexture, sdfCanvas} = atlas;\n  let fontGlyphs = atlas.glyphsByFont.get(args.font);\n  if (!fontGlyphs) {\n    atlas.glyphsByFont.set(args.font, fontGlyphs = new Map());\n  }\n\n  // Issue request to the typesetting engine in the worker\n  typesetInWorker(args).then(result => {\n    const {glyphIds, glyphPositions, fontSize, unitsPerEm, timings} = result;\n    const neededSDFs = [];\n    const glyphBounds = new Float32Array(glyphIds.length * 4);\n    const fontSizeMult = fontSize / unitsPerEm;\n    let boundsIdx = 0;\n    let positionsIdx = 0;\n    const quadsStart = now$1();\n    glyphIds.forEach((glyphId, i) => {\n      let glyphInfo = fontGlyphs.get(glyphId);\n\n      // If this is a glyphId not seen before, add it to the atlas\n      if (!glyphInfo) {\n        const {path, pathBounds} = result.glyphData[glyphId];\n\n        // Margin around path edges in SDF, based on a percentage of the glyph's max dimension.\n        // Note we add an extra 0.5 px over the configured value because the outer 0.5 doesn't contain\n        // useful interpolated values and will be ignored anyway.\n        const fontUnitsMargin = Math.max(pathBounds[2] - pathBounds[0], pathBounds[3] - pathBounds[1])\n          / sdfGlyphSize * (CONFIG.sdfMargin * sdfGlyphSize + 0.5);\n\n        const atlasIndex = atlas.glyphCount++;\n        const sdfViewBox = [\n          pathBounds[0] - fontUnitsMargin,\n          pathBounds[1] - fontUnitsMargin,\n          pathBounds[2] + fontUnitsMargin,\n          pathBounds[3] + fontUnitsMargin,\n        ];\n        fontGlyphs.set(glyphId, (glyphInfo = { path, atlasIndex, sdfViewBox }));\n\n        // Collect those that need SDF generation\n        neededSDFs.push(glyphInfo);\n      }\n\n      // Calculate bounds for renderable quads\n      // TODO can we get this back off the main thread?\n      const {sdfViewBox} = glyphInfo;\n      const posX = glyphPositions[positionsIdx++];\n      const posY = glyphPositions[positionsIdx++];\n      glyphBounds[boundsIdx++] = posX + sdfViewBox[0] * fontSizeMult;\n      glyphBounds[boundsIdx++] = posY + sdfViewBox[1] * fontSizeMult;\n      glyphBounds[boundsIdx++] = posX + sdfViewBox[2] * fontSizeMult;\n      glyphBounds[boundsIdx++] = posY + sdfViewBox[3] * fontSizeMult;\n\n      // Convert glyphId to SDF index for the shader\n      glyphIds[i] = glyphInfo.atlasIndex;\n    });\n    timings.quads = (timings.quads || 0) + (now$1() - quadsStart);\n\n    const sdfStart = now$1();\n    timings.sdf = {};\n\n    // Grow the texture height by power of 2 if needed\n    const currentHeight = sdfCanvas.height;\n    const neededRows = Math.ceil(atlas.glyphCount / glyphsPerRow);\n    const neededHeight = Math.pow(2, Math.ceil(Math.log2(neededRows * sdfGlyphSize)));\n    if (neededHeight > currentHeight) {\n      // Since resizing the canvas clears its render buffer, it needs special handling to copy the old contents over\n      console.info(`Increasing SDF texture size ${currentHeight}->${neededHeight}`);\n      resizeWebGLCanvasWithoutClearing(sdfCanvas, textureWidth, neededHeight);\n      // As of Three r136 textures cannot be resized once they're allocated on the GPU, we must dispose to reallocate it\n      sdfTexture.dispose();\n    }\n\n    Thenable.all(neededSDFs.map(glyphInfo =>\n      generateGlyphSDF(glyphInfo, atlas, args.gpuAccelerateSDF).then(({timing}) => {\n        timings.sdf[glyphInfo.atlasIndex] = timing;\n      })\n    )).then(() => {\n      if (neededSDFs.length && !atlas.contextLost) {\n        safariPre15Workaround(atlas);\n        sdfTexture.needsUpdate = true;\n      }\n      timings.sdfTotal = now$1() - sdfStart;\n      timings.total = now$1() - totalStart;\n      // console.log(`SDF - ${timings.sdfTotal}, Total - ${timings.total - timings.fontLoad}`)\n\n      // Invoke callback with the text layout arrays and updated texture\n      callback(Object.freeze({\n        parameters: args,\n        sdfTexture,\n        sdfGlyphSize,\n        sdfExponent,\n        glyphBounds,\n        glyphAtlasIndices: glyphIds,\n        glyphColors: result.glyphColors,\n        caretPositions: result.caretPositions,\n        caretHeight: result.caretHeight,\n        chunkedBounds: result.chunkedBounds,\n        ascender: result.ascender,\n        descender: result.descender,\n        lineHeight: result.lineHeight,\n        topBaseline: result.topBaseline,\n        blockBounds: result.blockBounds,\n        visibleBounds: result.visibleBounds,\n        timings: result.timings,\n        get totalBounds() {\n          console.log('totalBounds deprecated, use blockBounds instead');\n          return result.blockBounds\n        },\n        get totalBlockSize() {\n          console.log('totalBlockSize deprecated, use blockBounds instead');\n          const [x0, y0, x1, y1] = result.blockBounds;\n          return [x1 - x0, y1 - y0]\n        }\n      }));\n    });\n  });\n\n  // While the typesetting request is being handled, go ahead and make sure the atlas canvas context is\n  // \"warmed up\"; the first request will be the longest due to shader program compilation so this gets\n  // a head start on that process before SDFs actually start getting processed.\n  Thenable.all([]).then(() => {\n    if (!atlas.contextLost) {\n      warmUpSDFCanvas(sdfCanvas);\n    }\n  });\n}\n\nfunction generateGlyphSDF({path, atlasIndex, sdfViewBox}, {sdfGlyphSize, sdfCanvas, contextLost}, useGPU) {\n  if (contextLost) {\n    // If the context is lost there's nothing we can do, just quit silently and let it\n    // get regenerated when the context is restored\n    return Promise.resolve({timing: -1})\n  }\n  const {textureWidth, sdfExponent} = CONFIG;\n  const maxDist = Math.max(sdfViewBox[2] - sdfViewBox[0], sdfViewBox[3] - sdfViewBox[1]);\n  const squareIndex = Math.floor(atlasIndex / 4);\n  const x = squareIndex % (textureWidth / sdfGlyphSize) * sdfGlyphSize;\n  const y = Math.floor(squareIndex / (textureWidth / sdfGlyphSize)) * sdfGlyphSize;\n  const channel = atlasIndex % 4;\n  return generateSDF(sdfGlyphSize, sdfGlyphSize, path, sdfViewBox, maxDist, sdfExponent, sdfCanvas, x, y, channel, useGPU)\n}\n\nfunction initContextLossHandling(atlas) {\n  const canvas = atlas.sdfCanvas;\n\n  /*\n  // Begin context loss simulation\n  if (!window.WebGLDebugUtils) {\n    let script = document.getElementById('WebGLDebugUtilsScript')\n    if (!script) {\n      script = document.createElement('script')\n      script.id = 'WebGLDebugUtils'\n      document.head.appendChild(script)\n      script.src = 'https://cdn.jsdelivr.net/gh/KhronosGroup/WebGLDeveloperTools@b42e702/src/debug/webgl-debug.js'\n    }\n    script.addEventListener('load', () => {\n      initContextLossHandling(atlas)\n    })\n    return\n  }\n  window.WebGLDebugUtils.makeLostContextSimulatingCanvas(canvas)\n  canvas.loseContextInNCalls(500)\n  canvas.addEventListener('webglcontextrestored', (event) => {\n    canvas.loseContextInNCalls(5000)\n  })\n  // End context loss simulation\n  */\n\n  canvas.addEventListener('webglcontextlost', (event) => {\n    console.log('Context Lost', event);\n    event.preventDefault();\n    atlas.contextLost = true;\n  });\n  canvas.addEventListener('webglcontextrestored', (event) => {\n    console.log('Context Restored', event);\n    atlas.contextLost = false;\n    // Regenerate all glyphs into the restored canvas:\n    const promises = [];\n    atlas.glyphsByFont.forEach(glyphMap => {\n      glyphMap.forEach(glyph => {\n        promises.push(generateGlyphSDF(glyph, atlas, true));\n      });\n    });\n    Thenable.all(promises).then(() => {\n      safariPre15Workaround(atlas);\n      atlas.sdfTexture.needsUpdate = true;\n    });\n  });\n}\n\n/**\n * Preload a given font and optionally pre-generate glyph SDFs for one or more character sequences.\n * This can be useful to avoid long pauses when first showing text in a scene, by preloading the\n * needed fonts and glyphs up front along with other assets.\n *\n * @param {object} options\n * @param {string} options.font - URL of the font file to preload. If not given, the default font will\n *        be loaded.\n * @param {string|string[]} options.characters - One or more character sequences for which to pre-\n *        generate glyph SDFs. Note that this will honor ligature substitution, so you may need\n *        to specify ligature sequences in addition to their individual characters to get all\n *        possible glyphs, e.g. `[\"t\", \"h\", \"th\"]` to get the \"t\" and \"h\" glyphs plus the \"th\" ligature.\n * @param {number} options.sdfGlyphSize - The size at which to prerender the SDF textures for the\n *        specified `characters`.\n * @param {function} callback - A function that will be called when the preloading is complete.\n */\nfunction preloadFont({font, characters, sdfGlyphSize}, callback) {\n  let text = Array.isArray(characters) ? characters.join('\\n') : '' + characters;\n  getTextRenderInfo({ font, sdfGlyphSize, text }, callback);\n}\n\n\n// Local assign impl so we don't have to import troika-core\nfunction assign(toObj, fromObj) {\n  for (let key in fromObj) {\n    if (fromObj.hasOwnProperty(key)) {\n      toObj[key] = fromObj[key];\n    }\n  }\n  return toObj\n}\n\n// Utility for making URLs absolute\nlet linkEl;\nfunction toAbsoluteURL(path) {\n  if (!linkEl) {\n    linkEl = typeof document === 'undefined' ? {} : document.createElement('a');\n  }\n  linkEl.href = path;\n  return linkEl.href\n}\n\n/**\n * Safari < v15 seems unable to use the SDF webgl canvas as a texture. This applies a workaround\n * where it reads the pixels out of that canvas and uploads them as a data texture instead, at\n * a slight performance cost.\n */\nfunction safariPre15Workaround(atlas) {\n  // Use createImageBitmap support as a proxy for Safari<15, all other mainstream browsers\n  // have supported it for a long while so any false positives should be minimal.\n  if (typeof createImageBitmap !== 'function') {\n    console.info('Safari<15: applying SDF canvas workaround');\n    const {sdfCanvas, sdfTexture} = atlas;\n    const {width, height} = sdfCanvas;\n    const gl = atlas.sdfCanvas.getContext('webgl');\n    let pixels = sdfTexture.image.data;\n    if (!pixels || pixels.length !== width * height * 4) {\n      pixels = new Uint8Array(width * height * 4);\n      sdfTexture.image = {width, height, data: pixels};\n      sdfTexture.flipY = false;\n      sdfTexture.isDataTexture = true;\n    }\n    gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n  }\n}\n\n\nconst typesetterWorkerModule = /*#__PURE__*/defineWorkerModule({\n  name: 'Typesetter',\n  dependencies: [\n    CONFIG,\n    workerModule,\n    createTypesetter,\n    bidiFactory\n  ],\n  init(config, fontParser, createTypesetter, bidiFactory) {\n    const {defaultFontURL} = config;\n    return createTypesetter(fontParser, bidiFactory(), { defaultFontURL })\n  }\n});\n\nconst typesetInWorker = /*#__PURE__*/defineWorkerModule({\n  name: 'Typesetter',\n  dependencies: [\n    typesetterWorkerModule,\n    ThenableWorkerModule\n  ],\n  init(typesetter, Thenable) {\n    return function(args) {\n      const thenable = new Thenable();\n      typesetter.typeset(args, thenable.resolve);\n      return thenable\n    }\n  },\n  getTransferables(result) {\n    // Mark array buffers as transferable to avoid cloning during postMessage\n    const transferables = [\n      result.glyphPositions.buffer,\n      result.glyphIds.buffer\n    ];\n    if (result.caretPositions) {\n      transferables.push(result.caretPositions.buffer);\n    }\n    if (result.glyphColors) {\n      transferables.push(result.glyphColors.buffer);\n    }\n    return transferables\n  }\n});\n\nfunction dumpSDFTextures() {\n  Object.keys(atlases).forEach(size => {\n    const canvas = atlases[size].sdfCanvas;\n    const {width, height} = canvas;\n    console.log(\"%c.\", `\n      background: url(${canvas.toDataURL()});\n      background-size: ${width}px ${height}px;\n      color: transparent;\n      font-size: 0;\n      line-height: ${height}px;\n      padding-left: ${width}px;\n    `);\n  });\n}\n\nconst GlyphsGeometry = /*#__PURE__*/(() => {\n\n  const templateGeometries = {};\n  function getTemplateGeometry(detail) {\n    let geom = templateGeometries[detail];\n    if (!geom) {\n      // Geometry is two planes back-to-back, which will always be rendered FrontSide only but\n      // appear as DoubleSide by default. FrontSide/BackSide are emulated using drawRange.\n      // We do it this way to avoid the performance hit of two draw calls for DoubleSide materials\n      // introduced by Three.js in r130 - see https://github.com/mrdoob/three.js/pull/21967\n      const front = new PlaneBufferGeometry(1, 1, detail, detail);\n      const back = front.clone();\n      const frontAttrs = front.attributes;\n      const backAttrs = back.attributes;\n      const combined = new BufferGeometry();\n      const vertCount = frontAttrs.uv.count;\n      for (let i = 0; i < vertCount; i++) {\n        backAttrs.position.array[i * 3] *= -1; // flip position x\n        backAttrs.normal.array[i * 3 + 2] *= -1; // flip normal z\n      }\n['position', 'normal', 'uv'].forEach(name => {\n        combined.setAttribute(name, new Float32BufferAttribute(\n          [...frontAttrs[name].array, ...backAttrs[name].array],\n          frontAttrs[name].itemSize)\n        );\n      });\n      combined.setIndex([...front.index.array, ...back.index.array.map(n => n + vertCount)]);\n      combined.translate(0.5, 0.5, 0);\n      geom = templateGeometries[detail] = combined;\n    }\n    return geom\n  }\n\n  const glyphBoundsAttrName = 'aTroikaGlyphBounds';\n  const glyphIndexAttrName = 'aTroikaGlyphIndex';\n  const glyphColorAttrName = 'aTroikaGlyphColor';\n\n  /**\n  @class GlyphsGeometry\n\n  A specialized Geometry for rendering a set of text glyphs. Uses InstancedBufferGeometry to\n  render the glyphs using GPU instancing of a single quad, rather than constructing a whole\n  geometry with vertices, for much smaller attribute arraybuffers according to this math:\n\n    Where N = number of glyphs...\n\n    Instanced:\n    - position: 4 * 3\n    - index: 2 * 3\n    - normal: 4 * 3\n    - uv: 4 * 2\n    - glyph x/y bounds: N * 4\n    - glyph indices: N * 1\n    = 5N + 38\n\n    Non-instanced:\n    - position: N * 4 * 3\n    - index: N * 2 * 3\n    - normal: N * 4 * 3\n    - uv: N * 4 * 2\n    - glyph indices: N * 1\n    = 39N\n\n  A downside of this is the rare-but-possible lack of the instanced arrays extension,\n  which we could potentially work around with a fallback non-instanced implementation.\n\n  */\n  class GlyphsGeometry extends InstancedBufferGeometry {\n    constructor() {\n      super();\n\n      this.detail = 1;\n      this.curveRadius = 0;\n\n      // Define groups for rendering text outline as a separate pass; these will only\n      // be used when the `material` getter returns an array, i.e. outlineWidth > 0.\n      this.groups = [\n        {start: 0, count: Infinity, materialIndex: 0},\n        {start: 0, count: Infinity, materialIndex: 1}\n      ];\n\n      // Preallocate empty bounding objects\n      this.boundingSphere = new Sphere();\n      this.boundingBox = new Box3();\n    }\n\n    computeBoundingSphere () {\n      // No-op; we'll sync the boundingSphere proactively when needed.\n    }\n\n    computeBoundingBox() {\n      // No-op; we'll sync the boundingBox proactively when needed.\n    }\n\n    // Since our base geometry contains triangles for both front and back sides, we can emulate\n    // the \"side\" by restricting the draw range.\n    setSide(side) {\n      const verts = this.getIndex().count;\n      this.setDrawRange(side === BackSide ? verts / 2 : 0, side === DoubleSide ? verts : verts / 2);\n    }\n\n    set detail(detail) {\n      if (detail !== this._detail) {\n        this._detail = detail;\n        if (typeof detail !== 'number' || detail < 1) {\n          detail = 1;\n        }\n        let tpl = getTemplateGeometry(detail)\n        ;['position', 'normal', 'uv'].forEach(attr => {\n          this.attributes[attr] = tpl.attributes[attr].clone();\n        });\n        this.setIndex(tpl.getIndex().clone());\n      }\n    }\n    get detail() {\n      return this._detail\n    }\n\n    set curveRadius(r) {\n      if (r !== this._curveRadius) {\n        this._curveRadius = r;\n        this._updateBounds();\n      }\n    }\n    get curveRadius() {\n      return this._curveRadius\n    }\n\n    /**\n     * Update the geometry for a new set of glyphs.\n     * @param {Float32Array} glyphBounds - An array holding the planar bounds for all glyphs\n     *        to be rendered, 4 entries for each glyph: x1,x2,y1,y1\n     * @param {Float32Array} glyphAtlasIndices - An array holding the index of each glyph within\n     *        the SDF atlas texture.\n     * @param {Array} blockBounds - An array holding the [minX, minY, maxX, maxY] across all glyphs\n     * @param {Array} [chunkedBounds] - An array of objects describing bounds for each chunk of N\n     *        consecutive glyphs: `{start:N, end:N, rect:[minX, minY, maxX, maxY]}`. This can be\n     *        used with `applyClipRect` to choose an optimized `instanceCount`.\n     * @param {Uint8Array} [glyphColors] - An array holding r,g,b values for each glyph.\n     */\n    updateGlyphs(glyphBounds, glyphAtlasIndices, blockBounds, chunkedBounds, glyphColors) {\n      // Update the instance attributes\n      updateBufferAttr(this, glyphBoundsAttrName, glyphBounds, 4);\n      updateBufferAttr(this, glyphIndexAttrName, glyphAtlasIndices, 1);\n      updateBufferAttr(this, glyphColorAttrName, glyphColors, 3);\n      this._blockBounds = blockBounds;\n      this._chunkedBounds = chunkedBounds;\n      setInstanceCount(this, glyphAtlasIndices.length);\n      this._updateBounds();\n    }\n\n    _updateBounds() {\n      const bounds = this._blockBounds;\n      if (bounds) {\n        const { curveRadius, boundingBox: bbox } = this;\n        if (curveRadius) {\n          const { PI, floor, min, max, sin, cos } = Math;\n          const halfPi = PI / 2;\n          const twoPi = PI * 2;\n          const absR = Math.abs(curveRadius);\n          const leftAngle = bounds[0] / absR;\n          const rightAngle = bounds[2] / absR;\n          const minX = floor((leftAngle + halfPi) / twoPi) !== floor((rightAngle + halfPi) / twoPi)\n            ? -absR : min(sin(leftAngle) * absR, sin(rightAngle) * absR);\n          const maxX = floor((leftAngle - halfPi) / twoPi) !== floor((rightAngle - halfPi) / twoPi)\n            ? absR : max(sin(leftAngle) * absR, sin(rightAngle) * absR);\n          const maxZ = floor((leftAngle + PI) / twoPi) !== floor((rightAngle + PI) / twoPi)\n            ? absR * 2 : max(absR - cos(leftAngle) * absR, absR - cos(rightAngle) * absR);\n          bbox.min.set(minX, bounds[1], curveRadius < 0 ? -maxZ : 0);\n          bbox.max.set(maxX, bounds[3], curveRadius < 0 ? 0 : maxZ);\n        } else {\n          bbox.min.set(bounds[0], bounds[1], 0);\n          bbox.max.set(bounds[2], bounds[3], 0);\n        }\n        bbox.getBoundingSphere(this.boundingSphere);\n      }\n    }\n\n    /**\n     * Given a clipping rect, and the chunkedBounds from the last updateGlyphs call, choose the lowest\n     * `instanceCount` that will show all glyphs within the clipped view. This is an optimization\n     * for long blocks of text that are clipped, to skip vertex shader evaluation for glyphs that would\n     * be clipped anyway.\n     *\n     * Note that since `drawElementsInstanced[ANGLE]` only accepts an instance count and not a starting\n     * offset, this optimization becomes less effective as the clipRect moves closer to the end of the\n     * text block. We could fix that by switching from instancing to a full geometry with a drawRange,\n     * but at the expense of much larger attribute buffers (see classdoc above.)\n     *\n     * @param {Vector4} clipRect\n     */\n    applyClipRect(clipRect) {\n      let count = this.getAttribute(glyphIndexAttrName).count;\n      let chunks = this._chunkedBounds;\n      if (chunks) {\n        for (let i = chunks.length; i--;) {\n          count = chunks[i].end;\n          let rect = chunks[i].rect;\n          // note: both rects are l-b-r-t\n          if (rect[1] < clipRect.w && rect[3] > clipRect.y && rect[0] < clipRect.z && rect[2] > clipRect.x) {\n            break\n          }\n        }\n      }\n      setInstanceCount(this, count);\n    }\n  }\n\n  // Compat for pre r109:\n  if (!GlyphsGeometry.prototype.setAttribute) {\n    GlyphsGeometry.prototype.setAttribute = function(name, attribute) {\n      this.attributes[ name ] = attribute;\n      return this\n    };\n  }\n\n\n  function updateBufferAttr(geom, attrName, newArray, itemSize) {\n    const attr = geom.getAttribute(attrName);\n    if (newArray) {\n      // If length isn't changing, just update the attribute's array data\n      if (attr && attr.array.length === newArray.length) {\n        attr.array.set(newArray);\n        attr.needsUpdate = true;\n      } else {\n        geom.setAttribute(attrName, new InstancedBufferAttribute(newArray, itemSize));\n        // If the new attribute has a different size, we also have to (as of r117) manually clear the\n        // internal cached max instance count. See https://github.com/mrdoob/three.js/issues/19706\n        // It's unclear if this is a threejs bug or a truly unsupported scenario; discussion in\n        // that ticket is ambiguous as to whether replacing a BufferAttribute with one of a\n        // different size is supported, but https://github.com/mrdoob/three.js/pull/17418 strongly\n        // implies it should be supported. It's possible we need to\n        delete geom._maxInstanceCount; //for r117+, could be fragile\n        geom.dispose(); //for r118+, more robust feeling, but more heavy-handed than I'd like\n      }\n    } else if (attr) {\n      geom.deleteAttribute(attrName);\n    }\n  }\n\n  // Handle maxInstancedCount -> instanceCount rename that happened in three r117\n  function setInstanceCount(geom, count) {\n    geom[geom.hasOwnProperty('instanceCount') ? 'instanceCount' : 'maxInstancedCount'] = count;\n  }\n\n  return GlyphsGeometry\n})();\n\n// language=GLSL\nconst VERTEX_DEFS = `\nuniform vec2 uTroikaSDFTextureSize;\nuniform float uTroikaSDFGlyphSize;\nuniform vec4 uTroikaTotalBounds;\nuniform vec4 uTroikaClipRect;\nuniform mat3 uTroikaOrient;\nuniform bool uTroikaUseGlyphColors;\nuniform float uTroikaDistanceOffset;\nuniform float uTroikaBlurRadius;\nuniform vec2 uTroikaPositionOffset;\nuniform float uTroikaCurveRadius;\nattribute vec4 aTroikaGlyphBounds;\nattribute float aTroikaGlyphIndex;\nattribute vec3 aTroikaGlyphColor;\nvarying vec2 vTroikaGlyphUV;\nvarying vec4 vTroikaTextureUVBounds;\nvarying float vTroikaTextureChannel;\nvarying vec3 vTroikaGlyphColor;\nvarying vec2 vTroikaGlyphDimensions;\n`;\n\n// language=GLSL prefix=\"void main() {\" suffix=\"}\"\nconst VERTEX_TRANSFORM = `\nvec4 bounds = aTroikaGlyphBounds;\nbounds.xz += uTroikaPositionOffset.x;\nbounds.yw -= uTroikaPositionOffset.y;\n\nvec4 outlineBounds = vec4(\n  bounds.xy - uTroikaDistanceOffset - uTroikaBlurRadius,\n  bounds.zw + uTroikaDistanceOffset + uTroikaBlurRadius\n);\nvec4 clippedBounds = vec4(\n  clamp(outlineBounds.xy, uTroikaClipRect.xy, uTroikaClipRect.zw),\n  clamp(outlineBounds.zw, uTroikaClipRect.xy, uTroikaClipRect.zw)\n);\n\nvec2 clippedXY = (mix(clippedBounds.xy, clippedBounds.zw, position.xy) - bounds.xy) / (bounds.zw - bounds.xy);\n\nposition.xy = mix(bounds.xy, bounds.zw, clippedXY);\n\nuv = (position.xy - uTroikaTotalBounds.xy) / (uTroikaTotalBounds.zw - uTroikaTotalBounds.xy);\n\nfloat rad = uTroikaCurveRadius;\nif (rad != 0.0) {\n  float angle = position.x / rad;\n  position.xz = vec2(sin(angle) * rad, rad - cos(angle) * rad);\n  normal.xz = vec2(sin(angle), cos(angle));\n}\n  \nposition = uTroikaOrient * position;\nnormal = uTroikaOrient * normal;\n\nvTroikaGlyphUV = clippedXY.xy;\nvTroikaGlyphDimensions = vec2(bounds[2] - bounds[0], bounds[3] - bounds[1]);\n\n${''/* NOTE: it seems important to calculate the glyph's bounding texture UVs here in the\n  vertex shader, rather than in the fragment shader, as the latter gives strange artifacts\n  on some glyphs (those in the leftmost texture column) on some systems. The exact reason\n  isn't understood but doing this here, then mix()-ing in the fragment shader, seems to work. */}\nfloat txCols = uTroikaSDFTextureSize.x / uTroikaSDFGlyphSize;\nvec2 txUvPerSquare = uTroikaSDFGlyphSize / uTroikaSDFTextureSize;\nvec2 txStartUV = txUvPerSquare * vec2(\n  mod(floor(aTroikaGlyphIndex / 4.0), txCols),\n  floor(floor(aTroikaGlyphIndex / 4.0) / txCols)\n);\nvTroikaTextureUVBounds = vec4(txStartUV, vec2(txStartUV) + txUvPerSquare);\nvTroikaTextureChannel = mod(aTroikaGlyphIndex, 4.0);\n`;\n\n// language=GLSL\nconst FRAGMENT_DEFS = `\nuniform sampler2D uTroikaSDFTexture;\nuniform vec2 uTroikaSDFTextureSize;\nuniform float uTroikaSDFGlyphSize;\nuniform float uTroikaSDFExponent;\nuniform float uTroikaDistanceOffset;\nuniform float uTroikaFillOpacity;\nuniform float uTroikaOutlineOpacity;\nuniform float uTroikaBlurRadius;\nuniform vec3 uTroikaStrokeColor;\nuniform float uTroikaStrokeWidth;\nuniform float uTroikaStrokeOpacity;\nuniform bool uTroikaSDFDebug;\nvarying vec2 vTroikaGlyphUV;\nvarying vec4 vTroikaTextureUVBounds;\nvarying float vTroikaTextureChannel;\nvarying vec2 vTroikaGlyphDimensions;\n\nfloat troikaSdfValueToSignedDistance(float alpha) {\n  // Inverse of exponential encoding in webgl-sdf-generator\n  ${''/* TODO - there's some slight inaccuracy here when dealing with interpolated alpha values; those\n    are linearly interpolated where the encoding is exponential. Look into improving this by rounding\n    to nearest 2 whole texels, decoding those exponential values, and linearly interpolating the result.\n  */}\n  float maxDimension = max(vTroikaGlyphDimensions.x, vTroikaGlyphDimensions.y);\n  float absDist = (1.0 - pow(2.0 * (alpha > 0.5 ? 1.0 - alpha : alpha), 1.0 / uTroikaSDFExponent)) * maxDimension;\n  float signedDist = absDist * (alpha > 0.5 ? -1.0 : 1.0);\n  return signedDist;\n}\n\nfloat troikaGlyphUvToSdfValue(vec2 glyphUV) {\n  vec2 textureUV = mix(vTroikaTextureUVBounds.xy, vTroikaTextureUVBounds.zw, glyphUV);\n  vec4 rgba = texture2D(uTroikaSDFTexture, textureUV);\n  float ch = floor(vTroikaTextureChannel + 0.5); //NOTE: can't use round() in WebGL1\n  return ch == 0.0 ? rgba.r : ch == 1.0 ? rgba.g : ch == 2.0 ? rgba.b : rgba.a;\n}\n\nfloat troikaGlyphUvToDistance(vec2 uv) {\n  return troikaSdfValueToSignedDistance(troikaGlyphUvToSdfValue(uv));\n}\n\nfloat troikaGetAADist() {\n  ${''/*\n    When the standard derivatives extension is available, we choose an antialiasing alpha threshold based\n    on the potential change in the SDF's alpha from this fragment to its neighbor. This strategy maximizes \n    readability and edge crispness at all sizes and screen resolutions.\n  */}\n  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300\n  return length(fwidth(vTroikaGlyphUV * vTroikaGlyphDimensions)) * 0.5;\n  #else\n  return vTroikaGlyphDimensions.x / 64.0;\n  #endif\n}\n\nfloat troikaGetFragDistValue() {\n  vec2 clampedGlyphUV = clamp(vTroikaGlyphUV, 0.5 / uTroikaSDFGlyphSize, 1.0 - 0.5 / uTroikaSDFGlyphSize);\n  float distance = troikaGlyphUvToDistance(clampedGlyphUV);\n \n  // Extrapolate distance when outside bounds:\n  distance += clampedGlyphUV == vTroikaGlyphUV ? 0.0 : \n    length((vTroikaGlyphUV - clampedGlyphUV) * vTroikaGlyphDimensions);\n\n  ${''/* \n  // TODO more refined extrapolated distance by adjusting for angle of gradient at edge...\n  // This has potential but currently gives very jagged extensions, maybe due to precision issues?\n  float uvStep = 1.0 / uTroikaSDFGlyphSize;\n  vec2 neighbor1UV = clampedGlyphUV + (\n    vTroikaGlyphUV.x != clampedGlyphUV.x ? vec2(0.0, uvStep * sign(0.5 - vTroikaGlyphUV.y)) :\n    vTroikaGlyphUV.y != clampedGlyphUV.y ? vec2(uvStep * sign(0.5 - vTroikaGlyphUV.x), 0.0) :\n    vec2(0.0)\n  );\n  vec2 neighbor2UV = clampedGlyphUV + (\n    vTroikaGlyphUV.x != clampedGlyphUV.x ? vec2(0.0, uvStep * -sign(0.5 - vTroikaGlyphUV.y)) :\n    vTroikaGlyphUV.y != clampedGlyphUV.y ? vec2(uvStep * -sign(0.5 - vTroikaGlyphUV.x), 0.0) :\n    vec2(0.0)\n  );\n  float neighbor1Distance = troikaGlyphUvToDistance(neighbor1UV);\n  float neighbor2Distance = troikaGlyphUvToDistance(neighbor2UV);\n  float distToUnclamped = length((vTroikaGlyphUV - clampedGlyphUV) * vTroikaGlyphDimensions);\n  float distToNeighbor = length((clampedGlyphUV - neighbor1UV) * vTroikaGlyphDimensions);\n  float gradientAngle1 = min(asin(abs(neighbor1Distance - distance) / distToNeighbor), PI / 2.0);\n  float gradientAngle2 = min(asin(abs(neighbor2Distance - distance) / distToNeighbor), PI / 2.0);\n  distance += (cos(gradientAngle1) + cos(gradientAngle2)) / 2.0 * distToUnclamped;\n  */}\n\n  return distance;\n}\n\nfloat troikaGetEdgeAlpha(float distance, float distanceOffset, float aaDist) {\n  #if defined(IS_DEPTH_MATERIAL) || defined(IS_DISTANCE_MATERIAL)\n  float alpha = step(-distanceOffset, -distance);\n  #else\n\n  float alpha = smoothstep(\n    distanceOffset + aaDist,\n    distanceOffset - aaDist,\n    distance\n  );\n  #endif\n\n  return alpha;\n}\n`;\n\n// language=GLSL prefix=\"void main() {\" suffix=\"}\"\nconst FRAGMENT_TRANSFORM = `\nfloat aaDist = troikaGetAADist();\nfloat fragDistance = troikaGetFragDistValue();\nfloat edgeAlpha = uTroikaSDFDebug ?\n  troikaGlyphUvToSdfValue(vTroikaGlyphUV) :\n  troikaGetEdgeAlpha(fragDistance, uTroikaDistanceOffset, max(aaDist, uTroikaBlurRadius));\n\n#if !defined(IS_DEPTH_MATERIAL) && !defined(IS_DISTANCE_MATERIAL)\nvec4 fillRGBA = gl_FragColor;\nfillRGBA.a *= uTroikaFillOpacity;\nvec4 strokeRGBA = uTroikaStrokeWidth == 0.0 ? fillRGBA : vec4(uTroikaStrokeColor, uTroikaStrokeOpacity);\nif (fillRGBA.a == 0.0) fillRGBA.rgb = strokeRGBA.rgb;\ngl_FragColor = mix(fillRGBA, strokeRGBA, smoothstep(\n  -uTroikaStrokeWidth - aaDist,\n  -uTroikaStrokeWidth + aaDist,\n  fragDistance\n));\ngl_FragColor.a *= edgeAlpha;\n#endif\n\nif (edgeAlpha == 0.0) {\n  discard;\n}\n`;\n\n\n/**\n * Create a material for rendering text, derived from a baseMaterial\n */\nfunction createTextDerivedMaterial(baseMaterial) {\n  const textMaterial = createDerivedMaterial(baseMaterial, {\n    chained: true,\n    extensions: {\n      derivatives: true\n    },\n    uniforms: {\n      uTroikaSDFTexture: {value: null},\n      uTroikaSDFTextureSize: {value: new Vector2()},\n      uTroikaSDFGlyphSize: {value: 0},\n      uTroikaSDFExponent: {value: 0},\n      uTroikaTotalBounds: {value: new Vector4(0,0,0,0)},\n      uTroikaClipRect: {value: new Vector4(0,0,0,0)},\n      uTroikaDistanceOffset: {value: 0},\n      uTroikaOutlineOpacity: {value: 0},\n      uTroikaFillOpacity: {value: 1},\n      uTroikaPositionOffset: {value: new Vector2()},\n      uTroikaCurveRadius: {value: 0},\n      uTroikaBlurRadius: {value: 0},\n      uTroikaStrokeWidth: {value: 0},\n      uTroikaStrokeColor: {value: new Color()},\n      uTroikaStrokeOpacity: {value: 1},\n      uTroikaOrient: {value: new Matrix3()},\n      uTroikaUseGlyphColors: {value: true},\n      uTroikaSDFDebug: {value: false}\n    },\n    vertexDefs: VERTEX_DEFS,\n    vertexTransform: VERTEX_TRANSFORM,\n    fragmentDefs: FRAGMENT_DEFS,\n    fragmentColorTransform: FRAGMENT_TRANSFORM,\n    customRewriter({vertexShader, fragmentShader}) {\n      let uDiffuseRE = /\\buniform\\s+vec3\\s+diffuse\\b/;\n      if (uDiffuseRE.test(fragmentShader)) {\n        // Replace all instances of `diffuse` with our varying\n        fragmentShader = fragmentShader\n          .replace(uDiffuseRE, 'varying vec3 vTroikaGlyphColor')\n          .replace(/\\bdiffuse\\b/g, 'vTroikaGlyphColor');\n        // Make sure the vertex shader declares the uniform so we can grab it as a fallback\n        if (!uDiffuseRE.test(vertexShader)) {\n          vertexShader = vertexShader.replace(\n            voidMainRegExp,\n            'uniform vec3 diffuse;\\n$&\\nvTroikaGlyphColor = uTroikaUseGlyphColors ? aTroikaGlyphColor / 255.0 : diffuse;\\n'\n          );\n        }\n      }\n      return { vertexShader, fragmentShader }\n    }\n  });\n\n  // Force transparency - TODO is this reasonable?\n  textMaterial.transparent = true;\n\n  Object.defineProperties(textMaterial, {\n    isTroikaTextMaterial: {value: true},\n\n    // WebGLShadowMap reverses the side of the shadow material by default, which fails\n    // for planes, so here we force the `shadowSide` to always match the main side.\n    shadowSide: {\n      get() {\n        return this.side\n      },\n      set() {\n        //no-op\n      }\n    }\n  });\n\n  return textMaterial\n}\n\nconst Text = /*#__PURE__*/(() => {\n\n  const defaultMaterial = new MeshBasicMaterial({\n    color: 0xffffff,\n    side: DoubleSide,\n    transparent: true\n  });\n  const defaultStrokeColor = 0x808080;\n\n  const tempMat4 = new Matrix4();\n  const tempVec3a = new Vector3();\n  const tempVec3b = new Vector3();\n  const tempArray = [];\n  const origin = new Vector3();\n  const defaultOrient = '+x+y';\n\n  function first(o) {\n    return Array.isArray(o) ? o[0] : o\n  }\n\n  let getFlatRaycastMesh = () => {\n    const mesh = new Mesh(\n      new PlaneBufferGeometry(1, 1),\n      defaultMaterial\n    );\n    getFlatRaycastMesh = () => mesh;\n    return mesh\n  };\n  let getCurvedRaycastMesh = () => {\n    const mesh = new Mesh(\n      new PlaneBufferGeometry(1, 1, 32, 1),\n      defaultMaterial\n    );\n    getCurvedRaycastMesh = () => mesh;\n    return mesh\n  };\n\n  const syncStartEvent = {type: 'syncstart'};\n  const syncCompleteEvent = {type: 'synccomplete'};\n\n  const SYNCABLE_PROPS = [\n    'font',\n    'fontSize',\n    'letterSpacing',\n    'lineHeight',\n    'maxWidth',\n    'overflowWrap',\n    'text',\n    'direction',\n    'textAlign',\n    'textIndent',\n    'whiteSpace',\n    'anchorX',\n    'anchorY',\n    'colorRanges',\n    'sdfGlyphSize'\n  ];\n\n  const COPYABLE_PROPS = SYNCABLE_PROPS.concat(\n    'material',\n    'color',\n    'depthOffset',\n    'clipRect',\n    'curveRadius',\n    'orientation',\n    'glyphGeometryDetail'\n  );\n\n\n\n  /**\n   * @class Text\n   *\n   * A ThreeJS Mesh that renders a string of text on a plane in 3D space using signed distance\n   * fields (SDF).\n   */\n  class Text extends Mesh {\n    constructor() {\n      const geometry = new GlyphsGeometry();\n      super(geometry, null);\n\n      // === Text layout properties: === //\n\n      /**\n       * @member {string} text\n       * The string of text to be rendered.\n       */\n      this.text = '';\n\n      /**\n       * @deprecated Use `anchorX` and `anchorY` instead\n       * @member {Array<number>} anchor\n       * Defines where in the text block should correspond to the mesh's local position, as a set\n       * of horizontal and vertical percentages from 0 to 1. A value of `[0, 0]` (the default)\n       * anchors at the top-left, `[1, 1]` at the bottom-right, and `[0.5, 0.5]` centers the\n       * block at the mesh's position.\n       */\n      //this.anchor = null\n\n      /**\n       * @member {number|string} anchorX\n       * Defines the horizontal position in the text block that should line up with the local origin.\n       * Can be specified as a numeric x position in local units, a string percentage of the total\n       * text block width e.g. `'25%'`, or one of the following keyword strings: 'left', 'center',\n       * or 'right'.\n       */\n      this.anchorX = 0;\n\n      /**\n       * @member {number|string} anchorX\n       * Defines the vertical position in the text block that should line up with the local origin.\n       * Can be specified as a numeric y position in local units (note: down is negative y), a string\n       * percentage of the total text block height e.g. `'25%'`, or one of the following keyword strings:\n       * 'top', 'top-baseline', 'middle', 'bottom-baseline', or 'bottom'.\n       */\n      this.anchorY = 0;\n\n      /**\n       * @member {number} curveRadius\n       * Defines a cylindrical radius along which the text's plane will be curved. Positive numbers put\n       * the cylinder's centerline (oriented vertically) that distance in front of the text, for a concave\n       * curvature, while negative numbers put it behind the text for a convex curvature. The centerline\n       * will be aligned with the text's local origin; you can use `anchorX` to offset it.\n       *\n       * Since each glyph is by default rendered with a simple quad, each glyph remains a flat plane\n       * internally. You can use `glyphGeometryDetail` to add more vertices for curvature inside glyphs.\n       */\n      this.curveRadius = 0;\n\n      /**\n       * @member {string} direction\n       * Sets the base direction for the text. The default value of \"auto\" will choose a direction based\n       * on the text's content according to the bidi spec. A value of \"ltr\" or \"rtl\" will force the direction.\n       */\n      this.direction = 'auto';\n\n      /**\n       * @member {string} font\n       * URL of a custom font to be used. Font files can be in .ttf, .otf, or .woff (not .woff2) formats.\n       * Defaults to the Roboto font loaded from Google Fonts.\n       */\n      this.font = null; //will use default from TextBuilder\n\n      /**\n       * @member {number} fontSize\n       * The size at which to render the font in local units; corresponds to the em-box height\n       * of the chosen `font`.\n       */\n      this.fontSize = 0.1;\n\n      /**\n       * @member {number} letterSpacing\n       * Sets a uniform adjustment to spacing between letters after kerning is applied. Positive\n       * numbers increase spacing and negative numbers decrease it.\n       */\n      this.letterSpacing = 0;\n\n      /**\n       * @member {number|string} lineHeight\n       * Sets the height of each line of text, as a multiple of the `fontSize`. Defaults to 'normal'\n       * which chooses a reasonable height based on the chosen font's ascender/descender metrics.\n       */\n      this.lineHeight = 'normal';\n\n      /**\n       * @member {number} maxWidth\n       * The maximum width of the text block, above which text may start wrapping according to the\n       * `whiteSpace` and `overflowWrap` properties.\n       */\n      this.maxWidth = Infinity;\n\n      /**\n       * @member {string} overflowWrap\n       * Defines how text wraps if the `whiteSpace` property is `normal`. Can be either `'normal'`\n       * to break at whitespace characters, or `'break-word'` to allow breaking within words.\n       * Defaults to `'normal'`.\n       */\n      this.overflowWrap = 'normal';\n\n      /**\n       * @member {string} textAlign\n       * The horizontal alignment of each line of text within the overall text bounding box.\n       */\n      this.textAlign = 'left';\n\n      /**\n       * @member {number} textIndent\n       * Indentation for the first character of a line; see CSS `text-indent`.\n       */\n      this.textIndent = 0;\n\n      /**\n       * @member {string} whiteSpace\n       * Defines whether text should wrap when a line reaches the `maxWidth`. Can\n       * be either `'normal'` (the default), to allow wrapping according to the `overflowWrap` property,\n       * or `'nowrap'` to prevent wrapping. Note that `'normal'` here honors newline characters to\n       * manually break lines, making it behave more like `'pre-wrap'` does in CSS.\n       */\n      this.whiteSpace = 'normal';\n\n\n      // === Presentation properties: === //\n\n      /**\n       * @member {THREE.Material} material\n       * Defines a _base_ material to be used when rendering the text. This material will be\n       * automatically replaced with a material derived from it, that adds shader code to\n       * decrease the alpha for each fragment (pixel) outside the text glyphs, with antialiasing.\n       * By default it will derive from a simple white MeshBasicMaterial, but you can use any\n       * of the other mesh materials to gain other features like lighting, texture maps, etc.\n       *\n       * Also see the `color` shortcut property.\n       */\n      this.material = null;\n\n      /**\n       * @member {string|number|THREE.Color} color\n       * This is a shortcut for setting the `color` of the text's material. You can use this\n       * if you don't want to specify a whole custom `material`. Also, if you do use a custom\n       * `material`, this color will only be used for this particuar Text instance, even if\n       * that same material instance is shared across multiple Text objects.\n       */\n      this.color = null;\n\n      /**\n       * @member {object|null} colorRanges\n       * WARNING: This API is experimental and may change.\n       * This allows more fine-grained control of colors for individual or ranges of characters,\n       * taking precedence over the material's `color`. Its format is an Object whose keys each\n       * define a starting character index for a range, and whose values are the color for each\n       * range. The color value can be a numeric hex color value, a `THREE.Color` object, or\n       * any of the strings accepted by `THREE.Color`.\n       */\n      this.colorRanges = null;\n\n      /**\n       * @member {number|string} outlineWidth\n       * WARNING: This API is experimental and may change.\n       * The width of an outline/halo to be drawn around each text glyph using the `outlineColor` and `outlineOpacity`.\n       * Can be specified as either an absolute number in local units, or as a percentage string e.g.\n       * `\"12%\"` which is treated as a percentage of the `fontSize`. Defaults to `0`, which means\n       * no outline will be drawn unless an `outlineOffsetX/Y` or `outlineBlur` is set.\n       */\n      this.outlineWidth = 0;\n\n      /**\n       * @member {string|number|THREE.Color} outlineColor\n       * WARNING: This API is experimental and may change.\n       * The color of the text outline, if `outlineWidth`/`outlineBlur`/`outlineOffsetX/Y` are set.\n       * Defaults to black.\n       */\n      this.outlineColor = 0x000000;\n\n      /**\n       * @member {number} outlineOpacity\n       * WARNING: This API is experimental and may change.\n       * The opacity of the outline, if `outlineWidth`/`outlineBlur`/`outlineOffsetX/Y` are set.\n       * Defaults to `1`.\n       */\n      this.outlineOpacity = 1;\n\n      /**\n       * @member {number|string} outlineBlur\n       * WARNING: This API is experimental and may change.\n       * A blur radius applied to the outer edge of the text's outline. If the `outlineWidth` is\n       * zero, the blur will be applied at the glyph edge, like CSS's `text-shadow` blur radius.\n       * Can be specified as either an absolute number in local units, or as a percentage string e.g.\n       * `\"12%\"` which is treated as a percentage of the `fontSize`. Defaults to `0`.\n       */\n      this.outlineBlur = 0;\n\n      /**\n       * @member {number|string} outlineOffsetX\n       * WARNING: This API is experimental and may change.\n       * A horizontal offset for the text outline.\n       * Can be specified as either an absolute number in local units, or as a percentage string e.g. `\"12%\"`\n       * which is treated as a percentage of the `fontSize`. Defaults to `0`.\n       */\n      this.outlineOffsetX = 0;\n\n      /**\n       * @member {number|string} outlineOffsetY\n       * WARNING: This API is experimental and may change.\n       * A vertical offset for the text outline.\n       * Can be specified as either an absolute number in local units, or as a percentage string e.g. `\"12%\"`\n       * which is treated as a percentage of the `fontSize`. Defaults to `0`.\n       */\n      this.outlineOffsetY = 0;\n\n      /**\n       * @member {number|string} strokeWidth\n       * WARNING: This API is experimental and may change.\n       * The width of an inner stroke drawn inside each text glyph using the `strokeColor` and `strokeOpacity`.\n       * Can be specified as either an absolute number in local units, or as a percentage string e.g. `\"12%\"`\n       * which is treated as a percentage of the `fontSize`. Defaults to `0`.\n       */\n      this.strokeWidth = 0;\n\n      /**\n       * @member {string|number|THREE.Color} strokeColor\n       * WARNING: This API is experimental and may change.\n       * The color of the text stroke, if `strokeWidth` is greater than zero. Defaults to gray.\n       */\n      this.strokeColor = defaultStrokeColor;\n\n      /**\n       * @member {number} strokeOpacity\n       * WARNING: This API is experimental and may change.\n       * The opacity of the stroke, if `strokeWidth` is greater than zero. Defaults to `1`.\n       */\n      this.strokeOpacity = 1;\n\n      /**\n       * @member {number} fillOpacity\n       * WARNING: This API is experimental and may change.\n       * The opacity of the glyph's fill from 0 to 1. This behaves like the material's `opacity` but allows\n       * giving the fill a different opacity than the `strokeOpacity`. A fillOpacity of `0` makes the\n       * interior of the glyph invisible, leaving just the `strokeWidth`. Defaults to `1`.\n       */\n      this.fillOpacity = 1;\n\n      /**\n       * @member {number} depthOffset\n       * This is a shortcut for setting the material's `polygonOffset` and related properties,\n       * which can be useful in preventing z-fighting when this text is laid on top of another\n       * plane in the scene. Positive numbers are further from the camera, negatives closer.\n       */\n      this.depthOffset = 0;\n\n      /**\n       * @member {Array<number>} clipRect\n       * If specified, defines a `[minX, minY, maxX, maxY]` of a rectangle outside of which all\n       * pixels will be discarded. This can be used for example to clip overflowing text when\n       * `whiteSpace='nowrap'`.\n       */\n      this.clipRect = null;\n\n      /**\n       * @member {string} orientation\n       * Defines the axis plane on which the text should be laid out when the mesh has no extra\n       * rotation transform. It is specified as a string with two axes: the horizontal axis with\n       * positive pointing right, and the vertical axis with positive pointing up. By default this\n       * is '+x+y', meaning the text sits on the xy plane with the text's top toward positive y\n       * and facing positive z. A value of '+x-z' would place it on the xz plane with the text's\n       * top toward negative z and facing positive y.\n       */\n      this.orientation = defaultOrient;\n\n      /**\n       * @member {number} glyphGeometryDetail\n       * Controls number of vertical/horizontal segments that make up each glyph's rectangular\n       * plane. Defaults to 1. This can be increased to provide more geometrical detail for custom\n       * vertex shader effects, for example.\n       */\n      this.glyphGeometryDetail = 1;\n\n      /**\n       * @member {number|null} sdfGlyphSize\n       * The size of each glyph's SDF (signed distance field) used for rendering. This must be a\n       * power-of-two number. Defaults to 64 which is generally a good balance of size and quality\n       * for most fonts. Larger sizes can improve the quality of glyph rendering by increasing\n       * the sharpness of corners and preventing loss of very thin lines, at the expense of\n       * increased memory footprint and longer SDF generation time.\n       */\n      this.sdfGlyphSize = null;\n\n      /**\n       * @member {boolean} gpuAccelerateSDF\n       * When `true`, the SDF generation process will be GPU-accelerated with WebGL when possible,\n       * making it much faster especially for complex glyphs, and falling back to a JavaScript version\n       * executed in web workers when support isn't available. It should automatically detect support,\n       * but it's still somewhat experimental, so you can set it to `false` to force it to use the JS\n       * version if you encounter issues with it.\n       */\n      this.gpuAccelerateSDF = true;\n\n      this.debugSDF = false;\n    }\n\n    /**\n     * Updates the text rendering according to the current text-related configuration properties.\n     * This is an async process, so you can pass in a callback function to be executed when it\n     * finishes.\n     * @param {function} [callback]\n     */\n    sync(callback) {\n      if (this._needsSync) {\n        this._needsSync = false;\n\n        // If there's another sync still in progress, queue\n        if (this._isSyncing) {\n          (this._queuedSyncs || (this._queuedSyncs = [])).push(callback);\n        } else {\n          this._isSyncing = true;\n          this.dispatchEvent(syncStartEvent);\n\n          getTextRenderInfo({\n            text: this.text,\n            font: this.font,\n            fontSize: this.fontSize || 0.1,\n            letterSpacing: this.letterSpacing || 0,\n            lineHeight: this.lineHeight || 'normal',\n            maxWidth: this.maxWidth,\n            direction: this.direction || 'auto',\n            textAlign: this.textAlign,\n            textIndent: this.textIndent,\n            whiteSpace: this.whiteSpace,\n            overflowWrap: this.overflowWrap,\n            anchorX: this.anchorX,\n            anchorY: this.anchorY,\n            colorRanges: this.colorRanges,\n            includeCaretPositions: true, //TODO parameterize\n            sdfGlyphSize: this.sdfGlyphSize,\n            gpuAccelerateSDF: this.gpuAccelerateSDF,\n          }, textRenderInfo => {\n            this._isSyncing = false;\n\n            // Save result for later use in onBeforeRender\n            this._textRenderInfo = textRenderInfo;\n\n            // Update the geometry attributes\n            this.geometry.updateGlyphs(\n              textRenderInfo.glyphBounds,\n              textRenderInfo.glyphAtlasIndices,\n              textRenderInfo.blockBounds,\n              textRenderInfo.chunkedBounds,\n              textRenderInfo.glyphColors\n            );\n\n            // If we had extra sync requests queued up, kick it off\n            const queued = this._queuedSyncs;\n            if (queued) {\n              this._queuedSyncs = null;\n              this._needsSync = true;\n              this.sync(() => {\n                queued.forEach(fn => fn && fn());\n              });\n            }\n\n            this.dispatchEvent(syncCompleteEvent);\n            if (callback) {\n              callback();\n            }\n          });\n        }\n      }\n    }\n\n    /**\n     * Initiate a sync if needed - note it won't complete until next frame at the\n     * earliest so if possible it's a good idea to call sync() manually as soon as\n     * all the properties have been set.\n     * @override\n     */\n    onBeforeRender(renderer, scene, camera, geometry, material, group) {\n      this.sync();\n\n      // This may not always be a text material, e.g. if there's a scene.overrideMaterial present\n      if (material.isTroikaTextMaterial) {\n        this._prepareForRender(material);\n      }\n\n      // We need to force the material to FrontSide to avoid the double-draw-call performance hit\n      // introduced in Three.js r130: https://github.com/mrdoob/three.js/pull/21967 - The sidedness\n      // is instead applied via drawRange in the GlyphsGeometry.\n      material._hadOwnSide = material.hasOwnProperty('side');\n      this.geometry.setSide(material._actualSide = material.side);\n      material.side = FrontSide;\n    }\n\n    onAfterRender(renderer, scene, camera, geometry, material, group) {\n      // Restore original material side\n      if (material._hadOwnSide) {\n        material.side = material._actualSide;\n      } else {\n        delete material.side; // back to inheriting from base material\n      }\n    }\n\n    /**\n     * Shortcut to dispose the geometry specific to this instance.\n     * Note: we don't also dispose the derived material here because if anything else is\n     * sharing the same base material it will result in a pause next frame as the program\n     * is recompiled. Instead users can dispose the base material manually, like normal,\n     * and we'll also dispose the derived material at that time.\n     */\n    dispose() {\n      this.geometry.dispose();\n    }\n\n    /**\n     * @property {TroikaTextRenderInfo|null} textRenderInfo\n     * @readonly\n     * The current processed rendering data for this TextMesh, returned by the TextBuilder after\n     * a `sync()` call. This will be `null` initially, and may be stale for a short period until\n     * the asynchrous `sync()` process completes.\n     */\n    get textRenderInfo() {\n      return this._textRenderInfo || null\n    }\n\n    // Handler for automatically wrapping the base material with our upgrades. We do the wrapping\n    // lazily on _read_ rather than write to avoid unnecessary wrapping on transient values.\n    get material() {\n      let derivedMaterial = this._derivedMaterial;\n      const baseMaterial = this._baseMaterial || this._defaultMaterial || (this._defaultMaterial = defaultMaterial.clone());\n      if (!derivedMaterial || derivedMaterial.baseMaterial !== baseMaterial) {\n        derivedMaterial = this._derivedMaterial = createTextDerivedMaterial(baseMaterial);\n        // dispose the derived material when its base material is disposed:\n        baseMaterial.addEventListener('dispose', function onDispose() {\n          baseMaterial.removeEventListener('dispose', onDispose);\n          derivedMaterial.dispose();\n        });\n      }\n      // If text outline is configured, render it as a preliminary draw using Three's multi-material\n      // feature (see GlyphsGeometry which sets up `groups` for this purpose) Doing it with multi\n      // materials ensures the layers are always rendered consecutively in a consistent order.\n      // Each layer will trigger onBeforeRender with the appropriate material.\n      if (this.outlineWidth || this.outlineBlur || this.outlineOffsetX || this.outlineOffsetY) {\n        let outlineMaterial = derivedMaterial._outlineMtl;\n        if (!outlineMaterial) {\n          outlineMaterial = derivedMaterial._outlineMtl = Object.create(derivedMaterial, {\n            id: {value: derivedMaterial.id + 0.1}\n          });\n          outlineMaterial.isTextOutlineMaterial = true;\n          outlineMaterial.depthWrite = false;\n          outlineMaterial.map = null; //???\n          derivedMaterial.addEventListener('dispose', function onDispose() {\n            derivedMaterial.removeEventListener('dispose', onDispose);\n            outlineMaterial.dispose();\n          });\n        }\n        return [\n          outlineMaterial,\n          derivedMaterial\n        ]\n      } else {\n        return derivedMaterial\n      }\n    }\n    set material(baseMaterial) {\n      if (baseMaterial && baseMaterial.isTroikaTextMaterial) { //prevent double-derivation\n        this._derivedMaterial = baseMaterial;\n        this._baseMaterial = baseMaterial.baseMaterial;\n      } else {\n        this._baseMaterial = baseMaterial;\n      }\n    }\n\n    get glyphGeometryDetail() {\n      return this.geometry.detail\n    }\n    set glyphGeometryDetail(detail) {\n      this.geometry.detail = detail;\n    }\n\n    get curveRadius() {\n      return this.geometry.curveRadius\n    }\n    set curveRadius(r) {\n      this.geometry.curveRadius = r;\n    }\n\n    // Create and update material for shadows upon request:\n    get customDepthMaterial() {\n      return first(this.material).getDepthMaterial()\n    }\n    get customDistanceMaterial() {\n      return first(this.material).getDistanceMaterial()\n    }\n\n    _prepareForRender(material) {\n      const isOutline = material.isTextOutlineMaterial;\n      const uniforms = material.uniforms;\n      const textInfo = this.textRenderInfo;\n      if (textInfo) {\n        const {sdfTexture, blockBounds} = textInfo;\n        uniforms.uTroikaSDFTexture.value = sdfTexture;\n        uniforms.uTroikaSDFTextureSize.value.set(sdfTexture.image.width, sdfTexture.image.height);\n        uniforms.uTroikaSDFGlyphSize.value = textInfo.sdfGlyphSize;\n        uniforms.uTroikaSDFExponent.value = textInfo.sdfExponent;\n        uniforms.uTroikaTotalBounds.value.fromArray(blockBounds);\n        uniforms.uTroikaUseGlyphColors.value = !isOutline && !!textInfo.glyphColors;\n\n        let distanceOffset = 0;\n        let blurRadius = 0;\n        let strokeWidth = 0;\n        let fillOpacity;\n        let strokeOpacity;\n        let strokeColor;\n        let offsetX = 0;\n        let offsetY = 0;\n\n        if (isOutline) {\n          let {outlineWidth, outlineOffsetX, outlineOffsetY, outlineBlur, outlineOpacity} = this;\n          distanceOffset = this._parsePercent(outlineWidth) || 0;\n          blurRadius = Math.max(0, this._parsePercent(outlineBlur) || 0);\n          fillOpacity = outlineOpacity;\n          offsetX = this._parsePercent(outlineOffsetX) || 0;\n          offsetY = this._parsePercent(outlineOffsetY) || 0;\n        } else {\n          strokeWidth = Math.max(0, this._parsePercent(this.strokeWidth) || 0);\n          if (strokeWidth) {\n            strokeColor = this.strokeColor;\n            uniforms.uTroikaStrokeColor.value.set(strokeColor == null ? defaultStrokeColor : strokeColor);\n            strokeOpacity = this.strokeOpacity;\n            if (strokeOpacity == null) strokeOpacity = 1;\n          }\n          fillOpacity = this.fillOpacity;\n        }\n\n        uniforms.uTroikaDistanceOffset.value = distanceOffset;\n        uniforms.uTroikaPositionOffset.value.set(offsetX, offsetY);\n        uniforms.uTroikaBlurRadius.value = blurRadius;\n        uniforms.uTroikaStrokeWidth.value = strokeWidth;\n        uniforms.uTroikaStrokeOpacity.value = strokeOpacity;\n        uniforms.uTroikaFillOpacity.value = fillOpacity == null ? 1 : fillOpacity;\n        uniforms.uTroikaCurveRadius.value = this.curveRadius || 0;\n\n        let clipRect = this.clipRect;\n        if (clipRect && Array.isArray(clipRect) && clipRect.length === 4) {\n          uniforms.uTroikaClipRect.value.fromArray(clipRect);\n        } else {\n          // no clipping - choose a finite rect that shouldn't ever be reached by overflowing glyphs or outlines\n          const pad = (this.fontSize || 0.1) * 100;\n          uniforms.uTroikaClipRect.value.set(\n            blockBounds[0] - pad,\n            blockBounds[1] - pad,\n            blockBounds[2] + pad,\n            blockBounds[3] + pad\n          );\n        }\n        this.geometry.applyClipRect(uniforms.uTroikaClipRect.value);\n      }\n      uniforms.uTroikaSDFDebug.value = !!this.debugSDF;\n      material.polygonOffset = !!this.depthOffset;\n      material.polygonOffsetFactor = material.polygonOffsetUnits = this.depthOffset || 0;\n\n      // Shortcut for setting material color via `color` prop on the mesh; this is\n      // applied only to the derived material to avoid mutating a shared base material.\n      const color = isOutline ? (this.outlineColor || 0) : this.color;\n\n      if (color == null) {\n        delete material.color; //inherit from base\n      } else {\n        const colorObj = material.hasOwnProperty('color') ? material.color : (material.color = new Color());\n        if (color !== colorObj._input || typeof color === 'object') {\n          colorObj.set(colorObj._input = color);\n        }\n      }\n\n      // base orientation\n      let orient = this.orientation || defaultOrient;\n      if (orient !== material._orientation) {\n        let rotMat = uniforms.uTroikaOrient.value;\n        orient = orient.replace(/[^-+xyz]/g, '');\n        let match = orient !== defaultOrient && orient.match(/^([-+])([xyz])([-+])([xyz])$/);\n        if (match) {\n          let [, hSign, hAxis, vSign, vAxis] = match;\n          tempVec3a.set(0, 0, 0)[hAxis] = hSign === '-' ? 1 : -1;\n          tempVec3b.set(0, 0, 0)[vAxis] = vSign === '-' ? -1 : 1;\n          tempMat4.lookAt(origin, tempVec3a.cross(tempVec3b), tempVec3b);\n          rotMat.setFromMatrix4(tempMat4);\n        } else {\n          rotMat.identity();\n        }\n        material._orientation = orient;\n      }\n    }\n\n    _parsePercent(value) {\n      if (typeof value === 'string') {\n        let match = value.match(/^(-?[\\d.]+)%$/);\n        let pct = match ? parseFloat(match[1]) : NaN;\n        value = (isNaN(pct) ? 0 : pct / 100) * this.fontSize;\n      }\n      return value\n    }\n\n    /**\n     * Translate a point in local space to an x/y in the text plane.\n     */\n    localPositionToTextCoords(position, target = new Vector2()) {\n      target.copy(position); //simple non-curved case is 1:1\n      const r = this.curveRadius;\n      if (r) { //flatten the curve\n        target.x = Math.atan2(position.x, Math.abs(r) - Math.abs(position.z)) * Math.abs(r);\n      }\n      return target\n    }\n\n    /**\n     * Translate a point in world space to an x/y in the text plane.\n     */\n    worldPositionToTextCoords(position, target = new Vector2()) {\n      tempVec3a.copy(position);\n      return this.localPositionToTextCoords(this.worldToLocal(tempVec3a), target)\n    }\n\n    /**\n     * @override Custom raycasting to test against the whole text block's max rectangular bounds\n     * TODO is there any reason to make this more granular, like within individual line or glyph rects?\n     */\n    raycast(raycaster, intersects) {\n      const {textRenderInfo, curveRadius} = this;\n      if (textRenderInfo) {\n        const bounds = textRenderInfo.blockBounds;\n        const raycastMesh = curveRadius ? getCurvedRaycastMesh() : getFlatRaycastMesh();\n        const geom = raycastMesh.geometry;\n        const {position, uv} = geom.attributes;\n        for (let i = 0; i < uv.count; i++) {\n          let x = bounds[0] + (uv.getX(i) * (bounds[2] - bounds[0]));\n          const y = bounds[1] + (uv.getY(i) * (bounds[3] - bounds[1]));\n          let z = 0;\n          if (curveRadius) {\n            z = curveRadius - Math.cos(x / curveRadius) * curveRadius;\n            x = Math.sin(x / curveRadius) * curveRadius;\n          }\n          position.setXYZ(i, x, y, z);\n        }\n        geom.boundingSphere = this.geometry.boundingSphere;\n        geom.boundingBox = this.geometry.boundingBox;\n        raycastMesh.matrixWorld = this.matrixWorld;\n        raycastMesh.material.side = this.material.side;\n        tempArray.length = 0;\n        raycastMesh.raycast(raycaster, tempArray);\n        for (let i = 0; i < tempArray.length; i++) {\n          tempArray[i].object = this;\n          intersects.push(tempArray[i]);\n        }\n      }\n    }\n\n    copy(source) {\n      // Prevent copying the geometry reference so we don't end up sharing attributes between instances\n      const geom = this.geometry;\n      super.copy(source);\n      this.geometry = geom;\n\n      COPYABLE_PROPS.forEach(prop => {\n        this[prop] = source[prop];\n      });\n      return this\n    }\n\n    clone() {\n      return new this.constructor().copy(this)\n    }\n  }\n\n\n  // Create setters for properties that affect text layout:\n  SYNCABLE_PROPS.forEach(prop => {\n    const privateKey = '_private_' + prop;\n    Object.defineProperty(Text.prototype, prop, {\n      get() {\n        return this[privateKey]\n      },\n      set(value) {\n        if (value !== this[privateKey]) {\n          this[privateKey] = value;\n          this._needsSync = true;\n        }\n      }\n    });\n  });\n\n\n  // Deprecation handler for `anchor` array:\n  let deprMsgShown = false;\n  Object.defineProperty(Text.prototype, 'anchor', {\n    get() {\n      return this._deprecated_anchor\n    },\n    set(val) {\n      this._deprecated_anchor = val;\n      if (!deprMsgShown) {\n        console.warn('TextMesh: `anchor` has been deprecated; use `anchorX` and `anchorY` instead.');\n        deprMsgShown = true;\n      }\n      if (Array.isArray(val)) {\n        this.anchorX = `${(+val[0] || 0) * 100}%`;\n        this.anchorY = `${(+val[1] || 0) * 100}%`;\n      } else {\n        this.anchorX = this.anchorY = 0;\n      }\n    }\n  });\n\n  return Text\n})();\n\n//=== Utility functions for dealing with carets and selection ranges ===//\n\n/**\n * @typedef {object} TextCaret\n * @property {number} x - x position of the caret\n * @property {number} y - y position of the caret's bottom\n * @property {number} height - height of the caret\n * @property {number} charIndex - the index in the original input string of this caret's target\n *   character; the caret will be for the position _before_ that character.\n */\n\n/**\n * Given a local x/y coordinate in the text block plane, find the nearest caret position.\n * @param {TroikaTextRenderInfo} textRenderInfo - a result object from TextBuilder#getTextRenderInfo\n * @param {number} x\n * @param {number} y\n * @return {TextCaret | null}\n */\nfunction getCaretAtPoint(textRenderInfo, x, y) {\n  let closestCaret = null;\n  const {caretHeight} = textRenderInfo;\n  const caretsByRow = groupCaretsByRow(textRenderInfo);\n\n  // Find nearest row by y first\n  let closestRowY = Infinity;\n  caretsByRow.forEach((carets, rowY) => {\n    if (Math.abs(y - (rowY + caretHeight / 2)) < Math.abs(y - (closestRowY + caretHeight / 2))) {\n      closestRowY = rowY;\n    }\n  });\n\n  // Then find closest caret by x within that row\n  caretsByRow.get(closestRowY).forEach(caret => {\n    if (!closestCaret || Math.abs(x - caret.x) < Math.abs(x - closestCaret.x)) {\n      closestCaret = caret;\n    }\n  });\n  return closestCaret\n}\n\n\nconst _rectsCache = new WeakMap();\n\n/**\n * Given start and end character indexes, return a list of rectangles covering all the\n * characters within that selection.\n * @param {TroikaTextRenderInfo} textRenderInfo\n * @param {number} start - index of the first char in the selection\n * @param {number} end - index of the first char after the selection\n * @return {Array<{left, top, right, bottom}> | null}\n */\nfunction getSelectionRects(textRenderInfo, start, end) {\n  let rects;\n  if (textRenderInfo) {\n    // Check cache - textRenderInfo is frozen so it's safe to cache based on it\n    let prevResult = _rectsCache.get(textRenderInfo);\n    if (prevResult && prevResult.start === start && prevResult.end === end) {\n      return prevResult.rects\n    }\n\n    const {caretPositions, caretHeight} = textRenderInfo;\n\n    // Normalize\n    if (end < start) {\n      const s = start;\n      start = end;\n      end = s;\n    }\n    start = Math.max(start, 0);\n    end = Math.min(end, caretPositions.length + 1);\n\n    // Build list of rects, expanding the current rect for all characters in a run and starting\n    // a new rect whenever reaching a new line or a new bidi direction\n    rects = [];\n    let currentRect = null;\n    for (let i = start; i < end; i++) {\n      const x1 = caretPositions[i * 3];\n      const x2 = caretPositions[i * 3 + 1];\n      const left = Math.min(x1, x2);\n      const right = Math.max(x1, x2);\n      const bottom = caretPositions[i * 3 + 2];\n      if (!currentRect || bottom !== currentRect.bottom || left > currentRect.right || right < currentRect.left) {\n        currentRect = {\n          left: Infinity,\n          right: -Infinity,\n          bottom: bottom,\n          top: bottom + caretHeight\n        };\n        rects.push(currentRect);\n      }\n      currentRect.left = Math.min(left, currentRect.left);\n      currentRect.right = Math.max(right, currentRect.right);\n    }\n\n    // Merge any overlapping rects, e.g. those formed by adjacent bidi runs\n    rects.sort((a, b) => b.bottom - a.bottom || a.left - b.left);\n    for (let i = rects.length - 1; i-- > 0;) {\n      const rectA = rects[i];\n      const rectB = rects[i + 1];\n      if (rectA.bottom === rectB.bottom && rectA.left <= rectB.right && rectA.right >= rectB.left) {\n        rectB.left = Math.min(rectB.left, rectA.left);\n        rectB.right = Math.max(rectB.right, rectA.right);\n        rects.splice(i, 1);\n      }\n    }\n\n    _rectsCache.set(textRenderInfo, {start, end, rects});\n  }\n  return rects\n}\n\nconst _caretsByRowCache = new WeakMap();\n\nfunction groupCaretsByRow(textRenderInfo) {\n  // textRenderInfo is frozen so it's safe to cache based on it\n  let caretsByRow = _caretsByRowCache.get(textRenderInfo);\n  if (!caretsByRow) {\n    const {caretPositions, caretHeight} = textRenderInfo;\n    caretsByRow = new Map();\n    for (let i = 0; i < caretPositions.length; i += 3) {\n      const rowY = caretPositions[i + 2];\n      let rowCarets = caretsByRow.get(rowY);\n      if (!rowCarets) {\n        caretsByRow.set(rowY, rowCarets = []);\n      }\n      rowCarets.push({\n        x: caretPositions[i],\n        y: rowY,\n        height: caretHeight,\n        charIndex: i / 3\n      });\n      // Add one more caret after the final char\n      if (i + 3 >= caretPositions.length) {\n        rowCarets.push({\n          x: caretPositions[i + 1],\n          y: rowY,\n          height: caretHeight,\n          charIndex: i / 3 + 1\n        });\n      }\n    }\n  }\n  _caretsByRowCache.set(textRenderInfo, caretsByRow);\n  return caretsByRow\n}\n\nexport { GlyphsGeometry, Text, configureTextBuilder, createTextDerivedMaterial, dumpSDFTextures, getCaretAtPoint, getSelectionRects, preloadFont, typesetterWorkerModule };\n","import './style.css'\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\n\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry.js'\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader.js'\n//import typefaceFont from 'three/examples/fonts/helvetiker_regular.typeface.json'\n\nimport { AnimationClip, AnimationMixer, NumberKeyframeTrack, StringKeyframeTrack } from 'three'\n\nimport {Text} from 'troika-three-text'\n\n\n/**\n * Panji Across SEA: Love That Transcends Time\n * Created by Stephanie V Budiman, for NUS Libraries\n * \n * This script contains the intro scene for Act 1 and 2 of Panji 360imx project\n * \n * This page is optimised for viewing in 360imx\n */\n\n// Canvas\nconst canvas = document.querySelector('canvas.webgl')\n\n// Scene\nconst scene = new THREE.Scene()\n//scene.fog = new THREE.FogExp2( 0x000000, 0.0008 )\n\n/**\n * Music\n */\n\nconst listener = new THREE.AudioListener()\nconst audioLoader = new THREE.AudioLoader()\n\nconst bgMusic = new THREE.Audio( listener )\n\n//Background music\naudioLoader.load( '/music/tranquility.ogg', function( buffer) {\n    bgMusic.setBuffer( buffer )\n    bgMusic.setVolume( 0.3 )\n    bgMusic.setLoop(true)\n\tbgMusic.play()\n})\n\n\n/**\n * 3D Text\n */\nconst fontLoader = new FontLoader()\n\nconst matcapTexture = new THREE.TextureLoader().load( '/textures/matcap-9.png' )\n\nfontLoader.load(\n    '/fonts/helvetiker_regular.typeface.json',\n    (font) =>\n    {\n        const mainTitle = new TextGeometry(\n            'Panji Across SEA',\n            {\n                font: font,\n                size: 0.5,\n                height: 0.2,\n                curveSegments: 12,\n                bevelEnabled: true,\n                bevelThickness: 0.03,\n                bevelSize: 0.02,\n                bevelOffset: 0,\n                bevelSegments: 5\n            }\n        )\n\n        const subTitle = new TextGeometry(\n            'Love That Transcends Time',\n            {\n                font: font,\n                size: 0.5,\n                height: 0.2,\n                curveSegments: 12,\n                bevelEnabled: true,\n                bevelThickness: 0.03,\n                bevelSize: 0.02,\n                bevelOffset: 0,\n                bevelSegments: 5\n            }\n        )\n\n        const actTitle = new TextGeometry(\n            //'Act 1: Raden Inu Kartapati',\n            //'Act 2: Galuh Candra Kirana',\n            'Act 3: Gagelang',\n            {\n                font: font,\n                size: 0.4,\n                height: 0.2,\n                curveSegments: 12,\n                bevelEnabled: true,\n                bevelThickness: 0.03,\n                bevelSize: 0.02,\n                bevelOffset: 0,\n                bevelSegments: 5\n            }\n        )\n\n       \n        mainTitle.center()\n        subTitle.center()\n        actTitle.center()\n\n        const textMaterial = new THREE.MeshMatcapMaterial({ matcap: matcapTexture })\n\n        const titleText = new THREE.Mesh(mainTitle, textMaterial)\n\n        titleText.position.y = 1.2\n        titleText.scale.set(1.1,1,0.5)\n\n        const subtext = new THREE.Mesh(subTitle, textMaterial)\n\n        subtext.position.y = 0.6\n        subtext.scale.set(0.68,0.6,0.3)    \n\n        const acttext = new THREE.Mesh(actTitle, textMaterial)\n\n        acttext.position.y = 0\n        acttext.scale.set(0.68,0.6,0.3)    \n\n        //scene.add(titleText, subtext, acttext)\n        scene.add(titleText, subtext)\n    }\n)\n\n/**\n * Button\n */\nconst buttonBG = new THREE.Mesh(\n    new THREE.PlaneGeometry(1.2,0.3),\n    new THREE.MeshBasicMaterial(\n        {color: '#00004d'}\n    )\n)\nbuttonBG.position.y = -0.6\nscene.add(buttonBG)\n\n//Set the text\nconst enterText = new Text()\nscene.add(enterText)\n\nenterText.text = 'Press \\'Enter\\' to begin'\nenterText.fontSize = 0.11\nenterText.position.set(-0.51,-0.53,0.001)\nenterText.color = '#ffe6ea'\nenterText.outlineBlur = 0.005\nenterText.outlineWidth = 0.001\nenterText.outlineColor = 'white'\n\nenterText.sync()\n\n\n/**\n * Info Text\n */\n const infoBG = new THREE.Mesh(\n    new THREE.PlaneGeometry(3,2.4),\n    new THREE.MeshBasicMaterial(\n        {color: '#00004d', opacity: 0.8, transparent: true}\n    )\n)\n\ninfoBG.position.set(7,0.4,0)\n//if set on the left, (-6,0.4,0)\nscene.add(infoBG)\n\n//Set the text\nconst infoText = new Text()\nscene.add(infoText)\n\nconst iText0 = 'Panji Across SEA is an NUS Libraries Project in 360imx.\\n\\nOriginated from Indonesia around 13th century, Panji tales have been popularised in many Southeast Asian countries and become a UNESCO Registered Heritage in 2017.\\n\\nThis special project is particularly adapted from the book \\\"Hikayat Panji Semirang\\\", which is part of NUS Libraries\\' Singapore-Malaysia Collection.\\n\\nCreated by librarian-developers at NUS Libraries, the scenes that you are about to experience are also accompanied by Gamelan music performed by Singa Nglaras, a prominent gamelan ensemble with roots in NUS.\\n\\nStay on this page to read more about the project, or embark on an immersive journey from the Igloo Tablet at your hand!'\nconst iText1 = 'The origin of Panji stories is thought to be from the 13th century East Java or earlier, which was a time when Majapahit was the dominant kingdom within the region.\\n\\nWhile it is likely that the stories had existed since before Majapahit era, they grew to become popular during this period of time, as evident from artefacts, literature, and historical sites that still survive today.\\n\\nIn adapting \\\"Hikayat Panji Semirang\\\" for 360imx, this project features many interactive elements that draw inspirations from Majapahit culture and its remnants.\\n\\nSince the stories have also become popular outside Java, as evident from the book this project has been adapted from, you will also find glimpses of the relationships between Southeast Asian countries during pre-colonial times, with Panji as the story that unifies this idea.'\n//const iText2 = 'This project is specially created for 360imx at NUS Libraries.\\n\\n\\n\\nDeveloped by Stephanie V Budiman\\n\\nBased on \\\"Hikayat Panji Semirang\\\", with script by Raudhah\\n\\nVoice narration by Mak Jie Ying\\n\\nAnd Gamelan music performance by Singa Nglaras\\n\\n\\n\\n\\nThe scenes that you\\'re about to experience are from Act 1 of the project, \\\"Raden Inu Kartapati\\\".'\n//const iText2 = 'This project is specially created for 360imx at NUS Libraries.\\n\\n\\n\\nDeveloped by Stephanie V Budiman\\n\\nBased on \\\"Hikayat Panji Semirang\\\", with script by Raudhah\\n\\nVoice narration by Mak Jie Ying\\n\\nAnd Gamelan music performance by Singa Nglaras\\n\\n\\n\\n\\nThe scenes that you\\'re about to experience are from Act 2 of the project, \\\"Galuh Candra Kirana\\\".'\n//const iText2 = 'This project is specially created for 360imx at NUS Libraries.\\n\\n\\n\\nDeveloped by Stephanie V Budiman\\n\\nBased on \\\"Hikayat Panji Semirang\\\", with script by Raudhah\\n\\nVoice narration by Mak Jie Ying\\n\\nAnd Gamelan music performance by Singa Nglaras\\n\\n\\n\\n\\nThe scenes that you\\'re about to experience are from Act 3 of the project, \\\"Gagelang\\\".'\nconst iText2 = 'This project is specially created for 360imx at NUS Libraries.\\n\\n\\n\\nDeveloped by Stephanie V Budiman\\n\\nBased on \\\"Hikayat Panji Semirang\\\", with script by Raudhah\\n\\nVoice narration by Mak Jie Ying\\n\\nAnd Gamelan music performance by Singa Nglaras.'\n\n//infoText.text = iText2\ninfoText.fontSize = 0.08\n//if set on the left, infoText.position.set(-7.1,1.2,0.001)\ninfoText.position.set(5.9,1.2,0.001)\ninfoText.maxWidth = 2.2\ninfoText.textAlign = 'justify'\ninfoText.color = 'white'\n\n\n// animating the text\nconst times = [0, 14, 16, 18, 30, 32, 34, 46, 48]\nconst opValues = [1, 1, 0, 1, 1, 0, 1, 1, 0]\n\nconst opacityKF = new NumberKeyframeTrack('.fillOpacity', times, opValues)\n\nconst stringKF = new StringKeyframeTrack(\n    '.text',\n    [0, 16, 32, 48],\n    [iText0, iText1, iText2, iText2])\n\nconst tracks = [opacityKF, stringKF]\nconst length = -1\n\nconst textClip = new AnimationClip('textOpacity', length, tracks)\nconst textMixer = new AnimationMixer(infoText)\nconst textAction = textMixer.clipAction(textClip)\ntextAction.play().setLoop(THREE.LoopRepeat)\ntextAction.clampWhenFinished = true \n\ninfoText.sync()\n\n/**\n * Viewport\n */\n const sizes = {\n    width: window.innerWidth,\n    height: window.innerHeight\n}\n\nwindow.addEventListener('resize', () =>\n{\n    // Update sizes\n    sizes.width = window.innerWidth\n    sizes.height = window.innerHeight\n\n    // Update camera\n    camera.aspect = sizes.width / sizes.height\n    camera.updateProjectionMatrix()\n\n    // Update renderer\n    renderer.setSize(sizes.width, sizes.height)\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\n})\n\n/**\n * Camera\n */\n// Base camera\n\nconst camera = new THREE.PerspectiveCamera( 60, sizes.width / sizes.height, 1, 5000  )\n\ncamera.position.set(0,0.5,4)\nscene.add(camera)\n\n\n//cubemap\nconst paths = ['/textures/cube1/','/textures/cube2/','/textures/cube3/','/textures/cube4/']\nconst format = '.png'\n\nlet cubeTextures = []\n\nfor (let p in paths)\n{\n    const urls = [\n        paths[p] + 'px' + format, paths[p] + 'nx' + format,\n        paths[p] + 'py' + format, paths[p] + 'ny' + format,\n        paths[p] + 'pz' + format, paths[p] + 'nz' + format\n    ]\n    const texture = new THREE.CubeTextureLoader().load( urls )\n    cubeTextures.push(texture)\n}\n\n\n\n\n// Controls -- enabled for dev and testings, disabled for 360imx build\n\nconst controls = new OrbitControls(camera, canvas)\ncontrols.target.set(0,0.5,0)\ncontrols.enableDamping = true\ncontrols.enableZoom = false\n\n\n/**\n * Renderer\n */\nconst renderer = new THREE.WebGLRenderer({\n    canvas: canvas,\n    alpha: true\n})\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\nrenderer.setSize(sizes.width, sizes.height)\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\nrenderer.setClearColor( 0x000000, 0 ); \n\n\n/**\n * Animate\n */\n const clock = new THREE.Clock()\n let previousTime = 0\n\n const speed = 0.0002\n\n var bgIndex, duration, interval\n \n \n const tick = () =>\n {\n    const elapsedTime = clock.getElapsedTime()\n    const deltaTime = elapsedTime - previousTime\n    previousTime = elapsedTime\n\n    //Rotate the background scene\n    scene.rotateY(speed)\n\n    //change scene background every 8 seconds\n    duration = cubeTextures.length * 8 \n    interval = Math.floor(elapsedTime) % duration \n    \n    switch (interval)\n    {\n        case 0:\n            bgIndex = 0\n            break\n        case 8:\n            bgIndex = 1\n            break\n        case 16:\n            bgIndex = 2\n            break\n        case 24:\n            bgIndex = 3\n            break\n    }\n    \n    if (textMixer)\n    {\n        textMixer.update(deltaTime) \n    }\n\n    scene.background = cubeTextures[bgIndex]\n\n    // Update controls -- only for dev, it should be disabled for 360imx build\n    controls.update()\n\n    document.addEventListener( 'keydown', onKeyDown )\n\n    /*\n    //autoplay to the next scene after 15 minutes regardless of user's input\n    if (elapsedTime > 900)\n    {\n        location.replace(\"https://panji360.github.io/ck_01\")\n        //location.replace(\"https://panji360.github.io/ri_00\")\n    }\n    */\n\n    // Render\n    renderer.render(scene, camera)\n\n    // Call tick again on the next frame\n    window.requestAnimationFrame(tick)\n}\n\ntick()\n\n\n\nfunction onKeyDown( event ) {\n    if (event.keyCode == 13) {\n        //location.replace(\"https://panji360.github.io/ck_01\")\n        //location.replace(\"https://panji360.github.io/ri_00\")\n        location.replace(\"https://panji360.github.io/gg_01\")\n    }\n}"],"names":["AddEquation","CubeReflectionMapping","CubeRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","LinearFilter","LinearMipmapLinearFilter","UnsignedByteType","UnsignedShortType","UnsignedIntType","FloatType","HalfFloatType","UnsignedInt248Type","RGBAFormat","DepthFormat","DepthStencilFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","LinearEncoding","sRGBEncoding","SRGBColorSpace","LinearSRGBColorSpace","KeepStencilOp","StaticDrawUsage","DynamicDrawUsage","GLSL3","_SRGBAFormat","EventDispatcher","addEventListener","type","listener","undefined","this","_listeners","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","target","array","slice","i","l","length","call","_lut","toString","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","toLowerCase","clamp","value","min","max","lerp","x","y","t","isPowerOfTwo","floorPowerOfTwo","pow","floor","log","LN2","constructor","width","height","set","setScalar","scalar","setX","setY","setComponent","Error","getComponent","clone","copy","v","add","w","console","warn","addVectors","addScalar","s","a","b","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","m","e","elements","clampScalar","minVal","maxVal","clampLength","ceil","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","c","cos","sin","Symbol","iterator","prototype","isVector2","Matrix3","arguments","error","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","f","g","h","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","r","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","rotate","theta","translate","matrix","arrayNeedsUint32","createElementNS","name","document","SRGBToLinear","LinearToSRGB","isMatrix3","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","FN","ColorManagement","legacyMode","workingColorSpace","colorSpace","convert","color","sourceColorSpace","targetColorSpace","fn","fromWorkingColorSpace","toWorkingColorSpace","_colorKeywords","_rgb","_hslA","_hslB","hue2rgb","p","q","toComponents","source","Color","setRGB","isColor","setHex","setStyle","hex","setHSL","style","handleAlpha","string","parseFloat","exec","components","parseInt","size","charAt","setColorName","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","hue","saturation","lightness","delta","getRGB","getStyle","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","getZ","normalized","toJSON","_canvas","NAMES","ImageUtils","static","image","test","src","HTMLCanvasElement","canvas","context","getContext","ImageData","putImageData","drawImage","toDataURL","HTMLImageElement","ImageBitmap","imageData","getImageData","data","Source","uuid","version","needsUpdate","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","getDataURL","isSource","textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","super","Object","defineProperty","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","updateMatrix","JSON","parse","stringify","textures","metadata","generator","wrap","dispose","transformUv","uv","isTexture","Vector4","z","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","acos","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getW","isVector4","WebGLRenderTarget","options","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","samples","setSize","assign","isWebGLRenderTarget","DataArrayTexture","wrapR","isDataArrayTexture","isWebGLArrayRenderTarget","Data3DTexture","isData3DTexture","isWebGL3DRenderTarget","count","il","isWebGLMultipleRenderTargets","Quaternion","_x","_y","_z","_w","qa","qb","qm","slerpQuaternions","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","Number","EPSILON","len","tDir","_onChangeCallback","quaternion","setFromEuler","euler","update","isEuler","order","_order","c1","c2","c3","s1","s2","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","angleTo","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","u1","sqrt1u1","sqrtu1","u2","u3","_onChange","callback","isQuaternion","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","denominator","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","randomDirection","u","isVector3","Box3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","points","makeEmpty","expandByPoint","setFromCenterAndSize","halfSize","_vector$b","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","attributes","position","boundingBox","computeBoundingBox","_box$3","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$3","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","isBox3","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_toFarthestPoint","_toPoint","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","missingRadiusHalf","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","b1","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","sign","DdN","DdQxE2","DdE1xQ","QdN","n14","n24","n34","n41","n42","n43","n44","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","n","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","yx","zx","zy","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","makeOrthographic","isMatrix4","_matrix$1","_quaternion$3","Euler","DefaultOrder","asin","setFromQuaternion","setFromVector3","reorder","newOrder","RotationOrders","Layers","mask","channel","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","parent","DefaultUp","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","isObject3D","remove","removeFromParent","clear","attach","getObjectById","id","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","serialize","library","element","isInstancedMesh","instanceMatrix","instanceColor","isScene","background","environment","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","child","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","targetLengthSq","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getBarycoord","p3","uv1","uv2","uv3","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getUV","isFrontFacing","d4","vc","d5","d6","vb","va","materialId","Material","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","toneMapped","_alphaTest","alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","setValues","newValue","flatShading","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","fog","srcPlanes","dstPlanes","isMaterial","fromType","MeshBasicMaterial","isMeshBasicMaterial","_vector$9","_vector2$1","BufferAttribute","itemSize","TypeError","usage","updateRange","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","copyColorsArray","colors","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZ","setXYZW","onUpload","isBufferAttribute","Uint16BufferAttribute","Uint32BufferAttribute","isFloat16BufferAttribute","Float32BufferAttribute","_id$1","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$8","BufferGeometry","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","Infinity","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","isNaN","jl","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","merge","isBufferGeometry","attributeArray1","attribute2","attributeArray2","attributeOffset","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","keys","hasMorphAttributes","attributeArray","_inverseMatrix$2","_ray$2","_sphere$3","_vA$1","_vB$1","_vC$1","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA$1","_uvB$1","_uvC$1","_intersectionPoint","_intersectionPointWorld","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","String","morphTargets","raycaster","intersects","intersection","morphPosition","groupMaterial","checkBufferGeometryIntersection","faceIndex","face","isGeometry","morphInfluences","influence","boneTransform","checkIntersection","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","cloneUniforms","property","mergeUniforms","uniforms","merged","UniformsUtils","ShaderMaterial","defines","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","isShaderMaterial","Camera","PerspectiveCamera","fov","aspect","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","enabled","offsetX","offsetY","clearViewOffset","skew","isPerspectiveCamera","CubeCamera","renderTarget","isWebGLCubeRenderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","scene","currentRenderTarget","getRenderTarget","currentToneMapping","toneMapping","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","isCubeTexture","WebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","end","coplanarPoint","optionalNormalMatrix","referencePoint","isPlane","_sphere$2","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","get","deleteBuffer","buffer","delete","bufferType","cached","bytesPerElement","elementSize","createBuffer","bindBuffer","bufferData","BYTES_PER_ELEMENT","bufferSubData","subarray","updateBuffer","PlaneGeometry","width_half","height_half","segment_width","segment_height","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","output_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_vert","background_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","ior","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","WebGLBackground","cubemaps","state","objects","clearColor","planeMesh","boxMesh","clearAlpha","currentBackground","currentBackgroundVersion","currentTonemapping","setClear","getClearColor","setClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","session","getSession","environmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","unshift","WebGLBindingStates","maxVertexAttributes","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","bindVertexArrayObject","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","newAttributes","enabledAttributes","attributeDivisors","program","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","reset","resetDefaultState","setup","updateBuffers","programMap","stateMap","createVertexArray","createVertexArrayOES","getBindingState","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","location","cachedAttribute","geometryAttribute","saveCache","isInstancedBufferGeometry","materialDefaultAttributeValues","programAttribute","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","has","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","init","enableLocalClipping","beginShadows","endShadows","setState","useCache","materialProperties","nGlobal","lGlobal","clippingState","WebGLCubeMaps","mapTextureMapping","onTextureDispose","cubemap","physical","sheenColorMap","sheenRoughnessMap","transmissionSamplerSize","transmissionSamplerMap","OrthographicCamera","scaleW","scaleH","isOrthographicCamera","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","sizeLods","lodPlanes","sigmas","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","_createPlanes","weights","poleAxis","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","sum","weight","exp","outputSize","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","cubemapUV","isEquirectMap","isCubeMap","isCubeTextureComplete","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","programs","autoReset","instanceCount","numericalSort","absNumericalSort","denormalize","morph","WebGLMorphtargets","influencesList","morphTextures","workInfluences","objectInfluences","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","onInstancedMeshDispose","instancedMesh","buffergeometry","emptyTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2uiv","setValueV3ui","uniform3uiv","setValueV4ui","uniform4uiv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","SingleUniform","activeInfo","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","WebGLShader","createShader","shaderSource","compileShader","setOptional","upload","seqWithValue","programIdCount","getShaderErrors","status","getShaderParameter","errors","getShaderInfoLog","trim","errorMatches","errorLine","toUpperCase","split","lines2","from","to","join","handleSource","getShaderSource","getTexelEncodingFunction","functionName","getEncodingComponents","getToneMappingFunction","toneMappingName","filterEmptyLine","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","WebGLProgram","cacheKey","shadowMapTypeDefine","shadowMapType","generateShadowMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapTypeDefine","envMapModeDefine","generateEnvMapModeDefine","envMapBlendingDefine","generateEnvMapBlendingDefine","envMapCubeUVSize","imageHeight","envMapCubeUVHeight","maxMip","texelHeight","texelWidth","generateCubeUVSize","customExtensions","extensionDerivatives","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","generateExtensions","customDefines","chunks","generateDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","decodeVideoTexture","physicallyCorrectLights","opaque","outputEncoding","useDepthPacking","depthPacking","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","cachedUniforms","deleteShader","getActiveAttrib","getAttribLocation","fetchAttributeLocations","destroy","deleteProgram","usedTimes","_id","WebGLShaderCache","shaderCache","Map","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","shaderStage","code","getVertexShaderID","getFragmentShaderID","Set","stage","WebGLShaderStage","WebGLPrograms","cubeuvmaps","_programLayers","_customShaders","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","useAlphaTest","useClearcoat","isXRRenderTarget","isVideoTexture","isFogExp2","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","morphAttributeCount","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","acquireProgram","pl","preexistingProgram","releaseProgram","pop","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","finish","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","list","UniformsCache","light","halfWidth","halfHeight","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","shadowCache","ShadowUniformsCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","setupLights","setupLightsView","pushLight","pushShadow","shadowLight","WebGLRenderStates","renderStates","renderState","isMeshDepthMaterial","WebGLShadowMap","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","result","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","isMeshDistanceMaterial","renderObject","shadowCamera","k","kl","depthMaterial","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","pars","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","WebGLState","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","scissorParam","viewportParam","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","equationToGL","MIN_EXT","MAX_EXT","factorToGL","blendEquationSeparate","blendFuncSeparate","blendFunc","frontFace","cullFace","setPolygonOffset","factor","activeTexture","webglSlot","bindFramebuffer","framebuffer","drawBuffersWEBGL","useProgram","setMaterial","frontFaceCW","setLineWidth","lineWidth","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","texImage3D","texStorage2D","texStorage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","WebGLTextures","_gl","utils","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","deallocateTexture","onRenderTargetDispose","renderTargetProperties","__webglTexture","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","deallocateRenderTarget","textureUnits","slot","updateVideoTexture","__version","complete","uploadTexture","wrappingToGL","filterToGL","setTextureParameters","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","getTextureCacheKey","__currentVersion","pixelStorei","textureNeedsPowerOfTwo","verifyColorSpace","mipmap","glInternalFormat","useTexStorage","allocateMemory","levels","isDepthTexture","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthRenderbuffer","isCube","__autoAllocateDepthBuffer","webglDepthTexture","setupDepthTexture","createRenderbuffer","__useRenderToTexture","sRGBToLinear","textureUnit","resetTextureUnits","isCompressed","cubeImage","mipmapImage","uploadCubeTexture","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","invalidateFramebuffer","blitFramebuffer","WebGLUtils","HALF_FLOAT_OES","SRGB_ALPHA_EXT","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","cameras","isArrayCamera","Group","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","disconnect","inputSource","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","getPose","targetRaySpace","transform","inputjoint","jointPose","getJointPose","jointName","joint","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","DepthTexture","WebXRManager","framebufferScaleFactor","referenceSpaceType","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","inputSourcesMap","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","onSessionEvent","controller","onSessionEnd","forEach","isPresenting","onInputSourcesChange","inputSources","removed","added","cameraAutoUpdate","getController","getControllerGrip","getHand","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","setSession","async","xrCompatible","makeXRCompatible","layerInit","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","depthFormat","depthType","glDepthFormat","projectionlayerInit","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","cameraLPos","cameraRPos","updateCamera","depthNear","depthFar","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","setProjectionFromUnion","getCamera","getFoveation","fixedFoveation","foveation","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraVRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","WebGLMaterials","refreshUniformsCommon","uvScaleMap","uv2ScaleMap","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLRenderer","display","createCanvasElement","_context","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","_alpha","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","shift","message","initGLContext","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","onMaterialDispose","releaseMaterialProgramReferences","deallocateMaterial","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","needsProgramChange","needsLights","lightsStateVersion","getProgram","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","boneTextureSize","uniformsList","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","projectObject","isLOD","renderScene","opaqueObjects","transmissiveObjects","transparentObjects","renderObjects","renderTransmissionPass","programCacheKey","updateCommonMaterialProperties","materialNeedsLights","progUniforms","self","camera2","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","halfFloatSupportedByExt","readPixels","copyFramebufferToTexture","level","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","unpackImageHeight","unpackSkipPixels","unpackSkipRows","unpackSkipImages","compressedTexSubImage3D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","isWebGLRenderer","FogExp2","Fog","Scene","InterleavedBuffer","arrayBuffers","_uuid","ib","isInterleavedBuffer","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","transformVertex","vertexPosition","mvPosition","float32Array","_basePosition","_skinIndex","_skinWeight","_vector$5","_matrix","SkinnedMesh","bindMatrixInverse","bind","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","isBone","InstancedBufferAttribute","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","getColorAt","getMatrixAt","raycastTimes","instanceId","setColorAt","setMatrixAt","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","_start","_end","LineSegments","_inverseMatrix","_ray","_sphere","_position$2","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","Points","video","requestVideoFrameCallback","updateVideo","readyState","HAVE_CURRENT_DATA","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","low","high","lengthBefore","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","binormals","vec","mat","MAX_VALUE","tz","fromJSON","json","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","twoPi","deltaAngle","samePoints","isEllipseCurve","ArcCurve","aRadius","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","isArcCurve","px","py","pz","CatmullRomCurve3","curveType","intPoint","CatmullRom","QuadraticBezier","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","isCatmullRomCurve3","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","freeze","__proto__","LineCurve3","isLineCurve3","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","diff","segmentLength","lens","cacheLengths","sums","pts","Path","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","concat","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","Shape","holes","getPointsHoles","holesPts","extractPoints","hole","linkedList","dim","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","prev","earcutLinked","ear","invSize","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","locallyInside","isValidDiagonal","splitPolygon","compareX","eliminateHole","outerNode","hx","hy","mx","my","tanMin","sectorContainsSector","findHoleBridge","getLeftmost","leftmost","intersectsPolygon","inside","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","a2","Node","b2","an","bp","ShapeUtils","contour","area","holeIndices","faces","removeDupEndPts","addContour","holeIndex","hasHoles","outerLen","queue","eliminateHoles","Earcut","ExtrudeGeometry","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","splineTube","binormal","position2","extrudeByPath","shapePoints","isClockWise","reverse","hl","ahole","triangulateShape","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","buildLidFaces","buildSideFaces","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","vertex","RawShaderMaterial","_sheen","_clearcoat","_transmission","materialLib","AnimationUtils","arraySlice","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","numTimes","valueStart","multiplyQuaternionsFlat","valueEnd","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","getSettings_","copySampleValue_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","trackType","getInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","slerpFlat","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","NormalAnimationBlendMode","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","morphTargetSequence","noLoop","numMorphTargets","objectOrClipArray","clipArray","o","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","CreateFromMorphTargetSequence","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","typeName","getTrackTypeForValueTypeName","Cache","files","file","DefaultLoadingManager","onLoad","onProgress","onError","urlModifier","isLoading","itemsLoaded","itemsTotal","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","Promise","resolve","reject","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","loading","FileLoader","setTimeout","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","then","response","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","done","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","DOMParser","parseFromString","label","decoder","TextDecoder","decode","catch","finally","setResponseType","setMimeType","ImageLoader","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","urls","loadTexture","TextureLoader","Light","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","isSpotLightShadow","power","_lightPositionWorld","_lookTarget","PointLightShadow","_cubeDirections","_cubeUps","DirectionalLightShadow","isDirectionalLightShadow","SphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","shBasis","isSphericalHarmonics3","LightProbe","InstancedBufferGeometry","createImageBitmap","setOptions","fetchOptions","res","colorSpaceConversion","imageBitmap","isImageBitmapLoader","AudioContext","window","webkitAudioContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","sky","ground","isHemisphereLightProbe","isAmbientLightProbe","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","Audio","gain","createGain","connect","getInput","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","currentTime","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","setTargetAtTime","getDetune","getFilter","setFilter","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","PropertyBinding","rootNode","parsedPath","parseTrackName","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","root","isAnimationObjectGroup","Composite","matches","results","objectName","objectIndex","propertyIndex","lastDot","lastIndexOf","substring","bone","getBoneByName","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","unbind","targetGroup","optionalParsedPath","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationMixer","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","create","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","stats","actions","inUse","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","findByName","existingAction","newAction","stopAllAction","nActions","nBindings","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","Spherical","other","makeSafe","EPS","setFromCartesianCoords","_vector$4","Box2","isBox2","_vector$2","_boneMatrix","_matrixWorldInv","getBoneList","boneList","ShapePath","subPaths","currentPath","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","tmpPoints","tmpHoles","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","_buffer","_baseTable","_shiftTable","_mantissaTable","_exponentTable","_offsetTable","construct","fromPoints","setColors","isSkeletonHelper","extractUrlBase","fromCharCode","decodeURIComponent","escape","Handlers","empty","isIntersectionBox","isIntersectionSphere","toVector3","setFromMatrix","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBufferAttribute","applyToVector3Array","getInverse","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","inverse","isIntersectionPlane","barycoordFromPoint","midpoint","prototypenormal","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","getChildByName","renderDepth","getWorldRotation","applyMatrix","eulerOrder","useQuaternion","setDrawMode","drawMode","initBones","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","dynamic","setDynamic","copyIndicesArray","setArray","addIndex","addAttribute","addDrawCall","clearDrawCalls","computeOffsets","removeAttribute","drawcalls","offsets","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","shading","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","initMaterial","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","getActiveMipMapLevel","shadowMapCullFace","vr","gammaInput","gammaOutput","toneMappingWhitePoint","gammaFactor","renderReverseSided","renderSingleSided","updateCubeMap","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","revision","__THREE__","_changeEvent","_startEvent","_endEvent","font","generateShapes","paths","chars","line_height","yMax","yMin","underlineThickness","char","ret","createPath","createPaths","glyph","glyphs","familyName","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","ha","BespokeThenable","scheduled","completeCalled","oneTime","val","reason","st","ignoreThrow","thenableObj","recursiveError","valThen","getThenableThen","scheduleQueueFlush","flushQueue","callIt","isFn","called","args","onResolve","onReject","nextThenable","resultThen","NativePromiseThenable","promise","rej","isFont","all","items","resultCount","out","DefaultThenable","item","itemThenable","workerBootstrap","modules","registerModule","ref","dependencies","getTransferables","dep","isWorkerModule","depResult","rehydrate","noLog","str","troikaDefine","URL","createObjectURL","Blob","importScripts","revokeObjectURL","messageId","postMessage","success","isCallable","ref$1","handleResult","callModule","transferables","stack","supportsWorkers","supported","Worker","terminate","_workerModuleId","_messageId","_allowInitAsString","workers","registeredModules","openRequests","defineWorkerModule","workerId","moduleFunc","_getInitResult","initResult","initThenable","deps","defineMainThreadModule","registrationThenable","callWorker","workerModuleData","unregister","stringifyFunction","thenable","worker","bootstrap","onmessage","msgId","getWorker","ThenableWorkerModule","Thenable","SDFGenerator","exports","pointOnCubicBezier","y3","pointOut","forEachPathCommand","pathString","commandCallback","firstX","firstY","prevX","prevY","segmentRE","pathToLineSegments","segmentCallback","curvePoints","tempPoint","command","startX","startY","endX","endY","ctrl1X","ctrl1Y","ctrl2X","ctrl2Y","prevCurveX","prevCurveY","prevCurveX$1","prevCurveY$1","i$1","viewportQuadVertex","glContextParams","withWebGLContext","glOrCanvas","wrapper","framebufferStack","ext","withProgram","frag","func","VERTEX_SHADER","FRAGMENT_SHADER","transaction","setUniform","uniformLoc","instancingDivisor","attr","buf","loc","ARRAY_BUFFER","FLOAT","vertexAttribDivisor","vertexAttribDivisorANGLE","withTexture","TEXTURE0","TEXTURE_2D","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","withTextureFramebuffer","FRAMEBUFFER","COLOR_ATTACHMENT0","handleContextLoss","renderImageData","channels","tex","texUnit","RGBA","UNSIGNED_BYTE","STATIC_DRAW","BLEND","TRIANGLES","webglUtils","resizeWebGLCanvasWithoutClearing","newWidth","newHeight","generate$2","sdfWidth","sdfHeight","viewBox","maxDistance","sdfExponent","textureData","viewBoxWidth","viewBoxHeight","sdfX","sdfY","signedDist","findNearestSignedDistance","closestDistSq","closestDist","seg","distSq","absSquareDistanceToLineSegment","winding","isPointInPoly","generateIntoCanvas$2","generateIntoFramebuffer$1","rgbaData","lineX0","lineY0","lineX1","lineY1","ldx","ldy","javascript","generate","generateIntoCanvas","generateIntoFramebuffer","viewportUVs","implicitContext","isTestingSupport","NULL_OBJECT","supportByCanvas","validateSupport","isSupported","generate$1","createElement","generateIntoCanvas$1","lineSegmentCoords","intermediateTexture","intermediateTextureUnit","_lastWidth","_lastHeight","instancingExtension","blendMinMaxExtension","DYNAMIC_DRAW","ONE","FUNC_ADD","MAX","COLOR_BUFFER_BIT","drawArraysInstanced","drawArraysInstancedANGLE","isContextLost","failReason","expectedResult","testResult","every","webgl","voidMainRegExp","expandShaderIncludes","chunk","prop","hasOwnProperty","epoch","CONSTRUCTOR_CACHE","SHADER_UPGRADE_CACHE","materialInstanceId","createDerivedMaterial","baseMaterial","optionsKey","optionsHash","optionsJsonReplacer","optionsHashesToIds","_idCtr","getKeyForOptions","ctorsByDerivation","privateBeforeCompileProp","shaderInfo","upgradedShaders","upgraded","vertexDefs","vertexMainIntro","vertexMainOutro","vertexTransform","fragmentDefs","fragmentMainIntro","fragmentMainOutro","fragmentColorTransform","customRewriter","timeUniform","postChunks","match1","fullStr","substr","injectIntoShaderCode","upgradeShaders","DerivedMaterial","derive","chained","base","derived","descriptor","isDerivedMaterial","writable","newBase","IS_DEPTH_MATERIAL","getDistanceMaterial","distanceMaterial","IS_DISTANCE_MATERIAL","shaderCode","defs","intro","outro","mainThreadGenerator","warned","generateSDF_GL","timer","nextChunk","timing","generateSDF_JS_Worker","threads","callNum","exponent","thread","workerModule","_createSDFGenerator","requests","idleTimer","clearTimeout","terminateWorker","_bin","readASCII","readUshort","readUint","_readFont","readFixed","_data","_tabOffset","readF2dot14","readShort","readInt","_view","getInt32","readInt8","getInt8","getInt16","getUint16","readUshorts","getUint32","readUint64","readUnicode","_tdec","readUTF8","readBytes","readASCIIArray","_dataView","byteOffset","_lctf","scriptList","readScriptList","featureList","readFeatureList","lookupList","readLookupList","readLookupTable","tabs","ltype","flag","numOfOnes","readClassDef","getInterval","readCoverage","fmt","tab","coverageIndex","readFeatureTable","tag","featureParams","readScriptTable","default","readLangSysTable","reqFeature","features","CFF","readIndex","readDict","readSubrs","CharStrings","ROS","FDArray","_readFDict","FDSelect","U","Encoding","readEncoding","charset","readCharset","Private","Subrs","Bias","tableSE","glyphByUnicode","glyphBySE","getCharString","readCharString","S","cmap","tables","parse0","parse4","parse6","parse12","searchRange","entrySelector","rangeShift","endCount","startCount","idDelta","idRangeOffset","glyphIdArray","firstCode","glyf","maxp","numGlyphs","_parseGlyf","loca","noc","xMin","xMax","endPts","instructions","flags","xs","ys","glyphIndex","instr","GPOS","subt","coverage","pos","readValueRecord","pairsets","P","gid2","val1","val2","F","_","classDef1","classDef2","C","I","GSUB","newg","vals","readLigatureSet","cDef","scset","readSubClassSet","backCvg","inptCvg","ahedCvg","lookupRec","readSubstLookupRecords","readSubClassRule","input","substLookupRecords","readChainSubClassSet","readChainSubClassRule","subst","readLigature","chain","nglyph","head","fontRevision","unitsPerEm","created","modified","macStyle","lowestRecPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","hhea","ascender","descender","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","numberOfHMetrics","hmtx","aWidth","lsBearing","kern","parseV1","glyph1","rval","readFormat0","glyph2","maxPoints","maxContours","maxCompositePoints","maxCompositeContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","_lang","postScriptName","version0","version1","version2","version5","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","achVendID","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefault","usBreak","usMaxContext","usLowerOpticalPointSize","usUpperOpticalPointSize","post","italicAngle","underlinePosition","codeToGlyph","p0e4","p3e1","p1e0","p0e3","glyphToPath","cmds","crds","SVG","entries","toPath","nStems","haveWidth","defaultWidthX","open","_drawCFF","_drawGlyf","_simpleGlyph","_compoGlyph","qcurveTo","_getGlyphClass","getPairAdjustment","_applySubs","_glsCovered","glyphsToPath","curveTo","nominalWidthX","O","T","G","D","B","L","R","A","W","M","V","N","Typr","captureStackTrace","E","H","J","K","Q","X","Y","Z","$","rr","er","nr","tr","convert_streams","setUint16","setUint32","signature","flavor","numTables","reserved","totalSfntSize","majorVersion","minorVersion","metaOffset","metaLength","metaOrigLength","privOffset","privLength","compLength","origLength","origChecksum","reduce","outOffset","woff2otf","cmdArgLengths","joiningTypeRawData","joiningTypeMap","getCharJoiningType","ch","lastCode","range","skip","formsToFeatures","detectJoiningForms","joiningForms","prevJoiningType","prevForm","codePointAt","joiningType","form","peek","typrFont","glyphMap","fontObj","forEachGlyph","fontSize","letterSpacing","glyphX","fontScale","glyphIndices","glyphIds","cc","gsub","supportedFeatures","usedLookups","feature","ti","isJoiningFeature","ci","stringToGlyphs","charIndex","prevGlyphIndex","glyphObj","crdsIdx","numArgs","advanceWidth","pathCommandCount","wrapFontObj","typrFactory","woff2otfFactory","parserFactory","CONFIG","defaultFontURL","sdfGlyphSize","sdfMargin","tempColor","hasRequested","now$1","atlases","generateGlyphSDF","atlasIndex","sdfViewBox","sdfCanvas","contextLost","useGPU","maxDist","squareIndex","useWebGL","generateSDF","linkEl","safariPre15Workaround","atlas","sdfTexture","typesetterWorkerModule","fontParser","bidi","config","fonts","INF","DEFAULT_IGNORABLE_CHARS","BREAK_AFTER_CHARS","loadFont","fontUrl","tryLoad","request","XMLHttpRequest","onload","onerror","send","typeset","lineHeight","maxWidth","textAlign","textIndent","whiteSpace","overflowWrap","anchorX","anchorY","includeCaretPositions","chunkedBoundsSize","colorRanges","metricsOnly","mainStart","timings","fontLoad","typesetting","hasMaxWidth","glyphPositions","glyphData","glyphColors","caretPositions","visibleBounds","chunkedBounds","maxLineWidth","renderableGlyphCount","canWrap","typesetStart","fontSizeMult","halfLeading","topBaseline","caretHeight","caretBottomOffset","lineXOffset","currentLine","TextLine","glyphWidth","curLineCount","nextLine","isWhitespace","canBreakAfter","glyphAt","splitAt","adjustX","isSoftWrapped","fly","anchorXOffset","anchorYOffset","parsePercent","bidiLevelsResult","getEmbeddingLevels","lineYOffset","currentColor","renderableGlyphIndex","prevCharIndex","colorCharIndex","lineIndex","lineGlyphCount","trailingWhitespaceCount","justifyAdjust","whitespaceCount","justifyOffset","glyphInfo","flips","getReorderSegments","fi","startInLine","endInLine","setGlyphObj","glyphId","rtl","mirrored","getMirroredCharacter","caretLeft","caretRight","ligCount","fillLigatureCaretPositions","idx","pathBounds","glyphY","visX0","visY0","visX1","visY1","rect","chunkRect","blockBounds","pct","NaN","ligStartIndex","ligStartX","ligEndX","ligY","guessedAdvanceX","textLineProps","flyweight","newLine","obj","measure","DATA","TYPES","TYPES_TO_NAMES","ISOLATE_INIT_TYPES","LRI","RLI","FSI","STRONG_TYPES","AL","NEUTRAL_ISOLATE_TYPES","WS","ON","PDI","BN_LIKE_TYPES","BN","RLE","LRE","RLO","LRO","PDF","TRAILING_TYPES","getBidiCharType","parseData","openToClose","closeToOpen","canonical","parseCharacterMap","encodedString","includeReverse","prevPair","reverseMap","visit","fromCodePoint","parse$1","openingToClosingBracket","closingToOpeningBracket","getCanonicalBracket","mirrorMap","TYPE_L","TYPE_R","TYPE_EN","EN","TYPE_ES","ES","TYPE_ET","ET","TYPE_AN","AN","TYPE_CS","CS","TYPE_B","TYPE_S","TYPE_ON","TYPE_BN","TYPE_NSM","NSM","TYPE_AL","TYPE_LRO","TYPE_RLO","TYPE_LRE","TYPE_RLE","TYPE_PDF","TYPE_LRI","TYPE_RLI","TYPE_FSI","TYPE_PDI","embeddingLevelsResult","strLen","paragraphs","paragraph","lineStart","lineEnd","lineLevels","maxLevel","minOddLevel","lvl","i$2","segStart","getReorderedIndices","embedLevelsResult","getBidiCharTypeName","baseDirection","charTypes","charTypeCounts","changeCharType","oldType","embedLevels","isolationPairs","determineAutoEmbedLevel","FORMATTING_TYPES","nextEven","nextOdd","paraIdx","statusStack","_level","_override","_isolate","stackTop","overflowIsolateCount","overflowEmbeddingCount","validIsolateCount","charType","level$1","level$2","_isolInitIndex","isolInitIndex","levelRuns","currentRun","i$3","charType$1","isIsolInit","isPDI","_endsWithIsolInit","_startsWithPDI","isolatingRunSeqs","runIdx","run","seqRuns","pdiIndex","i$4","seqIndices","i$5","run$1","firstLevel","prevLevel","i$6","lastLevel","nextLevel","i$7","_seqIndices","_sosType","_eosType","seqIdx","seqIndices$1","sosType","eosType","si","i$8","prevType","sj","si$1","i$9","sj$1","prevCharType","si$2","i$10","si$3","i$11","prevType$1","nextType","sj$2","sj$3","si$4","i$12","sj$4","sj$5","si$5","i$13","sj$6","sj$7","si$6","prevStrongType","i$14","R_TYPES_FOR_N_STEPS","STRONG_TYPES_FOR_N_STEPS","bracketPairs","openerStack","si$7","oppositeBracket","seqIndex","stackIdx","stackChar","pairIdx","openSeqIdx","closeSeqIdx","foundStrongType","useStrongType","si$8","i$15","lr","getEmbedDirection","si$9","i$16","lr$1","si$10","si$11","si$12","niRunStart","niRunEnd","prevType$2","si2","nextType$1","si2$1","sj$8","i$17","level$3","type$1","j$1","isFSI","pdi","indexOfMatchingPDI","isolateStart","isolationLevel","getMirroredCharactersMap","embeddingLevels","mirror","getReorderedString","createTypesetter","bidiFactory","typesetInWorker","typesetter","GlyphsGeometry","templateGeometries","glyphIndexAttrName","curveRadius","setSide","verts","_detail","tpl","geom","front","back","frontAttrs","backAttrs","combined","vertCount","getTemplateGeometry","_curveRadius","_updateBounds","updateGlyphs","glyphBounds","glyphAtlasIndices","updateBufferAttr","_blockBounds","_chunkedBounds","setInstanceCount","bounds","bbox","halfPi","absR","leftAngle","rightAngle","applyClipRect","clipRect","attrName","newArray","Text","defaultMaterial","defaultStrokeColor","tempMat4","tempVec3a","tempVec3b","tempArray","defaultOrient","first","getFlatRaycastMesh","getCurvedRaycastMesh","syncStartEvent","syncCompleteEvent","SYNCABLE_PROPS","COPYABLE_PROPS","outlineWidth","outlineColor","outlineOpacity","outlineBlur","outlineOffsetX","outlineOffsetY","strokeWidth","strokeColor","strokeOpacity","fillOpacity","depthOffset","orientation","glyphGeometryDetail","gpuAccelerateSDF","debugSDF","sync","_needsSync","_isSyncing","_queuedSyncs","toObj","fromObj","totalStart","href","glyphsPerRow","glyphCount","glyphsByFont","promises","initContextLossHandling","fontGlyphs","neededSDFs","boundsIdx","positionsIdx","quadsStart","fontUnitsMargin","posX","posY","quads","sdfStart","sdf","currentHeight","neededRows","neededHeight","sdfTotal","totalBounds","totalBlockSize","_warm","warmUpSDFCanvas","getTextRenderInfo","textRenderInfo","_textRenderInfo","queued","isTroikaTextMaterial","_prepareForRender","_hadOwnSide","_actualSide","derivedMaterial","_derivedMaterial","_baseMaterial","_defaultMaterial","textMaterial","uTroikaSDFTexture","uTroikaSDFTextureSize","uTroikaSDFGlyphSize","uTroikaSDFExponent","uTroikaTotalBounds","uTroikaClipRect","uTroikaDistanceOffset","uTroikaOutlineOpacity","uTroikaFillOpacity","uTroikaPositionOffset","uTroikaCurveRadius","uTroikaBlurRadius","uTroikaStrokeWidth","uTroikaStrokeColor","uTroikaStrokeOpacity","uTroikaOrient","uTroikaUseGlyphColors","uTroikaSDFDebug","uDiffuseRE","createTextDerivedMaterial","onDispose","outlineMaterial","_outlineMtl","isTextOutlineMaterial","isOutline","textInfo","distanceOffset","blurRadius","_parsePercent","pad","colorObj","_input","orient","_orientation","rotMat","hSign","hAxis","vSign","vAxis","localPositionToTextCoords","worldPositionToTextCoords","raycastMesh","privateKey","deprMsgShown","_deprecated_anchor","querySelector","THREE","destination","timeDelta","_clock","removeFilter","getMasterVolume","setMasterVolume","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","audioLoader","bgMusic","fontLoader","matcapTexture","mainTitle","TextGeometry","subTitle","actTitle","titleText","subtext","acttext","buttonBG","enterText","infoBG","infoText","iText2","opacityKF","stringKF","textClip","textMixer","textAction","sizes","innerWidth","innerHeight","devicePixelRatio","cubeTextures","controls","touchAction","minDistance","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MIDDLE","touches","TWO","target0","position0","zoom0","_domElementKeyEvents","getPolarAngle","spherical","getAzimuthalAngle","getDistance","listenToKeyEvents","onKeyDown","saveState","STATE","NONE","quat","quatInverse","lastPosition","lastQuaternion","twoPI","rotateLeft","sphericalDelta","panOffset","zoomChanged","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","onPointerMove","onPointerUp","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","setPointerCapture","pointerId","addPointer","pointerType","trackPointer","onTouchStart","mouseAction","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","removePointer","releasePointerCapture","handleMouseWheel","handleKeyDown","pointer","passive","clock","previousTime","bgIndex","tick","keyCode"],"sourceRoot":""}